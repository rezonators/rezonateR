[{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Editing I: Using EasyEdit","text":"vignette use file saved end vignette(\"time_seq\"). always, don’t read tutorial beforehand, though may helpful new rezonateR.","code":"library(rezonateR) path = system.file(\"extdata\", \"rez007_edit1.Rdata\", package = \"rezonateR\", mustWork = T) rez007 = rez_load(path) #> Loading rezrObj ..."},{"path":[]},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"can-you-edit-this","dir":"Articles","previous_headings":"Editing rezrDFs: Some preliminaries","what":"Can you edit this?","title":"Editing I: Using EasyEdit","text":"know, editing data can tricky. accidentally remove information , results disastrous. Field access labels prevents accidentally changing things shouldn’t changing. Let’s look field access values unitDF: five possible field access values: key: primary key table. allowed change (unless turn non-key field, encouraged since basically break everything). try update fields using rezonateR functions, stop error. core: Core fields, mostly generated Rezonator. can change , give warning , changing core field strong potential break things. flex: Flexible fields, usually fields whose values enter Rezonator, though also flex fields automatically generated Rezonator. auto: Fields whose values automatically generated using information rezrDF. foreign: Fields whose values automatically generated using information different rezrDF. Fields like text tokenOrderFirst unitDF ’ve seen just , example, come entryDF therefore foreign nature.","code":"print(\"fieldaccess:\") #> [1] \"fieldaccess:\" fieldaccess(rez007$unitDF) #>                 id                doc          unitStart            unitEnd  #>              \"key\"             \"core\"             \"core\"             \"core\"  #>            unitSeq                pID             unitId          unitStart  #>             \"core\"             \"core\"             \"flex\"             \"flex\"  #>              docId            unitDur           pSentSeq   unitDurSkipPause  #>             \"flex\"             \"flex\"             \"flex\"             \"flex\"  #>            unitEnd unitStartSkipPause           sequence        participant  #>             \"flex\"             \"flex\"             \"flex\"             \"flex\"  #>            turnSeq               text         transcript   docTokenSeqFirst  #>             \"flex\"          \"foreign\"          \"foreign\"          \"foreign\"  #>    docTokenSeqLast    docWordSeqFirst     docWordSeqLast  #>          \"foreign\"          \"foreign\"          \"foreign\""},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"update-functions-and-reloads","dir":"Articles","previous_headings":"Editing rezrDFs: Some preliminaries","what":"Update functions and reloads","title":"Editing I: Using EasyEdit","text":"Whenever auto foreign fields table, means want automatically updated annotations progress. reload() function one core features rezonateR allows . reload() feature calls functions called updateFunctions. can access updateFunctions table using updateFunc()t: three reload functions: reloadLocal() takes rezrDF, updates auto fields. reloadForeign() take rezrDF rezrObj, updates foreign fields rezrDF using rezrObj (may may contain rezrDF). reload() combines two. start editing fields, experience power reloads. Let’s now first take look ’ll editing …","code":"updateFunct(rez007$unitDF) #> $text #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x0000018150fa0dd8> #> <environment: 0x000001815103ab38> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/text\" #>  #> $transcript #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x0000018150f9a910> #> <environment: 0x0000018150f93728> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/transcript\" #>  #> $docTokenSeqFirst #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x0000018150f8f740> #> <environment: 0x0000018150f97748> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/docTokenSeq\" #>  #> $docTokenSeqLast #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x0000018150f49f80> #> <environment: 0x0000018150f492d0> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/docTokenSeq\" #>  #> $docWordSeqFirst #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x0000018150f47b80> #> <environment: 0x0000018150f4a8e8> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/docWordSeq\" #>  #> $docWordSeqLast #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x0000018150f48f68> #> <environment: 0x0000018150f482f0> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/docWordSeq\""},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"the-core-four","dir":"Articles","previous_headings":"","what":"The core four","title":"Editing I: Using EasyEdit","text":"probably guessed title, vignette covers EasyEdit series functions rezonateR, simple powerful functions editing rezrDFs, can learnt even users exposure dplyr. EasyEdit consists four core functions, along bunch useful helpers. four core functions : addFieldLocal() addFieldForeign() changeFieldLocal() changeFieldForeign(). terms ‘local’ ‘foreign’ inspired , extended , database terminology. refer source information drawing create change field. two ‘local’ functions add change fields using information current rezrDF, two ‘foreign’ ones add change fields using information rezrDF. word ‘local’ can dropped using local functions. four basic functions can applied rezrDFs rezrObjs. general, whenever working rezrObj directly, safest work directly . However, working emancipated rezrDF - , rezrDF stored variable outside rezrObj - want apply functions single rezrDF. practice, using functions, difference rezrDF rezrObj versions latter require specify entity type layer. tutorial mainly use rezrObj editions; simply omit entity type layer fields applying functions rezrDFs. change functions act less way add functions, difference works existing field instead adding new one. tutorial mostly working add functions.","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"staying-local","dir":"Articles","previous_headings":"","what":"Staying local","title":"Editing I: Using EasyEdit","text":"Let’s start looking addFieldLocal() using simple application: tokenDF, let’s add field automatically calculates length word characters. function, entity specifies name entity like change, layer specifies layer within entity (empty string since token layers), fieldName name field ’re adding, expression R expression calculate new field, fieldaccess tells rezonateR make auto field updateFunction attached table. Let’s try , look results updateFunction: might notice (...) orthoLength 5. decide don’t want count non-words? One feasible solution use isWord, added vignette(\"time_seq\"): token word, set orthoLength number characters text column ; , set 0. Although EasyEdit functions require users use Tidyverse functions, still suggest Tidyverse function dplyr::case_when() best purpose. allows create vector whose value can calculated differently depending certain conditions. syntax dplyr::case_when() simple: argument function condition ~ value pair, want ‘else’ statement, simply use T condition last condition-value pair. case, can use function create vector values empty token word, text token word: Notice (...) now orthoLength 0. Now let’s spice bit adding complex field. complex field takes information multiple rows table. Let’s say working tokenDF, want new column longest length word appears unit token comes . case, groupField argument haven’t seen unit, specify field type \"complex\". expression uses function longestLength(), rezonateR function returns longest word series words. longestLength() belongs short collection functions useful extracting information bunch strings: shortestLength(): Find shortest token’s length. longestLength(): Find longest token’s length. shortest(): Get shortest token’s text. longest(): Get longest token’s text. concatenateAll(): Concatenate tokens together. base R functions might useful numeric values include max(), min(), range(), mean(), etc. Note times added field, ’ve set field access auto. set field access, automatically set flex, means column - text case - affected reloads.","code":"rez007 = addField(rez007, entity = \"token\", layer = \"\",                  fieldName = \"orthoLength\",                  expression = nchar(text),                  fieldaccess = \"auto\") print(\"A fragment of the updated table:\") #> [1] \"A fragment of the updated table:\" head(rez007$tokenDF %>% rez_select(id, text, orthoLength)) #> # A tibble: 6 × 3 #>   id            text  orthoLength #>   <chr>         <chr>       <int> #> 1 31F282855E95E (...)           5 #> 2 363C1D373B2F7 God             3 #> 3 3628E4BD4CC05 ,               1 #> 4 37EFCBECFD691 I               1 #> 5 12D67756890C1 said            4 #> 6 936363B71D59  I               1 print(\"The updateFunction:\") #> [1] \"The updateFunction:\" updateFunct(rez007$tokenDF, \"orthoLength\") #> function (df)  #> updateMutate(df, field, x) #> <environment: 0x00000181523eb9d0> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> character(0) rez007 = changeField(rez007, entity = \"token\", layer = \"\",                  fieldName = \"orthoLength\",                  expression = nchar(case_when(isWord ~ text, T ~ \"\")),                  fieldaccess = \"auto\") print(\"A fragment of the updated table:\") #> [1] \"A fragment of the updated table:\" head(rez007$tokenDF %>% rez_select(id, text, orthoLength)) #> # A tibble: 6 × 3 #>   id            text  orthoLength #>   <chr>         <chr>       <int> #> 1 31F282855E95E (...)           0 #> 2 363C1D373B2F7 God             3 #> 3 3628E4BD4CC05 ,               0 #> 4 37EFCBECFD691 I               1 #> 5 12D67756890C1 said            4 #> 6 936363B71D59  I               1 rez007 = addField(rez007, entity = \"token\", layer = \"\",                  fieldName = \"longestWordInUnit\",                  expression = longestLength(text),                  type = \"complex\",                  groupField = \"unit\",                  fieldaccess = \"auto\") head(rez007$tokenDF %>% select(id, text, longestWordInUnit)) #> # A tibble: 6 × 3 #>   id            text  longestWordInUnit #>   <chr>         <chr>             <int> #> 1 31F282855E95E (...)                 5 #> 2 363C1D373B2F7 God                   5 #> 3 3628E4BD4CC05 ,                     5 #> 4 37EFCBECFD691 I                     7 #> 5 12D67756890C1 said                  7 #> 6 936363B71D59  I                     7"},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"going-foreign","dir":"Articles","previous_headings":"","what":"Going foreign","title":"Editing I: Using EasyEdit","text":"Now let’s add simple foreign field. Let’s say look tokenDF, also want know whole unit’s words . (come handy want external editing!) trickiest part addFieldForeign keeping track target ’re aiming . need know: * source information new field create : means need know sourceEntity, sourceLayer, sourceFieldName. * location new target field: means need targetEntity, targetLayer, targetFieldName. * link source target tables. handled arguent targetForeignKeyName. need give name column containing IDs source table inside target table, .e. column target table tells us row source table look . case unit field tokenDF. name location source target fields, well field allows us link source target field. Specifically: source ‘text’ field units, set sourceEntity \"unit\" sourceLayer empty string, sourceFieldName \"text\". target ‘unitText’ field units, set targetEntity \"token\" targetLayer empty string, targetFieldName \"unitText\". foreign key, targetForeignKeyName, unit field tokenDF. Let’s put practice: Like local counterpart, addFieldForeign() also complex flavour, .e. can draw multiple lines different field. probably hardest part tutorial, buckle ! , ’re going add field unitDF tells us average length words within unit. ’re going base entryDF. time, targetForeignKeyName works bit differently. entries correspond unit given nodeMap, also need supply list entries inside unit node - , entryList, may recall vignette(\"import_save_basics\"). addFieldForeign() field called complexAction, function performed source field source table. longestLength() series functions seen can used .:","code":"rez007 = addFieldForeign(rez007,                 targetEntity = \"token\", targetLayer = \"\",                 sourceEntity = \"unit\", sourceLayer = \"\",                 targetForeignKeyName = \"unit\",                 targetFieldName = \"unitText\", sourceFieldName = \"text\",                 fieldaccess = \"foreign\") head(rez007$tokenDF %>% select(id, text, unitText)) #> # A tibble: 6 × 3 #>   id            text  unitText                                  #>   <chr>         <chr> <chr>                                     #> 1 31F282855E95E (...) (...) God ,                               #> 2 363C1D373B2F7 God   (...) God ,                               #> 3 3628E4BD4CC05 ,     (...) God ,                               #> 4 37EFCBECFD691 I     I said I was n't gon na do this anymore . #> 5 12D67756890C1 said  I said I was n't gon na do this anymore . #> 6 936363B71D59  I     I said I was n't gon na do this anymore . rez007 = addFieldForeign(rez007,                 targetEntity = \"unit\", targetLayer = \"\",                 sourceEntity = \"entry\", sourceLayer = \"\",                 targetForeignKeyName = \"entryList\",                 targetFieldName = \"averageWordLength\",                 sourceFieldName = \"text\",                 type = \"complex\",                 complexAction = function(x) mean(nchar(x)),                 fieldaccess = \"foreign\") head(rez007$unitDF %>% select(id, text, averageWordLength)) #> # A tibble: 6 × 3 #>   id            text                                                     avera…¹ #>   <chr>         <chr>                                                      <dbl> #> 1 2AD10A854E6D3 (...) God ,                                                 3    #> 2 BDD7D839325A  I said I was n't gon na do this anymore .                   2.82 #> 3 2752E3B395FC1 (...) <0> Stay up late .                                    3.17 #> 4 8487A33D1DF2  (...) <0> Kinda defeats the purpose of getting up in th…    4.15 #> 5 107F655C3299D (...) I know .                                              2.75 #> 6 307808364906D (.) And it 's a hard habit to break .                       2.8  #> # … with abbreviated variable name ¹​averageWordLength"},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"reloads-revisited","dir":"Articles","previous_headings":"","what":"Reloads revisited","title":"Editing I: Using EasyEdit","text":"created bunch auto fields, naturally want try reloads! Let’s try replacing zero sign <0> ∅ text column, commonly used linguistics papers. , can reload unitDF look impact freshly created averageWordLength. Notice reload rezrDFs order: first entryDF, using information tokenDF, unitDF, using information entryDF (please patient running computer, since reloads can take time):","code":"#unitDF before the update rez007$unitDF %>% filter(str_detect(text, \"<0>\")) %>% rez_select(id, text, averageWordLength) %>% head #> # A tibble: 6 × 3 #>   id            text                                                     avera…¹ #>   <chr>         <chr>                                                      <dbl> #> 1 2752E3B395FC1 (...) <0> Stay up late .                                    3.17 #> 2 8487A33D1DF2  (...) <0> Kinda defeats the purpose of getting up in th…    4.15 #> 3 3171F4905628A (.) If we sit down and <0> set some rules ,                 3    #> 4 37BE6893BC78E (H) <0> going to (...) our parents ,                        3.62 #> 5 7B0D1EF95CEF  and (...) <0> complaining about one another ,               4.75 #> 6 1B8C3B91FA2A1 (...) <MRC weekly house meetings MRC> to <0> discuss su…    4.58 #> # … with abbreviated variable name ¹​averageWordLength  #Change the a rez007$tokenDF = changeFieldLocal(rez007$tokenDF,                                   fieldName = \"text\",                                   expression = case_when(text == \"<0>\" ~ \"∅\", T ~ text)) rez007$entryDF = rez007$entryDF %>% reload(rez007) #> Error in updateLeftJoin(df, rezrObj, address, fkey, df2key, field) :  #>   Number of foreign keys (token does not match the number of primary keys in df1 (token). #> Error in updateLeftJoin(df, rezrObj, address, fkey, df2key, field) :  #>   Number of foreign keys (token does not match the number of primary keys in df1 (token). rez007$unitDF = rez007$unitDF %>% reload(rez007)  #unitDF after the update rez007$unitDF %>% filter(str_detect(text, \"<0>\")) %>% rez_select(id, text, averageWordLength) %>% head #> # A tibble: 0 × 3 #> # … with 3 variables: id <chr>, text <chr>, averageWordLength <dbl> #> # ℹ Use `colnames()` to see all variable names"},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"dealing-with-categorical-variables","dir":"Articles","previous_headings":"","what":"Dealing with categorical variables","title":"Editing I: Using EasyEdit","text":"tidyverse package forcats much powerful dealing categorical variables, us don’t want learn entirely new package, rezonateR provides easy ways deal categories. mergeCats() allows merge two categories. takes vector, normally column, first argument. Subsequently, name argument new category, value argument vector names old categories new category encompass (character values, even original column contains factors). example, Santa Barbara Corpus categorises laughter separate vocalisms. want merge \"Laugh\" `“Vocalism”, keeping everything else, can use code: renameCats() identical syntax. example, want rename Vocalism Voc:","code":"#Laughter tokens before head(rez007$tokenDF %>% select(id, doc, unit, text, kind) %>% filter(str_detect(text, \"@\"))) #> # A tibble: 6 × 5 #>   id            doc    unit          text  kind  #>   <chr>         <chr>  <chr>         <chr> <chr> #> 1 280154406371  sbc007 1E534FE7565B6 @     Laugh #> 2 8C04EB23AE43  sbc007 274331D2D2283 @@    Laugh #> 3 221FD665A9FA4 sbc007 EFCC48B9EDFA  @@@@@ Laugh #> 4 15B804DDB7C66 sbc007 3759142333BAE @@@@@ Laugh #> 5 261421712169B sbc007 A744F59296C2  @     Laugh #> 6 2D0821FE951A4 sbc007 273B241320492 @@@   Laugh  rez007 = changeField(rez007, entity = \"token\", layer = \"\",                  fieldName = \"kind\",                  expression = mergeCats(kind, Vocalism = c(\"Laugh\", \"Vocalism\")))  #Laughter tokens after head(rez007$tokenDF %>% select(id, doc, unit, text, kind) %>% filter(str_detect(text, \"@\"))) #> # A tibble: 6 × 5 #>   id            doc    unit          text  kind     #>   <chr>         <chr>  <chr>         <chr> <chr>    #> 1 280154406371  sbc007 1E534FE7565B6 @     Vocalism #> 2 8C04EB23AE43  sbc007 274331D2D2283 @@    Vocalism #> 3 221FD665A9FA4 sbc007 EFCC48B9EDFA  @@@@@ Vocalism #> 4 15B804DDB7C66 sbc007 3759142333BAE @@@@@ Vocalism #> 5 261421712169B sbc007 A744F59296C2  @     Vocalism #> 6 2D0821FE951A4 sbc007 273B241320492 @@@   Vocalism #Breath tokens before head(rez007$tokenDF %>% select(id, doc, unit, text, kind) %>% filter(str_detect(text, \"\\\\(H\\\\)\"))) #> # A tibble: 6 × 5 #>   id            doc    unit          text  kind     #>   <chr>         <chr>  <chr>         <chr> <chr>    #> 1 B7392EC0FE18  sbc007 1EFAE7BD41500 (H)   Vocalism #> 2 34038223F0E2  sbc007 EDCE0A20D5B3  (H)   Vocalism #> 3 2C6A695AAE730 sbc007 3759142333BAE (H)   Vocalism #> 4 1094B3337D73D sbc007 1F858888540F6 (H)   Vocalism #> 5 3127D3EC0E7C5 sbc007 1017EC66C38EB (H)   Vocalism #> 6 2EA63A8716B28 sbc007 10B9591B876F8 (H)   Vocalism  rez007 = changeField(rez007, entity = \"token\", layer = \"\",                  fieldName = \"kind\",                  expression = renameCats(kind, Voc = \"Vocalism\"))  #Laughter tokens after head(rez007$tokenDF %>% select(id, doc, unit, text, kind) %>% filter(str_detect(text, \"\\\\(H\\\\)\"))) #> # A tibble: 6 × 5 #>   id            doc    unit          text  kind  #>   <chr>         <chr>  <chr>         <chr> <chr> #> 1 B7392EC0FE18  sbc007 1EFAE7BD41500 (H)   Voc   #> 2 34038223F0E2  sbc007 EDCE0A20D5B3  (H)   Voc   #> 3 2C6A695AAE730 sbc007 3759142333BAE (H)   Voc   #> 4 1094B3337D73D sbc007 1F858888540F6 (H)   Voc   #> 5 3127D3EC0E7C5 sbc007 1017EC66C38EB (H)   Voc   #> 6 2EA63A8716B28 sbc007 10B9591B876F8 (H)   Voc"},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"adding-rows","dir":"Articles","previous_headings":"","what":"Adding rows","title":"Editing I: Using EasyEdit","text":"Adding rows operation time. general, recommended just re-import whole thing run code . occasional situation , addRow() comes handy. need add core flex fields add row. ID automatically generated, foreign/auto fields automatically added. specifying rezrDF rezrObj entity layer, argument name column name, value value column.","code":"rez007 = addRow(rez007, \"trail\", \"default\",                 doc = \"sbc007\",                 chainCreateSeq = max(rez007$trailDF$default$chainCreateSeq) + 1,                 name = \"Danae\",                 chainSize = 1) tail(rez007$trailDF$default) #> # A tibble: 6 × 5 #>   id            doc    chainCreateSeq name                      chainSize #>   <chr>         <chr>           <dbl> <chr>                         <dbl> #> 1 E57D22CC7190  sbc007             16 time (spending)                   1 #> 2 2E79208C27DC2 sbc007             17 Ron's work                        1 #> 3 21B1DDD41EFB0 sbc007             50 impersonal you                    3 #> 4 368B8B1D9E62C sbc007             56 up there                          1 #> 5 251AE6A659F6F sbc007              3 the purpose of getting up         1 #> 6 ycr8DldUz1ZNf sbc007             88 Danae                             1 #Note: chainSize is currently flex as it is supplied by Rezonator and not calculated by rezonateR, but this may change in the future."},{"path":"https://rezonators.github.io/rezonateR/articles/edit_easyEdit.html","id":"onwards","dir":"Articles","previous_headings":"","what":"Onwards!","title":"Editing I: Using EasyEdit","text":"next tutorial, vignette(\"edit_tidyRez\") relatively short, assume familiarity Tidyverse package dplyr. like something goes beyond capabilities easyRez, recommended familiarise relevant dplyr function first, read TidyRez vignette. familiar Tidyverse intention learn yet, may elect jump next tutorial go straight vignette(\"edit_external\"). lest forget, always save!","code":"savePath = \"rez007.Rdata\" rez_save(rez007, savePath) #> Saving rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/articles/edit_tidyRez.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Editing II: Using TidyRez","text":"tutorial TidyRez, subset functions derived dplyr Tidyverse. use file saved end vignette(\"edit_easyRez\"). always, don’t read tutorial beforehand, though may helpful new rezonateR. Unlike tutorials, one brief, assumes knowledge dplyr.","code":"library(rezonateR) path = system.file(\"extdata\", \"rez007_edit2.Rdata\", package = \"rezonateR\", mustWork = T) rez007 = rez_load(path) #> Loading rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/articles/edit_tidyRez.html","id":"why-tidyrez","dir":"Articles","previous_headings":"","what":"Why TidyRez?","title":"Editing II: Using TidyRez","text":"general, TidyRez functions called adding rez_ front dplyr function name, rez_group_by() rez_mutate(). might wonder ’d want use TidyRez instead plain dplyr. main reason TidyRez functions allow keep /update field access values, inNodeMap values, updateFunctions. Using base R classic dplyr functions rezrDFs result reload() fails (unless add attributes back ). see power TidyRez, let’s try creating emancipated rezrDF subset original columns. , take trackDF$refexpr, table referential expressions. damage one fields using classic dplyr function. can see , emancipated rezrDF can still updated using rezrObj, effectively overriding damage: warning order: TidyRez updates current table. tables references table ’re editing, updated. must bear mind using rez_select rez_rename. problems arise use functions emancipated rezrDFs. However, use functions rezrDFs within rezrObjs, manually update fields rezrDFs refer field ’ve deleted added. plan add rename feature EasyEdit near future update references rezrDFs.","code":"refTable = rez007$trackDF$default %>% rez_select(id, token, chain, name, text, tokenOrderLast) print(\"Before:\") #> [1] \"Before:\" head(refTable %>% select(id, tokenOrderLast)) #> # A tibble: 6 × 2 #>   id            tokenOrderLast #>   <chr>                  <dbl> #> 1 1096E4AFFFE65              1 #> 2 92F20ACA5F06               3 #> 3 7E5BB65072C                8 #> 4 1F74D2B049FA4              9 #> 5 2485C4F740FC0              2 #> 6 1BF2260B4AB78              5 refTable = refTable %>% mutate(tokenSeqLast = 1) #Damage refTable with a classic dplyr function print(\"After:\") #> [1] \"After:\" refTable = refTable %>% reload(rez007) head(refTable %>% select(id, tokenOrderLast)) #> # A tibble: 6 × 2 #>   id            tokenOrderLast #>   <chr>                  <dbl> #> 1 1096E4AFFFE65              1 #> 2 92F20ACA5F06               3 #> 3 7E5BB65072C                8 #> 4 1F74D2B049FA4              9 #> 5 2485C4F740FC0              2 #> 6 1BF2260B4AB78              5"},{"path":"https://rezonators.github.io/rezonateR/articles/edit_tidyRez.html","id":"what-functions-are-available","dir":"Articles","previous_headings":"","what":"What functions are available?","title":"Editing II: Using TidyRez","text":"dplyr functions completely safe use rezonateR, mostly focus selecting rows table, dplyr::filter(), dplyr::arrange() dplyr::slice(). Currently implemented TidyRez functions include: rez_add_row() adding new entries rez_mutate() adding editing columns rez_rename() renaming columns rez_bind_rows() combining rezrDFs vertically rez_group_split() splitting rezrDFs vertically rez_group_by() rez_ungroup() grouping rez_select() selecting certain columns inside rezrDF rez_left_join() left joins Potential future additions include rez_bind_cols() rez_outer_join(); suggestions others welcome use . functions rez_dfop() rez_validate_fieldchange() used behind scenes TidyRez functions; want create , please look documentation functions (sent pull request ’re done !).","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/edit_tidyRez.html","id":"rez_left_join-a-special-case","dir":"Articles","previous_headings":"","what":"rez_left_join(): A special case","title":"Editing II: Using TidyRez","text":"TidyRez functions’ syntax deviate dplyr minimally ways can read documentation. However, rez_left_join worth quick mention. addition fieldaccess field rezrObj field, self-explanatory, fkey field df2Address field. fkey name field first data.frame corresponds IDs second data.frame. df2Address string tells rez_left_join find source rezrDF next time. source rezrDF doesn’t belong layer, e.g. tokenDF, just type . source rezrDF belongs layer, put ‘/’ table layer, e.g. ‘trackDF/refexpr’. TODO: Example","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/edit_tidyRez.html","id":"onwards","dir":"Articles","previous_headings":"","what":"Onwards!","title":"Editing II: Using TidyRez","text":"Using easyEdit tidyRez, hard use rules add automatic annotations, correct hand spreadsheet program. next tutorial, vignette(\"edit_external\"), cover exactly use case. export data .csv, edit outside R, import back. always, saving virtue!","code":"savePath = \"rez007.Rdata\" rez_save(rez007, savePath) #> Saving rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"meet-our-file","dir":"Articles","previous_headings":"","what":"Meet our file!","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"begin , tutorial using simple Rezonator file. file contains minimal amount annotation - just enough explain basic workings RezonateR without bogged long loading times result extensively annotated files. file based text Tree’s Life, conversation two sisters. first part file, deals topic one sisters’ roommates, annotated coreference (trails), resonance, well argument structure (trees). also largely arbitrary stacks drawn throughout file. image Rezonator interface trail (wavy lines), resonances (straight lines) dependency tree nav window.","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"node-maps-the-secret-life-of-rezonator-files","dir":"Articles","previous_headings":"Meet our file!","what":"Node maps: The secret life of Rezonator files","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":".rez files produced Rezonator visualised Rezonator interface, lead secret double life! Internally, represented structure called node map. entities inside .rez files represented nodes, store information form text, numbers pointers nodes. get idea node map looks like, let’s load .rez file. (never need directly working rezonateR, import function handle ; demonstration purposes .) ’ll extract node map .rez file importing R, store variable rez007_nm. Let’s zero single node. simplest type node token, ‘word’ (may morpheme unit depending language data ’re working .). Inside Rezonator interface, tokens basic unit may interact . Let’s try word midnight. word midnight’* see screen ID 28A862601A235, ’s key access node map . Let’s go ahead examine information embeddded inside node: type value indicates ’re looking token. docTokenSeq indicates position word within document. unit pointer node contains token’s unit. place gives position token within unit. next three lists pointers larger structures may contain token. (‘lists’ .rez files represented vectors, lists, R.) inEntryList, inChainsList inChunkList give entries, chains chunks ‘midnight’ found. discuss entries next section. chain either Track chain, .e. trail, Rez chain, .e. resonance. case, ‘midnight’ put trail, albeit one contains (.e. singleton), see coloured box around word, links emanating . see pointer track chain. belong chunks, .e. larger rectangles typically consisting multiple words. tagMap specific node includes tags given raw file first imported Rezonator, well tags created Rezonator manually added Rezonator. tags given import; see examples later.","code":"library(rezonateR) path = system.file(\"extdata\", \"sbc007.rez\", package = \"rezonateR\", mustWork = T)  library(rjson) getwd() #> [1] \"C:/Users/User/Documents/GitHub/rezonateR/vignettes\" rez007_json = rjson::fromJSON(file = path) rez007_nm = rez007_json[[\"ROOT\"]][[1]][[\"nodeMap\"]] midnight = rez007_nm[[\"28A862601A235\"]] print(paste0(\"type: \", midnight$type)) #> [1] \"type: token\" print(paste0(\"docTokenSeq: \", midnight$docTokenSeq)) #> [1] \"docTokenSeq: 78\" print(paste0(\"unit: \", midnight$unit)) #> [1] \"unit: 2D1B3667B6110\" print(paste0(\"place: \", midnight$place)) #> [1] \"place: 6\" print(paste0(\"inEntryList: \", midnight$inEntryList)) #> [1] \"inEntryList: 1A598AE39592B\" print(paste0(\"inChainsList: \", midnight$inChainsList)) #> [1] \"inChainsList: 333DF666BC522\" print(paste0(\"inChunkList: \", midnight$inChunkList)) #> [1] \"inChunkList: \" print(\"tagMap:\") #> [1] \"tagMap:\" print(sapply(midnight$tagMap, c)) #>       kind      place       text transcript    endNote      order   negPlace  #>     \"Word\"        \"6\" \"midnight\" \"midnight\"         \"\"        \"6\"        \"1\"  #>  corpusSeq pSentOrder    POS_dft   tokenSeq  chunkType  turnOrder  #>    \"51219\"       \"14\"     \"NOUN\"       \"86\"         \"\"       \"25\""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"tokens-and-units","dir":"Articles","previous_headings":"Meet our file!","what":"Tokens and units","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"entry leftover structure Rezonator currently serves real purpose, except intermediate layer units tokens. general rule, entries correspond one--one tokens. technicality occasionally need know working RezonateR. Basically, unit contains pointers entries consists , attribute entryList. look individual tokens unit, , go individual entries’ nodes look corresponding token. example, entryList unit 2D1B3667B6110: look first token unit, word ‘’, need look token value associated entry: Let’s now verify token indeed word ‘’:","code":"print(\"entryList of unit 2D1B3667B6110:\") #> [1] \"entryList of unit 2D1B3667B6110:\" print(rez007_nm[[\"2D1B3667B6110\"]][[\"entryList\"]]) #> [1] \"24796648BFF31\" \"13E3DECAC86FF\" \"1D064F5FF52FD\" \"B2985F3730E0\"  #> [5] \"B6CC005C893A\"  \"28B6FB7D926CC\" \"3794C89559C6D\" print(\"token corresponding to entry 24796648BFF31:\") #> [1] \"token corresponding to entry 24796648BFF31:\" rez007_nm[[\"24796648BFF31\"]][[\"token\"]] #> [1] \"A27E39A69272\" print(\"token corresponding to token A27E39A69272:\") #> [1] \"token corresponding to token A27E39A69272:\" rez007_nm[[\"A27E39A69272\"]]$tagMap$text #> [1] \"if\""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"chunks","dir":"Articles","previous_headings":"Meet our file!","what":"Chunks","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"Chunks large rectangular boxes typically span one token. chunk automatically created whenever add track rez entry spans one token, add single-token track rez entry. , example, midnight put inside chunk, purpose getting morning put chunk moment became part track chain. also chunks belong chains, sometimes called blank chunks. document, blank chunks used mark verbal complexes English, including verbs auxiliaries, well intervening adverbs. nominal intervenes auxiliary verb, auxiliary excluded verb chunk. word stay line 3 belongs blank chunk chunk track chain. Let’s look two chunks. ID token stay 1A0742C9033E5: two chunks contain stay 35E3E0AB6803A ans 15B9BB5D5086C. 35E3E0AB6803A larger chunk belongs chain (note individual token stay 1A0742C9033E5 belong chain): manually added field file, chunkType, specifies type chunk certain chunk . field blank mentions track chains, filled verbs: point important later import, used separate chunks layers.","code":"print(\"Chunks that contain 1A0742C9033E5:\") #> [1] \"Chunks that contain 1A0742C9033E5:\" rez007_nm[[\"1A0742C9033E5\"]]$inChunkList #> [1] \"35E3E0AB6803A\" \"15B9BB5D5086C\" print(\"Chains that contain 35E3E0AB6803A:\") #> [1] \"Chains that contain 35E3E0AB6803A:\" rez007_nm[[\"35E3E0AB6803A\"]]$inChainsList #> [1] \"2A01379C5D049\" print(\"Chains that contain 1A0742C9033E5:\") #> [1] \"Chains that contain 1A0742C9033E5:\" rez007_nm[[\"1A0742C9033E5\"]]$inChainsList #> list() print(\"chunkType of 35E3E0AB6803A:\") #> [1] \"chunkType of 35E3E0AB6803A:\" rez007_nm[[\"35E3E0AB6803A\"]]$tagMap$chunkType #> [1] \"\" print(\"chunkType of 15B9BB5D5086C:\") #> [1] \"chunkType of 15B9BB5D5086C:\" rez007_nm[[\"15B9BB5D5086C\"]]$tagMap$chunkType #> [1] \"verb\""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"entries-links-and-chains","dir":"Articles","previous_headings":"Meet our file!","what":"Entries, links and chains","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"Rezonator currently three data types termed ‘chains’. specific names entries. : chain track entities (.e. mentions) called trail - .e. coreference chain containing mentions chain rez entities resonances - rez entity specific instance word resonated somewhere else document, resonance collection resonating tokens chain cards stack. first two types entries correspond words chunks, third type entries correspond units. Let’s look track 1BF2260B4AB78, corresponds chunk Stay late 35E3E0AB6803A seen : Stay late belongs chain, corresponds ‘token’ (actually chunk - quirk .rez format important remember working rezonateR) 35E3E0AB6803A. goalLinkList list links starts entry. Links live world particularly important working RezonateR, can safely ignore now. find member entries chain contains, can look setIDList. Entries chains, like tokens (units), tagMaps, generally correspond tags generated manually added Rezonator. ’s tagMap track trail ’ve seen. track contains tags gapWords (number words previous track) gapUnits (number units previous track), well counts number tokens characters inside track. tag chainSize indicates number entries inside chain. automatically generated Rezonator covered detail discussing coreference.","code":"rez007_nm[[\"1BF2260B4AB78\"]]$chain #> [1] \"2A01379C5D049\" rez007_nm[[\"1BF2260B4AB78\"]]$token #> [1] \"35E3E0AB6803A\" rez007_nm[[\"1BF2260B4AB78\"]]$goalLinkList #> [1] \"ED8C92307B42\" \"52452779949\"  \"601CE9FAEBDB\" rez007_nm[[\"2A01379C5D049\"]]$setIDList #> [1] \"1BF2260B4AB78\" \"6B37B5A80F2A\"  \"1F74D2B049FA4\" \"3098AB24A0FA6\" #> [5] \"2E01153F693D3\" \"36B8918BB6E64\" sapply(rez007_nm[[\"1BF2260B4AB78\"]]$tagMap, c) #>   gapWords  charCount tokenCount   gapUnits  #>          5         12          3          1 sapply(rez007_nm[[\"2A01379C5D049\"]]$tagMap, c) #> chainSize  #>         6"},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"the-tree-map","dir":"Articles","previous_headings":"Meet our file!","what":"The tree map","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"Information related trees reside sub-map , separate things ’ve discussing far. example tree, containing word ‘midnight’ discussed time ago: image dependency tree Rezonator interface, root word ‘’m’, linked dependents ‘’, ‘’, ‘midnight’. three types entities inside tree map: treeEntry, treeLink tree: tree , well individual tree. treeEntry ‘node’ tree. may contain one multiple tokens - ‘midnight’ example, example, contains two tokens, two contain single token. one everything else branches , layer 0, called root. treeLink link two treeEntry entities Unlike links, treeLinks important working rezonateR! ID tree see image 10F850E894052. Let’s first see tokens treeEntrys consists : Now let’s examine one entries closely. Note lists include entries actually included tree; often exclude analysis. 31630BD346EC7 ID ‘midnight’, can examine attributes. sourceLink attribute gives ID link midnight link ’m, tokenList gives token IDs two tokens midnight: wrap , looking link? can look source (parent) goal (child) treeEntry IDs, well tag Relation, ’ve annotated Subj:","code":"rez007_nm$treeMap[[\"10F850E894052\"]]$tokenList #> [1] \"A27E39A69272\"  \"3424455C58367\" \"35B9A7BEFAE4F\" \"13CB401695D9D\" #> [5] \"176B4A79BFF4C\" \"28A862601A235\" \"2BFC755BC21BF\" rez007_nm$treeMap[[\"10F850E894052\"]]$setIDList #> [1] \"85D2A496EF73\"  \"31C3D31EB2618\" \"23BEEC722C8A0\" \"108A09B31C449\" #> [5] \"31630BD346EC7\" \"2966966EBD888\" print(rez007_nm$treeMap[[\"31630BD346EC7\"]]$sourceLink) #> [1] \"3FCE9430713C\" print(rez007_nm$treeMap[[\"31630BD346EC7\"]]$tokenList) #> [1] \"176B4A79BFF4C\" \"28A862601A235\" print(rez007_nm$treeMap[[\"2CBAF1D3EE0C8\"]]$source) #> [1] \"23BEEC722C8A0\" print(rez007_nm$treeMap[[\"2CBAF1D3EE0C8\"]]$goal) #> [1] \"31C3D31EB2618\" print(rez007_nm$treeMap[[\"2CBAF1D3EE0C8\"]]$tagMap$Relation) #> [1] \"Subj\""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"importing-our-file","dir":"Articles","previous_headings":"","what":"Importing our file","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"Let’s now actually import file RezonateR! Obviously first step import file: import function importRez(). importing, two important settings need set. store values settings variables importing. first one layerRegex: layerRegex allows separate chunks, tracks, rezes trees well associated entities trails treeEntries layers. (moment, technically possible meaningful stack layers, yet implemented stacks.) layer receive separate data frame. file, two types chunks: verbs (largely) referential expressions. Verbs annotated chunkType value ‘verb’, referential expressions unannotated. order tell rezonateR, need set layerRegex. need pass list layerRegex. keys list must list ‘chunk’, ‘track’, ‘rez’, ‘tree’; can’t use keywords (‘trail’). entries another list three values: field, regex names. field field specifies name field determine layer status. field regex specifies list regular expressions , matched, put entity certain layer. field names specifies layer names; one item regex list (case extra item \"refexpr\"), layer items match regexes. assign layers chunk, track, rez tree, everything placed layer called default.* case, track, rez tree (related entity) put layer called default. see works later . setting concatFields: just looking nodeMaps, often feel lost many nodes semblance text . order fix , can concatenate text transript fields tokens associated node. fields must specified vector passed concatFields. import function, using settings . ’re following , note takes long! tree-related steps , particular, take extra time process. variable rez007 belongs class rezrObj. save imported rezrObj (something definitely want - nobody wants import !), use function rez_save(). load , use function rez_load(). functions quite easy: rez_save() simply requires rezrObj save path, rez_load() path load . rezrObj consists two components: nodeMap bunch rezrDFs. Let’s look nodeMap object first.","code":"library(rezonateR) layerRegex = list(chunk = list(field = \"chunkType\",                                regex = c(\"verb\"),                                names = c(\"verb\", \"refexpr\"))) concatFields = c(\"text\", \"transcript\") rez007 = importRez(path,                    layerRegex = layerRegex,                    concatFields = concatFields) #> Import starting - please be patient ... #> Creating node maps ... #> Creating rezrDFs ... #> Adding foreign fields to rezrDFs and sorting (this is the slowest step) ... #> >Adding to unit entry DF ... #> >Adding to unit DF ... #> >Adding to chunk DF ... #> >Adding to track DFs ... #> >Adding to track DFs ... #> >Adding to tree DFs ... #> Splitting rezrDFs into layers ... #> A few finishing touches ... #> Done! savePath = \"rez007.Rdata\" rez_save(rez007, savePath) #> Saving rezrObj ... rez007 = rez_load(savePath) #> Loading rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"meeting-our-nodemap-again","dir":"Articles","previous_headings":"Importing our file","what":"Meeting our nodeMap again","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"felt bit lost exploring .rez files , ’s good news: nodeMaps RezonateR slightly easier navigate node map .rez files (phew)! major difference rezonateR nodeMaps, every item type belongs list. nodes rez007 nodeMap organised categories:","code":"names(rez007$nodeMap) #>  [1] \"entry\"     \"token\"     \"unit\"      \"link\"      \"card\"      \"trail\"     #>  [7] \"chunk\"     \"track\"     \"rez\"       \"stack\"     \"resonance\" \"doc\"       #> [13] \"corpus\"    \"treeEntry\" \"treeLink\"  \"tree\""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"from-nodemap-to-rezrdf","dir":"Articles","previous_headings":"Importing our file","what":"From nodeMap to rezrDF","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"rezrDF soul rezonateR. rezrDFs similar individual entity list rezonateR nodeMap. However, instead list (dictionary) representation, rezrDFs data frames, row node, column attributes. ways columns identical node attributes: id column gives ID node. tagMaps ‘flattened’ (.e. tag column). attributes Rezonator-internal (e.g. focsed visualisation Rezonator) useful data analysis discarded; can always view nodeMap really want . List attributes eliminated. (elaborate later.) entity type rezrObj (token, track, trail, etc.) corresponding variable (tokenDF, trackDF, trailDF, etc.) directly accessed rezrObj. example, access rezrDF corresponding tokens, use rez007$tokenDF. nodeMap, top-level entries rezrObj rezrDF variables: beginning tokenDF. Notice id column beginning, tags getting columns: entity types one layer, chunk trail, list rezrDFs instead single rezrDF. example, rez007$chunkDF contains two rezrDFs. Note column layer contains name layer, identical across rows rezrDF: Meanwhile, rez007$trailDF contains one, default: multiple layers, many cases need combine information layers perform certain actions rezonateR. functions conveniently. combineLayers combines rezrDFs certain entity type. use , simply specify rezrObj entity type string. additional parameter, type, may take values \"intersect\" \"union\". determines whether fields present layers removed, retained NA values rows rezrDFs don’t column. nodeMap, often see lists values, e.g. units contain list entries inside . However, lists eliminated rezrDF representations. Notice lack entry lists unitDF: simplicity’s sake. Although technically possible include lists data frames, clumsy likely slow rezonateR lot . course, understandably sometimes still need refer individual component larger entity. function getLowerFieldList() way, somewhat clumsy, : , extract ‘kinds’ (Word, Pause, etc.) tokens certain units. fieldName attribute ’re extracting, simpleDF rezrDF ‘smaller’ entity, complexDF rezrDF ‘larger’ entity, complexNodeMap nodeMap ‘larger’ entity, listName name list inside node complexNodeMap gives lower-level entries, complexIDs ‘larger’ entities (case units) want extract values . left blank, every single complex node (case every unit). complicated function. One annoying use case get properties tokens track entries, provide function getTrackTokens() easily. example, code extracts kind value tracks: general, though, preferable minimise type extraction. coming tutorials explain can common operations without resorting using getLowerFieldList().","code":"names(rez007) #>  [1] \"nodeMap\"     \"chunkDF\"     \"docDF\"       \"entryDF\"     \"linkDF\"      #>  [6] \"mergedDF\"    \"resonanceDF\" \"rezDF\"       \"tokenDF\"     \"trackDF\"     #> [11] \"trailDF\"     \"treeDF\"      \"treeEntryDF\" \"treeLinkDF\"  \"unitDF\" head(rez007$tokenDF) #> # A tibble: 6 × 18 #>   id         doc   unit  docTo…¹ token…² kind  place text  trans…³ endNote order #>   <chr>      <chr> <chr>   <dbl>   <dbl> <chr> <chr> <chr> <chr>   <chr>   <chr> #> 1 31F282855… sbc0… 2AD1…       1       1 Pause \"\"    (...) (...)   \"\"      1     #> 2 363C1D373… sbc0… 2AD1…       2       2 Word  \"1\"   God   God     \"\"      2     #> 3 3628E4BD4… sbc0… 2AD1…       3       3 EndN… \"\"    ,     ,       \"conti… 3     #> 4 37EFCBECF… sbc0… BDD7…       4       1 Word  \"1\"   I     I       \"\"      1     #> 5 12D677568… sbc0… BDD7…       5       2 Word  \"2\"   said  said    \"\"      2     #> 6 936363B71… sbc0… BDD7…       6       3 Word  \"3\"   I     I       \"\"      3     #> # … with 7 more variables: negPlace <chr>, corpusSeq <chr>, pSentOrder <chr>, #> #   POS_dft <chr>, tokenSeq <chr>, chunkType <chr>, turnOrder <chr>, and #> #   abbreviated variable names ¹​docTokenSeq, ²​tokenOrder, ³​transcript #> # ℹ Use `colnames()` to see all variable names head(rez007$chunkDF$refexpr) #> # A tibble: 6 × 22 #>   id           doc   name   nest kind  place text  trans…¹ endNote order negPl…² #>   <chr>        <chr> <chr> <dbl> <chr> <chr> <chr> <chr>   <chr>   <chr> <chr>   #> 1 35E3E0AB680… sbc0… Chun…     2 \"\"    \"\"    Stay… Stay u… \"\"      \"\"    \"\"      #> 2 1F6B5F0B3FF… sbc0… Chun…     3 \"\"    \"\"    the … the pu… \"\"      \"\"    \"\"      #> 3 24FE2B219BD… sbc0… Chun…     2 \"\"    \"\"    gett… gettin… \"\"      \"\"    \"\"      #> 4 158B579C1BA… sbc0… Chun…     1 \"\"    \"\"    the … the mo… \"\"      \"\"    \"\"      #> 5 2B6521E8813… sbc0… Chun…     1 \"\"    \"\"    all … all th… \"\"      \"\"    \"\"      #> 6 5B854594DD34 sbc0… Chun…     2 \"\"    \"\"    the … the wa… \"\"      \"\"    \"\"      #> # … with 11 more variables: corpusSeq <chr>, pSentOrder <chr>, POS_dft <chr>, #> #   tokenSeq <chr>, chunkType <chr>, turnOrder <chr>, tokenOrderFirst <dbl>, #> #   docTokenSeqFirst <dbl>, tokenOrderLast <dbl>, docTokenSeqLast <dbl>, #> #   layer <chr>, and abbreviated variable names ¹​transcript, ²​negPlace #> # ℹ Use `colnames()` to see all variable names head(rez007$chunkDF$verb) #> # A tibble: 6 × 22 #>   id           doc   name   nest kind  place text  trans…¹ endNote order negPl…² #>   <chr>        <chr> <chr> <dbl> <chr> <chr> <chr> <chr>   <chr>   <chr> <chr>   #> 1 210FB26A315A sbc0… Chun…     1 \"\"    \"\"    said  said    \"\"      \"\"    \"\"      #> 2 744AD104FE64 sbc0… Chun…     1 \"\"    \"\"    was … was n'… \"\"      \"\"    \"\"      #> 3 15B9BB5D508… sbc0… Chun…     1 \"\"    \"\"    Stay  Stay    \"\"      \"\"    \"\"      #> 4 1A14BB68EDA… sbc0… Chun…     1 \"\"    \"\"    defe… defeats \"\"      \"\"    \"\"      #> 5 2CCD5F5A950… sbc0… Chun…     1 \"\"    \"\"    know  know    \"\"      \"\"    \"\"      #> 6 1F1135429F3… sbc0… Chun…     1 \"\"    \"\"    's    's      \"\"      \"\"    \"\"      #> # … with 11 more variables: corpusSeq <chr>, pSentOrder <chr>, POS_dft <chr>, #> #   tokenSeq <chr>, chunkType <chr>, turnOrder <chr>, tokenOrderFirst <dbl>, #> #   docTokenSeqFirst <dbl>, tokenOrderLast <dbl>, docTokenSeqLast <dbl>, #> #   layer <chr>, and abbreviated variable names ¹​transcript, ²​negPlace #> # ℹ Use `colnames()` to see all variable names head(rez007$trailDF$default) #> # A tibble: 6 × 5 #>   id            doc    chainCreateSeq name                               chain…¹ #>   <chr>         <chr>           <dbl> <chr>                                <dbl> #> 1 2053E98E98EDE sbc007             10 the way they were feeling                2 #> 2 2DFABF7A78227 sbc007             68 right now                                1 #> 3 13B30F106D8DF sbc007             27 The two couples                         10 #> 4 21E91EA9BEFE2 sbc007             49 ànything positive about Tim's unc…       1 #> 5 14CE0A33F22EB sbc007             71 the thing that really scares Alice       3 #> 6 2B670736C6823 sbc007             87 Trail 87                                 1 #> # … with abbreviated variable name ¹​chainSize head(combineLayers(rez007, \"chunk\", type = \"intersect\")) #> # A tibble: 6 × 22 #>   id           doc   name   nest kind  place text  trans…¹ endNote order negPl…² #>   <chr>        <chr> <chr> <dbl> <chr> <chr> <chr> <chr>   <chr>   <chr> <chr>   #> 1 35E3E0AB680… sbc0… Chun…     2 \"\"    \"\"    Stay… Stay u… \"\"      \"\"    \"\"      #> 2 1F6B5F0B3FF… sbc0… Chun…     3 \"\"    \"\"    the … the pu… \"\"      \"\"    \"\"      #> 3 24FE2B219BD… sbc0… Chun…     2 \"\"    \"\"    gett… gettin… \"\"      \"\"    \"\"      #> 4 158B579C1BA… sbc0… Chun…     1 \"\"    \"\"    the … the mo… \"\"      \"\"    \"\"      #> 5 2B6521E8813… sbc0… Chun…     1 \"\"    \"\"    all … all th… \"\"      \"\"    \"\"      #> 6 5B854594DD34 sbc0… Chun…     2 \"\"    \"\"    the … the wa… \"\"      \"\"    \"\"      #> # … with 11 more variables: corpusSeq <chr>, pSentOrder <chr>, POS_dft <chr>, #> #   tokenSeq <chr>, chunkType <chr>, turnOrder <chr>, tokenOrderFirst <dbl>, #> #   docTokenSeqFirst <dbl>, tokenOrderLast <dbl>, docTokenSeqLast <dbl>, #> #   layer <chr>, and abbreviated variable names ¹​transcript, ²​negPlace #> # ℹ Use `colnames()` to see all variable names #head(combineChunks(rez007, type = \"intersect\")) #Does the same thing head(rez007$unitDF) #> # A tibble: 6 × 21 #>   id    doc   unitS…¹ unitEnd unitSeq pID   unitId unitS…² docId unitDur pSent…³ #>   <chr> <chr> <chr>   <chr>     <dbl> <lgl> <chr>  <chr>   <chr> <chr>   <chr>   #> 1 2AD1… sbc0… 0.000   12.700        1 NA    1      0.000   sbc0… 12.700  1       #> 2 BDD7… sbc0… 12.640  14.450        2 NA    2      12.640  sbc0… 1.810   1       #> 3 2752… sbc0… 14.450  15.850        3 NA    3      14.450  sbc0… 1.400   2       #> 4 8487… sbc0… 15.850  21.200        4 NA    4      15.850  sbc0… 5.350   3       #> 5 107F… sbc0… 21.200  22.500        5 NA    5      21.200  sbc0… 1.300   4       #> 6 3078… sbc0… 22.500  24.150        6 NA    6      22.500  sbc0… 1.650   5       #> # … with 10 more variables: unitDurSkipPause <chr>, unitEnd.1 <chr>, #> #   unitStartSkipPause <chr>, sequence <chr>, participant <chr>, turnSeq <chr>, #> #   text <chr>, transcript <chr>, docTokenSeqFirst <dbl>, #> #   docTokenSeqLast <dbl>, and abbreviated variable names ¹​unitStart, #> #   ²​unitStart.1, ³​pSentSeq #> # ℹ Use `colnames()` to see all variable names getLowerFieldList(rez007,   fieldName = \"kind\",   simpleDF = rez007$entryDF,   complexDF = rez007$unitDF,   complexNodeMap = rez007$nodeMap$unit,   listName = \"entryList\",   complexIDs = c(\"2AD10A854E6D3\", \"BDD7D839325A\", \"2752E3B395FC1\") ) #> $`2AD10A854E6D3` #> [1] \"Pause\"   \"Word\"    \"EndNote\" #>  #> $BDD7D839325A #>  [1] \"Word\"    \"Word\"    \"Word\"    \"Word\"    \"Word\"    \"Word\"    \"Word\"    #>  [8] \"Word\"    \"Word\"    \"Word\"    \"EndNote\" #>  #> $`2752E3B395FC1` #> [1] \"Pause\"   \"\"        \"Word\"    \"Word\"    \"Word\"    \"EndNote\" getTrackTokens(rez007, fieldName = \"kind\", trackDF = rez007$trackDF$default)[1:3] #> $`1096E4AFFFE65` #> [1] \"Word\" #>  #> $`92F20ACA5F06` #> [1] \"Word\" #>  #> $`7E5BB65072C` #> [1] \"Word\" \"Word\" \"Word\" \"Word\" \"Word\""},{"path":"https://rezonators.github.io/rezonateR/articles/import_save_basics.html","id":"onwards","dir":"Articles","previous_headings":"","what":"Onwards!","title":"Importing .rez files, saving rezrObjs, and basic data structure","text":"Now know way around .rez files, can go next tutorial see time handled Rezonator. ’re ,go vignette(\"time_seq.Rmd\")!","code":""},{"path":[]},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"why-use-rezonater","dir":"Articles","previous_headings":"Preliminaries","what":"Why use rezonateR?","title":"An overview of rezonateR 0.1.1","text":"’re reading , ’re probably already using Rezonator daily work. Rezonator powerful tool annotating visualising dynamics human engagement. purpose rezonateR add series additional tools enhance functionality Rezonator increase productivity! goal minimise time spend coding annotating time thinking. Rezonator many cool features, due technical restrictions, certain things can’t , : Dividing annotations layers Adding chunks track chain entries span multiple units Linking tree entries corresponding chunks Guessing value field looking values fields Automatically update values certain fields using information fields rezonateR can , ! Moreover, rezonateR geared toward people skill levels R. lot heavy lifting . long familiarity base R, can quickly pick basic functions, advanced users can also extend see fit. rezonateR engine based heavily Tidyverse packages, particularly rlang dplyr. Although don’t need familiar Tidyverse use basic functionality, Tidyverse users happy see wide range functions mimic Tidyverse functions appearance, additional fields support wide range functionality rezonateR. ’re wondering start learning rezonateR, best time now! Although can get started Rezonator GUI relatively easily, certain things know use rezonateR - multi-line chunks - probably want rezonateR post-processing mind, even ’re annotating Rezonator.","code":"install.packages(\"devtools\") library(devtools) install_github(\"rezonators/rezonateR\")"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"a-quick-import","dir":"Articles","previous_headings":"Preliminaries","what":"A quick import","title":"An overview of rezonateR 0.1.1","text":"Let’s start importing first file. Now let’s import first file, short spoken text Lhasa Tibetan (can find original video : https://av.mandala.library.virginia.edu/video/couple-must-part-threes-company-02). file contains number chunks, track chains, well trees, deal vignette: layerRegex object series instructions tell importRez divide chunks track chains different layers. case, placed field called ‘trailLayer’ track chains, three possible values: clausearg, discdeix, nothing. captured regex field. first two regexes correspond two names ‘clausearg’ ‘discdeix’, default case neither first two regexes detected ‘refexpr’. done thing chunks, can see . don’t want use layers, don’t specify layerRegex. case, create single layer called ‘default’ . mysterious field importRez function concatFields. fields belonging tokens like concatenate higher-level units like chunks tokens. example, tokens 1 2 ‘happy’ ‘person’, chunk contains two tokens, want whole string ‘happy person’ associated chunk. Typically, specify least one field . case, concatenate fields ‘word’ ‘wordWylie’ (Wylie common Romanisation system Tibetan). important overdo , specify many fields concatenate, step can slow import considerably. result import object called rezrObj, discuss . import substantial file, say around 30 minutes, import speed can rather slow. Please patient! good news rezonateR contains functionality saving loading rezrObj objects, don’t import time work file R.","code":"library(rezonateR) #> Loading required package: dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #> Loading required package: readr #> Loading required package: stringr #> Loading required package: rlang path = system.file(\"extdata\", \"virginia-library-20766.rez\", package = \"rezonateR\")  layerRegex = list(   track = list(field = \"trailLayer\", regex = c(\"clausearg\", \"discdeix\"), names = c(\"clausearg\", \"discdeix\", \"refexpr\")),   chunk = list(field = \"chunkLayer\", regex = c(\"verb\", \"adv\", \"predadj\"), names = c(\"verb\", \"adv\", \"predadj\", \"refexpr\")))  myRez = importRez(path, layerRegex = layerRegex, concatFields = c(\"word\", \"wordWylie\")) #> Import starting - please be patient ... #> Creating node maps ... #> Creating rezrDFs ... #> Adding foreign fields to rezrDFs and sorting (this is the slowest step) ... #> >Adding to unit entry DF ... #> >Adding to unit DF ... #> >Adding to chunk DF ... #> >Adding to track DFs ... #> >Adding to tree DFs ... #> Splitting rezrDFs into layers ... #> A few finishing touches ... #> Done! savePath = \"myRez.Rdata\" rez_save(myRez, savePath) #> Saving rezrObj ... myRez = rez_load(savePath) #> Loading rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"introduction-to-rezrobjs-and-nodemaps","dir":"Articles","previous_headings":"","what":"Introduction to rezrObjs and nodeMaps","title":"An overview of rezonateR 0.1.1","text":"###rezrObjs three main kinds objects rezonateR interact directly, namely rezrObj, nodeMap rezrDF. rezrObjs nodeMaps covered section. rezrDFs relatively complex, form bulk discussion vignette. rezrObj objects contain one single nodeMap several rezrDFs: relationships various entites follows: chunks tree entries built top tokens entries correspond exactly tokens, units build entries trackDF refers chunks tokens ramifications updating, ’ll come later.","code":"print(\"Item in myRez:\") #> [1] \"Item in myRez:\" names(myRez) #>  [1] \"nodeMap\"     \"chunkDF\"     \"docDF\"       \"entryDF\"     \"linkDF\"      #>  [6] \"mergedDF\"    \"tokenDF\"     \"trackDF\"     \"trailDF\"     \"treeDF\"      #> [11] \"treeEntryDF\" \"treeLinkDF\"  \"unitDF\""},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"nodemaps","dir":"Articles","previous_headings":"Introduction to rezrObjs and nodeMaps","what":"nodeMaps","title":"An overview of rezonateR 0.1.1","text":"nodeMap similar internal representation file used Rezonator-generated .rez files. node map .rez files disorganised list nodes, correspond entity inside Rezonator: units, tokens, . rezonateR nodeMap similar. major difference nodes organised sub-categories, according type entity node encoding. Let’s sneak peak categories: practice, interact nodeMaps except token. time, dealing rezrDFs, much easier work . Let’s take look .","code":"print(\"Items in the nodeMap:\") #> [1] \"Items in the nodeMap:\" names(myRez$nodeMap) #>  [1] \"token\"     \"entry\"     \"unit\"      \"track\"     \"chunk\"     \"card\"      #>  [7] \"link\"      \"trail\"     \"stack\"     \"corpus\"    \"doc\"       \"treeEntry\" #> [13] \"treeLink\"  \"tree\""},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"introduction-to-rezrdfs","dir":"Articles","previous_headings":"","what":"Introduction to rezrDFs","title":"An overview of rezonateR 0.1.1","text":"rezrDF like normal data frame know base R. ’s beginning unit table: chunkDF, trackDF, rezDF, stackDF, etc., divided layers. directly access ‘chunkDF’ ‘trackDF’ components myRez, get list rezrDFs, one layer. names chunk layers might remember introduction, along beginning one associated rezrDFs: rezrDF inherits Tidyverse ‘tibble’ structure, tibble-related functions can used . However, using classic Tidyverse functions rezrDFs often dangerous, rezrDFs additional functionality go beyond classic rezrDFs. three main differences make rezrDF special:","code":"print(head(myRez$unitDF %>% select(id, unitSeq, srtLineBo))) #> # A tibble: 6 × 3 #>   id            unitSeq srtLineBo               #>   <chr>           <dbl> <chr>                   #> 1 22C69D930B150       1 \"བཀྲ་-\"                  #> 2 2456BC9E7C5D5       2 \"བཀྲ་ཤིས་བདེ་ལེགས། \"        #> 3 201A180965346       3 \"ཕེབས་གནང་། \"            #> 4 2BD385D3E52C7       4 \"རྒན་ངག་དབང་ལགས་ཡིན་ནམ། \" #> 5 2B558CAD0F0B4       5 \"ལགས་ཡིན། ང་\"            #> 6 1213A3F8E28E0       6 \"ལགས་ཡིན། ང་\" print(\"Component DFs of chunkDF:\") names(myRez$chunkDF) print(head(myRez$chunkDF$refexpr) %>% select(id, word))"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"perk-1-field-access-labels","dir":"Articles","previous_headings":"Introduction to rezrDFs","what":"Perk 1: Field access labels","title":"An overview of rezonateR 0.1.1","text":"Field access labels prevents accidentally changing things shouldn’t changing. Let’s look field access values unitDF: five possible field access values: * ‘key’: primary key table. allowed change (unless turn non-key field, encouraged since basically break everything). try update fields using rezonateR functions, stop error. ‘core’: Core fields, mostly generated Rezonator. can change , give warning , changing core field strong potential break things. ‘flex’: Flexible fields, usually fields whose values enter Rezonator, though also flex fields automatically generated Rezonator. ‘auto’: Fields whose values automatically generated using information rezrDF. ‘foreign’: Fields whose values automatically generated using information DIFFERENT rezrDF (several different rezrDFs, advanced feature stay away vignette.)","code":"print(\"fieldaccess:\") #> [1] \"fieldaccess:\" fieldaccess(myRez$unitDF) #>               id              doc        unitStart          unitEnd  #>            \"key\"           \"core\"           \"core\"           \"core\"  #>          unitSeq              pID     srtLineStart        srtLineBo  #>           \"core\"           \"core\"           \"flex\"           \"flex\"  #>            iuEnd          iuStart        srtLineEn               iu  #>           \"flex\"           \"flex\"           \"flex\"           \"flex\"  #>        srtLineID           iuText          speaker       srtLineEnd  #>           \"flex\"           \"flex\"           \"flex\"           \"flex\"  #>             word        wordWylie docTokenSeqFirst  docTokenSeqLast  #>        \"foreign\"        \"foreign\"        \"foreign\"        \"foreign\""},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"perk-2-reloads","dir":"Articles","previous_headings":"Introduction to rezrDFs","what":"Perk 2: Reloads","title":"An overview of rezonateR 0.1.1","text":"reload() function one core features rezonateR makes convenient use. reload() feature based updateFunctions. can access updateFunctions table using updateFunct: three reload functions, reloadLocal(), reloadForeign() reload(). reloadLocal() takes rezrDF, updates auto fields. reloadForeign() reload() take rezrDF rezrObj, updates rezrDF using rezrObj (may may contain rezrDF). Let’s take look reload(), useful function . , original data, zero mentions, orthographic representation written <0>; Wylie romanisation blank string. want change Wylie romanisation also contain <0>s. using rez_mutate function tokenDF first (don’t worry means yet; ’ll cover later). , reload entryDF, reload unitDF. (Recall units depend entries turn depend tokens; ’s can’t just reloated unitDF directly.) update, unitDF updated <0>s appearing Wylie romanisation: might wondering reload entire rezrObj. tables often depend (example, field table X relies field B table Y turn relies field C table X), technically difficult, plan add function 1.0 release. Stay tuned!","code":"print(\"updateFunct of unitDF:\") #> [1] \"updateFunct of unitDF:\" updateFunct(myRez$unitDF) #> $word #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x000001e41041a9f8> #> <environment: 0x000001e41ad115f0> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/word\" #>  #> $wordWylie #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x000001e410b06b78> #> <environment: 0x000001e4103a0840> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/wordWylie\" #>  #> $docTokenSeqFirst #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x000001e418e1f760> #> <environment: 0x000001e4117a5758> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/docTokenSeq\" #>  #> $docTokenSeqLast #> function (df, rezrObj)  #> updateLowerToHigher(df, rezrObj, address, fkeyAddress, action,  #>     field, fkeyInDF, seqName) #> <bytecode: 0x000001e40fefb988> #> <environment: 0x000001e40feed528> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> [1] \"entryDF/docTokenSeq\" print(\"Before the update\") #> [1] \"Before the update\" myRez$unitDF %>% filter(str_detect(word, \"<0>\")) %>% rez_select(id, word, wordWylie) %>% head #> # A tibble: 6 × 3 #>   id            word                                           wordWylie         #>   <chr>         <chr>                                          <chr>             #> 1 201A180965346 <0> ཕེབས་ གནང་ །                                \" phebs  gnang  … #> 2 2BD385D3E52C7 <0> རྒན་ ངག་དབང་ ལགས་ ཡིན་ ནམ །                  \" rgan  ngag dba… #> 3 2B558CAD0F0B4 ལགས་ <0> ཡིན །                                  \"lags   yin /\"    #> 4 1A5B143F0646A ལགས་ <0> <0> རེད །                              \"lags    red /\"   #> 5 2414F2965B74A ང་ འདི ར་ སྤྱིར་བཏང་ <0> སློབ་སྦྱོང་ བྱེད་ གར་ ཡོང་བ་ ཡིན ། \"nga  'di ra  sp… #> 6 1FA517FFC43A  <0> སློབ་ཕྲུག་ ཡིན་ X X                             \" slob phrug  yi…  #Change something in the token rezrDF that is significant for the unit rezrDF myRez$tokenDF = myRez$tokenDF %>% rez_mutate(   wordWylie = case_when(word == \"<0>\" ~ \"<0>\", T ~ wordWylie)) myRez$entryDF = myRez$entryDF %>% reload(myRez) myRez$unitDF = myRez$unitDF %>% reload(myRez)  print(\"After the update\") #> [1] \"After the update\" myRez$unitDF %>% filter(str_detect(word, \"<0>\")) %>% rez_select(id, word, wordWylie) %>% head #> # A tibble: 6 × 3 #>   id            word                                           wordWylie         #>   <chr>         <chr>                                          <chr>             #> 1 201A180965346 <0> ཕེབས་ གནང་ །                                <0> phebs  gnang… #> 2 2BD385D3E52C7 <0> རྒན་ ངག་དབང་ ལགས་ ཡིན་ ནམ །                  <0> rgan  ngag d… #> 3 2B558CAD0F0B4 ལགས་ <0> ཡིན །                                  lags  <0> yin /   #> 4 1A5B143F0646A ལགས་ <0> <0> རེད །                              lags  <0> <0> re… #> 5 2414F2965B74A ང་ འདི ར་ སྤྱིར་བཏང་ <0> སློབ་སྦྱོང་ བྱེད་ གར་ ཡོང་བ་ ཡིན ། nga  'di ra  spy… #> 6 1FA517FFC43A  <0> སློབ་ཕྲུག་ ཡིན་ X X                             <0> slob phrug  …"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"perk-3-correpondences-to-nodemaps","dir":"Articles","previous_headings":"Introduction to rezrDFs","what":"Perk 3: Correpondences to nodeMaps","title":"An overview of rezonateR 0.1.1","text":"rezrDFs encode information whether field nodeMap : doesn’t much yet, since ’re yet allowed push field created rezrDF back nodeMap. available 1.0 release.","code":"print(\"inNodeMap:\") #> [1] \"inNodeMap:\" inNodeMap(myRez$unitDF) #>               id              doc        unitStart          unitEnd  #>            \"key\"        \"primary\"        \"primary\"        \"primary\"  #>          unitSeq              pID     srtLineStart        srtLineBo  #>        \"primary\"        \"primary\"         \"tagmap\"         \"tagmap\"  #>            iuEnd          iuStart        srtLineEn               iu  #>         \"tagmap\"         \"tagmap\"         \"tagmap\"         \"tagmap\"  #>        srtLineID           iuText          speaker       srtLineEnd  #>         \"tagmap\"         \"tagmap\"         \"tagmap\"         \"tagmap\"  #>             word        wordWylie docTokenSeqFirst  docTokenSeqLast  #>             \"no\"             \"no\"             \"no\"             \"no\""},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"editing-rezrdfs","dir":"Articles","previous_headings":"","what":"Editing rezrDFs","title":"An overview of rezonateR 0.1.1","text":"One core features rezonateR facilitate automatic semi-automatic creation fields, currently supported Rezonator. also operations may want perform rezrDFs. cater users different habits skill levels, introduced three different levels rezrDFs. EasyEdit can quickly picked everyone, including base R users, covers basic operations want rezrDF (e.g. addField, changeFieldForeign) TidyRez easy pick tidyverse users, though learning curve others (e.g. rez_mutate, rez_left_join) Core engine: mostly functions use within rezonateR hood. Users want maximum flexibility may also use (e.g. lowerToHigher, createLeftJoinUpdate), aware may make changes without notice, since assume users little use . Crucially, EasyEdit TidyRez syntax similar within category, functions within core engine lot divergent, EasyEdit TidyRez also differ considerably syntax. comfortable TidyRez, minimising use EasyEdit may make code look consistent, vice versa.","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"easyedit","dir":"Articles","previous_headings":"Editing rezrDFs","what":"EasyEdit","title":"An overview of rezonateR 0.1.1","text":"EasyEdit consists four commonly used functions, addFieldLocal, addFieldForeign, changeFieldLocal changeFieldForeign. also less useful function, addRow, cover vignette, can check documentation like add row. four basic functions can applied rezrDFs rezrObjs. vignette, mainly apply rezrObjs. want deal emancipated rezrDFs, .e. rezrDFs part rezrObj, want use versions apply rezrDFs, simpler rezrObj versions, able pick quickly using manual. Let’s start looking addFieldLocal. addField shortcut addFieldLocal, using shortcut name throughout. first example simple. tokenDF, let’s add field automatically calculates lengthg word characters. , ‘entity’ specifies name entity like change, ‘layer’ specifies layer within entity (empty string since token layers), fieldName name field ’re adding, expression R expression calculate new field, fieldaccess tells rezonateR make auto field updateFunction attached table: Now let’s spice bit adding complex field. complex field takes information multiple rows table. case, working tokenDF, want new column longest length word appears unit token comes . case, groupField ‘unit’, specify field type ‘complex’. expression uses function longestLength, rezonateR function returns longest word series words. Now let’s add simple foreign field. Let’s say look tokenDF, also want know whole unit’s words . source ‘word’ field units, creating new field tokens called ‘unitWord’. foreign key field contains IDs source table inside target table, case ‘unit’ field tokenDF: Now let’s wrap complex field foreign field. , ’re going add field unitDF tells us length shortest word within unit. ’re going base entry DF. However, entries correspond units given nodeMap, also need supply list entries inside unit nodeMap - ’s called entryList. Chunks tree entries built tokens instead, list called tokenList. Instead ‘expression’, complex foreign fields field called complexAction, function performed source field source table: (technicality punctuation counts character, values 1. ways can fix using isWord conditions, ’ll discuss .) far ’ve looked addField, good news changeField works 100% exact way! ’s example, changing orthoLength field depend Romanisation instead original Tibetan script: Note don’t specify field access value, automatically change flex, even changeField. force remember changing value field , also updated future. don’t supply field access value ’s originally auto foreign field, warn change, can run changeField want change mind.","code":"myRez = addField(myRez, entity = \"token\", layer = \"\",                  fieldName = \"orthoLength\",                  expression = nchar(word),                  fieldaccess = \"auto\") print(\"A fragment of the updated table:\") #> [1] \"A fragment of the updated table:\" head(myRez$tokenDF %>% rez_select(id, word, orthoLength)) #> # A tibble: 6 × 3 #>   id            word   orthoLength #>   <chr>         <chr>        <int> #> 1 2ECADE1029CD3 བཀྲ་-             5 #> 2 15A5089F6157A བཀྲ་ཤིས་           8 #> 3 197AA4A0C625F བདེ་ལེགས           8 #> 4 2C7746BD6F150 །                1 #> 5 354CBFB3632B6 <0>              3 #> 6 2D1DAD2FFF22A ཕེབས་             5 print(\"The updateFunction:\") #> [1] \"The updateFunction:\" updateFunct(myRez$tokenDF, \"orthoLength\") #> function (df)  #> updateMutate(df, field, x) #> <environment: 0x000001e41a9ed280> #> attr(,\"class\") #> [1] \"updateFunction\" \"function\"       #> attr(,\"deps\") #> character(0) myRez = addField(myRez, entity = \"token\", layer = \"\",                  fieldName = \"longestWordInUnit\",                  expression = longestLength(word),                  type = \"complex\",                  groupField = \"unit\",                  fieldaccess = \"auto\") head(myRez$tokenDF %>% select(id, word, longestWordInUnit)) #> # A tibble: 6 × 3 #>   id            word   longestWordInUnit #>   <chr>         <chr>              <int> #> 1 2ECADE1029CD3 བཀྲ་-                   5 #> 2 15A5089F6157A བཀྲ་ཤིས་                 8 #> 3 197AA4A0C625F བདེ་ལེགས                 8 #> 4 2C7746BD6F150 །                      8 #> 5 354CBFB3632B6 <0>                    5 #> 6 2D1DAD2FFF22A ཕེབས་                   5 myRez = addFieldForeign(myRez,                 targetEntity = \"token\", targetLayer = \"\",                 sourceEntity = \"unit\", sourceLayer = \"\",                 targetForeignKeyName = \"unit\",                 targetFieldName = \"unitWord\", sourceFieldName = \"word\",                 fieldaccess = \"foreign\") head(myRez$tokenDF %>% select(id, word, unitWord)) #> # A tibble: 6 × 3 #>   id            word   unitWord        #>   <chr>         <chr>  <chr>           #> 1 2ECADE1029CD3 བཀྲ་-   བཀྲ་-            #> 2 15A5089F6157A བཀྲ་ཤིས་ བཀྲ་ཤིས་ བདེ་ལེགས ། #> 3 197AA4A0C625F བདེ་ལེགས བཀྲ་ཤིས་ བདེ་ལེགས ། #> 4 2C7746BD6F150 །      བཀྲ་ཤིས་ བདེ་ལེགས ། #> 5 354CBFB3632B6 <0>    <0> ཕེབས་ གནང་ ། #> 6 2D1DAD2FFF22A ཕེབས་   <0> ཕེབས་ གནང་ ། myRez = addFieldForeign(myRez,                 targetEntity = \"unit\", targetLayer = \"\",                 sourceEntity = \"entry\", sourceLayer = \"\",                 targetForeignKeyName = \"entryList\",                 targetFieldName = \"shortestWordLength\",                 sourceFieldName = \"word\",                 type = \"complex\",                 complexAction = shortestLength,                 fieldaccess = \"foreign\") head(myRez$unitDF %>% select(id, word, shortestWordLength)) #> # A tibble: 6 × 3 #>   id            word                          shortestWordLength #>   <chr>         <chr>                                      <int> #> 1 22C69D930B150 བཀྲ་-                                           5 #> 2 2456BC9E7C5D5 བཀྲ་ཤིས་ བདེ་ལེགས །                                1 #> 3 201A180965346 <0> ཕེབས་ གནང་ །                                1 #> 4 2BD385D3E52C7 <0> རྒན་ ངག་དབང་ ལགས་ ཡིན་ ནམ །                  1 #> 5 2B558CAD0F0B4 ལགས་ <0> ཡིན །                                  1 #> 6 1213A3F8E28E0 ང་                                             2 myRez = changeField(myRez, entity = \"token\", layer = \"\",                  fieldName = \"orthoLength\",                  expression = nchar(wordWylie),                  fieldaccess = \"auto\") print(\"A fragment of the updated table:\") #> [1] \"A fragment of the updated table:\" head(myRez$tokenDF %>% rez_select(id, word, orthoLength)) #> # A tibble: 6 × 3 #>   id            word   orthoLength #>   <chr>         <chr>        <int> #> 1 2ECADE1029CD3 བཀྲ་-             8 #> 2 15A5089F6157A བཀྲ་ཤིས་          10 #> 3 197AA4A0C625F བདེ་ལེགས           8 #> 4 2C7746BD6F150 །                1 #> 5 354CBFB3632B6 <0>              3 #> 6 2D1DAD2FFF22A ཕེབས་             6"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"tidyrez","dir":"Articles","previous_headings":"Editing rezrDFs","what":"TidyRez","title":"An overview of rezonateR 0.1.1","text":"general, TidyRez functions called adding ‘rez_’ front dplyr function name, rez_group_by rez_mutate. Using TidyRez functions allows keep /update field access values, inNodeMap values, updateFunctions. Using base R classic dplyr functions rezrDFs may result reload fails, unless supplemented core engine functions, covered vignette. dplyr functions completely safe use rezonateR, mostly focus selecting rows table, filter(), arrange() slice(). Currently implemented TidyRez functions include: rez_add_row adding new entries rez_mutate adding editing columns rez_rename renaming columns rez_bind_rows combining rezrDFs vertically rez_group_split splitting rezrDFs vertically rez_group_by rez_ungroup grouping rez_select selecting certain columns inside rezrDF rez_left_join left joins planned ones include rez_bind_cols rez_outer_join, especially useful calculation inter-annotator agreement. TidyRez relatively straightforward Tidyverse users, vignette focus TidyRez adds top Tidyverse. want learn basic Tidyverse, many existing tutorials Internet. see power TidyRez, let’s try creating emancipated rezrDF subset original columns. , take trackDF$refexpr, table referential expressions. damage one fields using classic dplyr function. can see , emancipated rezrDF can still updated using rezrObj, effectively overriding damage: warning order: TidyRez updates current table. tables references table ’re editing, updated. must bear mind using rez_select rez_rename. problems arise use functions emancipated rezrDFs. However, use functions rezrDFs within rezrObjs, manually update fields rezrDFs refer field ’ve deleted added. plan add rename feature EasyEdit near future update references rezrDFs. TidyRez functions’ syntax deviate dplyr minimally ways can read documentation. However, rez_left_join worth quick mention. addition fieldaccess field rezrObj field, self-explanatory, fkey field df2Address field. fkey name field first data.frame corresponds IDs second data.frame. df2Address string tells rez_left_join find source rezrDF next time. source rezrDF doesn’t belong layer, e.g. tokenDF, just type . source rezrDF belongs layer, put ‘/’ table layer, e.g. ‘trackDF/refexpr’.","code":"refTable = myRez$trackDF$refexpr %>% rez_select(id, token, chain, name, word, tokenOrderLast) print(\"Before:\") #> [1] \"Before:\" head(refTable %>% select(id, tokenOrderLast)) #> # A tibble: 6 × 2 #>   id            tokenOrderLast #>   <chr>                  <dbl> #> 1 3D148B2FEEA8               1 #> 2 1CA978DCDE1DB              1 #> 3 14C5BE6658C39              4 #> 4 1FE8CC91923D1              2 #> 5 33A483E30E811              1 #> 6 280CA1A8A425               1 refTable = refTable %>% mutate(tokenSeqLast = 1) #Damage refTable with a classic dplyr function print(\"After:\") #> [1] \"After:\" refTable = refTable %>% reload(myRez) head(refTable %>% select(id, tokenOrderLast)) #> # A tibble: 6 × 2 #>   id            tokenOrderLast #>   <chr>                  <dbl> #> 1 3D148B2FEEA8               1 #> 2 1CA978DCDE1DB              1 #> 3 14C5BE6658C39              4 #> 4 1FE8CC91923D1              2 #> 5 33A483E30E811              1 #> 6 280CA1A8A425               1"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"an-interlude-time-and-sequence","dir":"Articles","previous_headings":"","what":"An interlude: Time and sequence","title":"An overview of rezonateR 0.1.1","text":"continue adventure, let’s look couple ways can upgrade rezrObj contain even information. first thing can , hinted , set certain tokens non-words. can addIsWordField function. One immediate benefit get new sequence value. fields tokenOrder docTokenSeq values original rezrDF count tokens, whereas wordOrder docWordSeq count tokens counted words according criterion. Let’s set criterion !str_detect(wordWylie, “/”), .e. token must contain main punctuation mark Tibetan. Notice wordOrder generally slightly lower tokenOrder: default, unitSeq information available rezrDFs unitDF. can change using addUnitSeq feature, can add unitSeq information track chains: adds unitSeqFirst unitSeqLast field chunks track chains entries, unitSeq field tokens.","code":"myRez = addIsWordField(myRez, !str_detect(wordWylie, \"/\")) head(myRez$tokenDF %>% select(id, tokenOrder, docTokenSeq, wordOrder, docWordSeq)) #> # A tibble: 6 × 5 #>   id            tokenOrder docTokenSeq wordOrder docWordSeq #>   <chr>              <dbl>       <dbl>     <dbl>      <dbl> #> 1 2ECADE1029CD3          1           1         1          1 #> 2 15A5089F6157A          1           2         1          2 #> 3 197AA4A0C625F          2           3         2          3 #> 4 2C7746BD6F150          3           4         0          0 #> 5 354CBFB3632B6          1           5         1          4 #> 6 2D1DAD2FFF22A          2           6         2          5 myRez = addUnitSeq(myRez, \"track\")"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"updating-rezonater-using-external-information","dir":"Articles","previous_headings":"","what":"Updating rezonateR using external information","title":"An overview of rezonateR 0.1.1","text":"annotation actions easier spreadsheet Rezonator, one action frequently perform annotations spreadsheet programme integrate information back rezrObj. Fortunately, rezonateR contains functionality can facilitate minimise errors generated process. Let’s say want annotate person referential expressions inside trackDF$refexpr. start annotating manually, wrote simple rules guess person works situations, correct baseline: export CSV annotation, like add column inside rezrDF gives us word entire unit. (Since document currently multi-unit track entries, suffice use unitLast unitFirst). useful able see column making manual annotations: next step write CSV file. rez_write_csv allows us easily. third argument rez_write_csv vector field names want export. advisable keep number exported fields small make spreadsheet manageable require less scrolling: editing CSV spreadsheet program, let’s import back using rez_read_csv. (’ve renamed edited CSV - general, recommend avoid accidentally overwriting edited file running export code .) origDF argument tells rezonateR look original rezrDF produced CSV, determine data types accordingly: Finally, updateFromDF function allows us update original rezrDF using information new rezrDF. many fancy option can choose , deciding whether delete rows, add rows, add columns, etc. use vanilla options, update ‘person’ column:","code":"myRez$trackDF$refexpr = myRez$trackDF$refexpr %>% rez_mutate(person = case_when(word == \"ང\" | str_starts(word, \"ང་\") ~ 1, str_starts(word, \"(ཁྱེད|ཁྱོད|ཇོ་ལགས|ཨ་ཅག་ལགས|རྒན་ལགས)\") ~ 2, str_ends(word, \"(ལགས|<0>)\") ~ 0, #Multiple likely scenarios T ~ 3)) myRez$trackDF$refexpr = myRez$trackDF$refexpr %>%   rez_left_join(myRez$unitDF %>% rez_select(unitSeq, word), by = c(unitSeqLast = \"unitSeq\"), suffix = c(\"\", \"_unit\"), df2key = \"unitSeq\", df2Address = \"unitDF\", fkey = \"unitSeqLast\") %>%   rez_rename(unitLastWord = word_unit) #> Tip: When performed on a rezrDF inside a rezrObj, rez_rename is a potentially destructive action. It is NOT recommended to assign it back to a rezrDF inside a rezrObj. If you must do so, be careful to update all addresses from other DFs to this DF. rez_write_csv(myRez$trackDF$refexpr, \"refexpr.csv\", c(\"id\", \"name\", \"unitLastWord\", \"unitSeqLast\", \"word\", \"docTokenSeqLast\", \"entityType\", \"roleType\", \"person\")) changeDF = rez_read_csv(\"refexpr_edited.csv\", origDF = myRez$trackDF$refexpr) myRez$trackDF$refexpr = myRez$trackDF$refexpr %>% updateFromDF(changeDF, changeCols = 'person') head(myRez$trackDF$refexpr %>% select(id, word, person)) #> # A tibble: 6 × 3 #>   id            word             person #>   <chr>         <chr>             <dbl> #> 1 3D148B2FEEA8  <0>                  NA #> 2 1CA978DCDE1DB <0>                  NA #> 3 14C5BE6658C39 རྒན་ ངག་དབང་ ལགས་     NA #> 4 1FE8CC91923D1 <0>                  NA #> 5 33A483E30E811 ང་                   NA #> 6 280CA1A8A425  འདི་                  NA"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"analysing-track-chains-with-easytrack","dir":"Articles","previous_headings":"","what":"Analysing track chains with EasyTrack","title":"An overview of rezonateR 0.1.1","text":"Now ’ve looked example semi-automatic annotation, let’s move full automation! looking particular coreference chains. rezonateR contains suite functions generating features useful analysing choice referential forms, reference comprehension, similar topics.","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"anaphoric-and-cataphoric-distance","dir":"Articles","previous_headings":"Analysing track chains with EasyTrack","what":"Anaphoric and cataphoric distance","title":"An overview of rezonateR 0.1.1","text":"Let’s first find many units previous mention something. equivalent gapUnit column already exists automatically generated Rezonator: Now let’s count tokens last mention using tokensToLastMention() function. one couple complications. first one seq count. interlude, mentioned addition docTokenSeq, sequence value called docWordSeq excludes nonwords. use value counting. second complication treat zero mentions. Zeros actually exist world, time speak . ‘zeroProtocol’ argumentis ‘unitFinal’, telling rezonateR count last word whatever unit zero comes . Finally, since ’re dealing units, need pass unitDF ensure tokensToLastMention can access unit information: Note unitsToNextMention tokensToNextMention work way.","code":"myRez$trackDF$refexpr = myRez$trackDF$refexpr %>%   rez_mutate(unitsToLastMention = unitsToLastMention(unitSeqLast)) myRez$trackDF$refexpr %>% select(id, gapUnits, unitsToLastMention) %>% slice(10:16) #> # A tibble: 7 × 3 #>   id            gapUnits unitsToLastMention #>   <chr>         <chr>                 <dbl> #> 1 134D42FB97545 0                         1 #> 2 183DC7932D931 7                         7 #> 3 1373D1F88358  N/A                      NA #> 4 2DBE5E8F59A6D 1                         1 #> 5 F20CE11F519F  1                         1 #> 6 1366768617    2                         2 #> 7 287C6AAAA209D N/A                      NA myRez$trackDF$refexpr =  myRez$trackDF$refexpr %>%   rez_mutate(wordsToLastMention = tokensToLastMention(     docWordSeqLast, #What seq to use     zeroProtocol = \"unitFinal\", #How to treat zeroes     zeroCond = (word == \"<0>\"),     unitDF = myRez$unitDF)) #Additional argument for unitFinal protocol myRez$trackDF$refexpr %>% select(id, wordsToLastMention) %>% slice(10:16) #> # A tibble: 7 × 2 #>   id            wordsToLastMention #>   <chr>                      <dbl> #> 1 134D42FB97545                  0 #> 2 183DC7932D931                 22 #> 3 1373D1F88358                  NA #> 4 2DBE5E8F59A6D                  0 #> 5 F20CE11F519F                   0 #> 6 1366768617                     0 #> 7 287C6AAAA209D                 NA"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"tallying-preceding-and-following-mentions","dir":"Articles","previous_headings":"Analysing track chains with EasyTrack","what":"Tallying preceding and following mentions","title":"An overview of rezonateR 0.1.1","text":"can also count many previous mentions something within window units. people five 20 unit. Let’s try 5. countPrevMentions allows us (countNextMentions succeeding context): Sometimes, may want extract previous mentions conditionally, e.g. count subject mentions zero mentions. functions countPrevMentionsIf countNextMentionIf allow us define condition. Let’s try counting number coming zero mentions. , use condition word == “<0>”, .e. word zero, window Inf, .e. ’s limit far future look:","code":"myRez$trackDF$refexpr = myRez$trackDF$refexpr %>% rez_mutate(noPrevMentionsIn5 = countPrevMentions(5)) myRez$trackDF$refexpr %>% select(id, noPrevMentionsIn5)  %>% slice(10:16) #> # A tibble: 7 × 2 #>   id            noPrevMentionsIn5 #>   <chr>                     <int> #> 1 134D42FB97545                 2 #> 2 183DC7932D931                 0 #> 3 1373D1F88358                  0 #> 4 2DBE5E8F59A6D                 1 #> 5 F20CE11F519F                  1 #> 6 1366768617                    2 #> 7 287C6AAAA209D                 0 myRez$trackDF$refexpr = myRez$trackDF$refexpr %>% rez_mutate(noComingZeroes = countNextMentionsIf(Inf, word == \"<0>\")) myRez$trackDF$refexpr %>% select(id, noComingZeroes)  %>% slice(10:16) #> # A tibble: 7 × 2 #>   id            noComingZeroes #>   <chr>                  <int> #> 1 134D42FB97545              1 #> 2 183DC7932D931              9 #> 3 1373D1F88358               0 #> 4 2DBE5E8F59A6D              9 #> 5 F20CE11F519F               0 #> 6 1366768617                 8 #> 7 287C6AAAA209D              1"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"counting-competitors","dir":"Articles","previous_headings":"Analysing track chains with EasyTrack","what":"Counting competitors","title":"An overview of rezonateR 0.1.1","text":"may also want count competing mentions, , recent mentions coreferential current mention. countCompetitors() tallies number competitors intervening previous current mention, possibly within window. one example window: functions introduced section additional fields allow customisation. Please feel free refer manual information.","code":"myRez$trackDF$refexpr = myRez$trackDF$refexpr %>% rez_mutate(noCompetitors = countCompetitors()) myRez$trackDF$refexpr %>% select(id, noComingZeroes)  %>% slice(10:16) #> # A tibble: 7 × 2 #>   id            noComingZeroes #>   <chr>                  <int> #> 1 134D42FB97545              1 #> 2 183DC7932D931              9 #> 3 1373D1F88358               0 #> 4 2DBE5E8F59A6D              9 #> 5 F20CE11F519F               0 #> 6 1366768617                 8 #> 7 287C6AAAA209D              1"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"adding-tree-information","dir":"Articles","previous_headings":"","what":"Adding tree information","title":"An overview of rezonateR 0.1.1","text":"Now let’s add information trees. first thing run getAllTreeCorrespondences function, adds treeEntry column non-tree tables. select entity = “track”, column added tokenDF, chunkDF trackDF. best thing trees us connecting verb information, stored chunks, track chain entry (.e. referential expression) information. can two steps. First add treeParent column trackDF$refexpr takes value ‘parent’ column treeEntryDF; simple terms, means ’re getting parent tree entry’s ID trackDF$refexpr. use parent tree entry’s ID find corresponding verb chunk, , successfully put verb trackDF$refexpr table.","code":"myRez = getAllTreeCorrespondences(myRez, entity = \"track\") myRez$trackDF$refexpr %>% select(id, treeEntry) %>% slice(10:16) #> # A tibble: 7 × 2 #>   id            treeEntry     #>   <chr>         <chr>         #> 1 134D42FB97545 23E6B9A16C426 #> 2 183DC7932D931 253E6EE11F308 #> 3 1373D1F88358  1E1D73A61D4B0 #> 4 2DBE5E8F59A6D 5E28BE8ED183  #> 5 F20CE11F519F  363329E4BBB94 #> 6 1366768617    281F8FC643F88 #> 7 287C6AAAA209D 364D86848B187 myRez = myRez %>% addFieldForeign(\"track\", \"refexpr\", \"treeEntry\", \"default\", \"treeEntry\", \"treeParent\", \"parent\", fieldaccess = \"foreign\") myRez$trackDF$refexpr = myRez$trackDF$refexpr %>% rez_left_join(myRez$chunkDF$verb %>% select(id, word, treeEntry), by = c(treeParent = \"treeEntry\"), suffix = c(\"\", \"_verb\"), df2Address = \"chunkDF/verb\", fkey = \"treeParent\", df2key = \"treeEntry\", rezrObj = myRez) %>% rename(verbID = id_verb, verbWord = word_verb) myRez$trackDF$refexpr %>% select(id, treeParent, verbID, verbWord) %>% slice(10:16) #> # A tibble: 7 × 4 #>   id            treeParent    verbID        verbWord      #>   <chr>         <chr>         <chr>         <chr>         #> 1 134D42FB97545 16CA7768343C0 2CFB905E634DE རེད            #> 2 183DC7932D931 2EA73E6E3BED4 30E122DAF5010 ཕེབས་པ་ ཡིན་ ནམ #> 3 1373D1F88358  2EA73E6E3BED4 30E122DAF5010 ཕེབས་པ་ ཡིན་ ནམ #> 4 2DBE5E8F59A6D 359A5ED8BE360 2CCFFAD41AD38 ཡོང་པ་ ཡིན      #> 5 F20CE11F519F  359A5ED8BE360 2CCFFAD41AD38 ཡོང་པ་ ཡིན      #> 6 1366768617    A4DB76F5C0EB  A4DC56F0B165  ཡོང་བ་ ཡིན      #> 7 287C6AAAA209D A4DB76F5C0EB  A4DC56F0B165  ཡོང་བ་ ཡིན"},{"path":"https://rezonators.github.io/rezonateR/articles/overview.html","id":"advanced-chunk-mergers","dir":"Articles","previous_headings":"","what":"Advanced: Chunk mergers","title":"An overview of rezonateR 0.1.1","text":"last topic cover merging chunks, useful creating muti-line chunks. several steps merging chunks: Create constituent chunks span entire merged chunk Create tree leaf contains tokens merged chunk, put leaf tree. Use mergeChunksWithTree command rezonateR merge . mergeChunksWithTree easy use. call command, merged chunks added bottom correponding chunk rezrDF. Chunk tags taken first constituent chunk merger default; see manual setting custom conditions. addition column called combinedChunk tells whether chunk combined chunk, member combined chunk, neither. may also augment trackDF merged chunks; combinedChunk column works similarly:","code":"myRez = mergeChunksWithTree(myRez) #> The following core and flex fields and not present and will have to be supplied later: layer #> The following core and flex fields and not present and will have to be supplied later: layer myRez$chunkDF$refexpr %>% filter(combinedChunk != \"\") %>% select(id, name, word, combinedChunk) #Showing only combined chunks and their members #> # A tibble: 6 × 4 #>   id            name        word                                         combi…¹ #>   <chr>         <chr>       <chr>                                        <chr>   #> 1 51A902A7C6CD  Chunk 49    ཁོང་ ཚོ་ ནས་                                   |infom… #> 2 2E2B9BB6462BC Chunk 51    དཔེ་སྐྲུན་ ཞུས་པ་ དེ་                              |membe… #> 3 17842C4087863 Chunk 235   ཕྱི་རྒྱལ་ ནུབ་ཕྱོགས་པ འི་ མི་རིགས་ འདི་འདྲས་             |infom… #> 4 EF4325E7D5A9  Chunk 81    བོད་སྐད་ ནང་ བྲིས་པ འི་ རྒྱལ་རབས་ ཀྱི་ དེབ་            |membe… #> 5 gODiAaeI61jy0 New Chunk 1 ཁོང་ ཚོ་ ནས་ དཔེ་སྐྲུན་ ཞུས་པ་ དེ་                   combin… #> 6 scKNy8YHCkbEJ New Chunk 2 ཕྱི་རྒྱལ་ ནུབ་ཕྱོགས་པ འི་ མི་རིགས་ འདི་འདྲས་ བོད་སྐད་ ནང་… combin… #> # … with abbreviated variable name ¹​combinedChunk myRez = mergedChunksToTrack(myRez, \"refexpr\") #> The following core and flex fields and not present and will have to be supplied later: layer #> The following core and flex fields and not present and will have to be supplied later: layer"},{"path":"https://rezonators.github.io/rezonateR/articles/time_seq.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Time and sequence","text":"tutorial, learn time sequence handled rezonateR. features relating fine-grained time may available later, watch space! file use file saved end vignette(\"import_save_basics\"). don’t read tutorial beforehand, though may helpful new rezonateR.","code":"library(rezonateR) path = system.file(\"extdata\", \"rez007_time.Rdata\", package = \"rezonateR\", mustWork = T) rez007 = rez_load(path) #> Loading rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/articles/time_seq.html","id":"token-order-and-sequence","dir":"Articles","previous_headings":"","what":"Token order and sequence","title":"Time and sequence","text":"Rezonator default provides two fields related position token, see tokenDF columns: docTokenSeq - refers order token within entire text/ tokenOrder - refers position token within intonation unit. orders count tokens. Santa Barbara Corpus text using, includes endnotes (, .), transcriptions vocalisms ((H) -breaths @@@ laughter), . can see tokenDF sample file : ‘Larger’ elements span multiple tokens four token sequence-related fields: docTokenSeqFirst - refers docTokenSeq first token. docTokenSeqLast - refers docTokenSeq first token. tokenOrderFirst - refers tokenOrder first token. tokenOrderLast - refers tokenOrder first token. can see fields action chunkDF:","code":"head(rez007$tokenDF) #> # A tibble: 6 × 18 #>   id         doc   unit  docTo…¹ token…² kind  place text  trans…³ endNote order #>   <chr>      <chr> <chr>   <dbl>   <dbl> <chr> <chr> <chr> <chr>   <chr>   <chr> #> 1 31F282855… sbc0… 2AD1…       1       1 Pause \"\"    (...) (...)   \"\"      1     #> 2 363C1D373… sbc0… 2AD1…       2       2 Word  \"1\"   God   God     \"\"      2     #> 3 3628E4BD4… sbc0… 2AD1…       3       3 EndN… \"\"    ,     ,       \"conti… 3     #> 4 37EFCBECF… sbc0… BDD7…       4       1 Word  \"1\"   I     I       \"\"      1     #> 5 12D677568… sbc0… BDD7…       5       2 Word  \"2\"   said  said    \"\"      2     #> 6 936363B71… sbc0… BDD7…       6       3 Word  \"3\"   I     I       \"\"      3     #> # … with 7 more variables: negPlace <chr>, corpusSeq <chr>, pSentOrder <chr>, #> #   POS_dft <chr>, tokenSeq <chr>, chunkType <chr>, turnOrder <chr>, and #> #   abbreviated variable names ¹​docTokenSeq, ²​tokenOrder, ³​transcript #> # ℹ Use `colnames()` to see all variable names head(rez007$chunkDF$refexpr %>% select(id, doc, name, text, tokenOrderFirst, docTokenSeqFirst, tokenOrderLast, docTokenSeqLast)) #> # A tibble: 6 × 8 #>   id            doc    name     text             token…¹ docTo…² token…³ docTo…⁴ #>   <chr>         <chr>  <chr>    <chr>              <dbl>   <dbl>   <dbl>   <dbl> #> 1 35E3E0AB6803A sbc007 Chunk 1  Stay up late           3      17       5      19 #> 2 1F6B5F0B3FF59 sbc007 Chunk 2  the purpose of …       5      25      12      32 #> 3 24FE2B219BD21 sbc007 Chunk 55 getting up in t…       8      28      12      32 #> 4 158B579C1BA49 sbc007 Chunk 3  the morning           11      31      12      32 #> 5 2B6521E881365 sbc007 Chunk 4  all this other …       2     144       5     147 #> 6 5B854594DD34  sbc007 Chunk 5  the way (...) t…       5     156      10     161 #> # … with abbreviated variable names ¹​tokenOrderFirst, ²​docTokenSeqFirst, #> #   ³​tokenOrderLast, ⁴​docTokenSeqLast"},{"path":"https://rezonators.github.io/rezonateR/articles/time_seq.html","id":"setting-isword-status","dir":"Articles","previous_headings":"Token order and sequence","what":"Setting isWord status","title":"Time and sequence","text":"Santa Barbara Corpus default contains tokens, provided tagMap Rezonator edition, : corpusSeq - position token within entire corpus. place - position word within intonation unit, excluding elements like endnotes vocalisms. negPlace - position word within intonation unit, counting backwards last token. However, working texts rather Santa Barbara Corpus, access place default. therefore create place . create something functions similarly place, must first define word . example, dealing ‘clean’ transcription ignores elements like breaths laughter, may simple create regular expression captures punctuation. function addIsWordField adds column isWord rezrDF rezrObj stating whether token word. Santa Barbara Corpus, simple since Kind column set \"Word\" actual words. Thus, can use expression Kind == \"Word\" definition counts word. expression passed addIsWordField second parameter (first parameter rezrDF rezrObj). Note addIsWordField called rezrObj, tokenDF entryDF new field. default, addIsWordField also adds fields docWordSeq wordOrder (=place) tokenDF entryDF, columns wordOrderFirst, wordOrderLast, docWordSeqFirst docWordSeqLast added unitDF, chunkDF trackDF. work similarly token counterparts, except non-words give 0 values, words counted determining order.","code":"rez007 = addIsWordField(rez007, kind == \"Word\") head(rez007$tokenDF %>% select(id, tokenOrder, docTokenSeq, wordOrder, docWordSeq)) #> # A tibble: 6 × 5 #>   id            tokenOrder docTokenSeq wordOrder docWordSeq #>   <chr>              <dbl>       <dbl>     <dbl>      <dbl> #> 1 31F282855E95E          1           1         0          0 #> 2 363C1D373B2F7          2           2         1          1 #> 3 3628E4BD4CC05          3           3         0          0 #> 4 37EFCBECFD691          1           4         1          2 #> 5 12D67756890C1          2           5         2          3 #> 6 936363B71D59           3           6         3          4 head(rez007$chunkDF$refexpr %>% select(id, tokenOrderFirst, tokenOrderLast, docTokenSeqFirst, docTokenSeqLast, wordOrderFirst, wordOrderLast, docWordSeqFirst, docWordSeqLast)) #> # A tibble: 6 × 9 #>   id            tokenO…¹ token…² docTo…³ docTo…⁴ wordO…⁵ wordO…⁶ docWo…⁷ docWo…⁸ #>   <chr>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 35E3E0AB6803A        3       5      17      19       1       3      12      14 #> 2 1F6B5F0B3FF59        5      12      25      32       3      10      17      24 #> 3 24FE2B219BD21        8      12      28      32       6      10      20      24 #> 4 158B579C1BA49       11      12      31      32       9      10      23      24 #> 5 2B6521E881365        2       5     144     147       2       5      96      99 #> 6 5B854594DD34         5      10     156     161       2       6     103     107 #> # … with abbreviated variable names ¹​tokenOrderFirst, ²​tokenOrderLast, #> #   ³​docTokenSeqFirst, ⁴​docTokenSeqLast, ⁵​wordOrderFirst, ⁶​wordOrderLast, #> #   ⁷​docWordSeqFirst, ⁸​docWordSeqLast"},{"path":"https://rezonators.github.io/rezonateR/articles/time_seq.html","id":"unit-order","dir":"Articles","previous_headings":"","what":"Unit order","title":"Time and sequence","text":"ordering units, unitSeq, available rezrDFs unitDF default. addUnitSeq() function adds unitSeq fields. function allows set entity (optionally, layer). Whichever entity type specify, everything ‘’ also get unit orders. example, specify ‘track’ level want unit order, tokenDF chunkDFwill get . Note chunkDF layers depend get unitSeqFirst unitSeqLast, chunk combination feature discussed trees chapter.","code":"rez007 = addUnitSeq(rez007, \"track\")"},{"path":"https://rezonators.github.io/rezonateR/articles/time_seq.html","id":"advanced-using-getseqbounds-on-other-orders","dir":"Articles","previous_headings":"","what":"Advanced: Using getSeqBounds on other orders","title":"Time and sequence","text":"Sometimes, ordered structures file may want consider, prosodic sentences turns. may want get boundary values ; example, might want know first last prosodic sentence numbers inside stack. moment, built-support limited, advanced function getSeqBounds() may used get upper lower bounds . TODO: Add actual example stacks stack support added.","code":""},{"path":"https://rezonators.github.io/rezonateR/articles/time_seq.html","id":"onwards","dir":"Articles","previous_headings":"","what":"Onwards!","title":"Time and sequence","text":"Let’s practice saving data : Now know deal time sequence, even easier work rezonateR. ’re following whole tutorial series, next tutorial vignette(\"edit_easyRez\"), start learning add automatic annotations rezrDFs!","code":"savePath = \"rez007.Rdata\" rez_save(rez007, savePath) #> Saving rezrObj ..."},{"path":"https://rezonators.github.io/rezonateR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Ka Yau Lai. Author, maintainer. John W Du Bois. Author.","code":""},{"path":"https://rezonators.github.io/rezonateR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lai R, Du Bois J (2022). rezonateR: Support Package Working Rezonator R. R package version 0.1.1.0000, https://rezonators.github.io/rezonateR/.","code":"@Manual{,   title = {rezonateR: A Support Package for Working with Rezonator in R},   author = {Ryan Ka Yau Lai and John W {Du Bois}},   year = {2022},   note = {R package version 0.1.1.0000},   url = {https://rezonators.github.io/rezonateR/}, }"},{"path":"https://rezonators.github.io/rezonateR/index.html","id":"rezonater","dir":"","previous_headings":"","what":"A Support Package for Working with Rezonator in R","title":"A Support Package for Working with Rezonator in R","text":"rezonateR (pronounced “resonate R”) uses R (statistics software) analyze visualize data resonance natural language. data rezonateR takes input created companion tool Rezonator. addition, rezonateR can provide pre-processing natural language data prepare importing Rezonator. Resonance represents activation affinities across utterances natural language. Resonance plays key part creating links parallel structures, thereby inviting perception parallel meanings. Resonance key factor creation coherence dialogue, organization engagement co-participants conversation. public-facing website project, see Rezonator.com.","code":""},{"path":"https://rezonators.github.io/rezonateR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 John W. DuBois Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acField.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut functions for functions beginning with addField and changeField — addField","title":"Shortcut functions for functions beginning with addField and changeField — addField","text":"Mostly shortcut addFieldLocal changeFieldLocal.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut functions for functions beginning with addField and changeField — addField","text":"","code":"addField(x, ..., foreign = F)  changeField(x, ..., foreign = F)  # S3 method for rezrDF addField(rezrDF, ..., foreign = F)  # S3 method for rezrDF changeField(rezrDF, ..., foreign = F)  # S3 method for rezrObj addField(rezrObj, ..., foreign = F)  # S3 method for rezrObj changeField(rezrObj, ..., foreign = F)"},{"path":"https://rezonators.github.io/rezonateR/reference/acField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut functions for functions beginning with addField and changeField — addField","text":"... Arguments passed functions see addFieldLocal.rezrDF, addFieldForeign.rezrDF, addFieldLocal.rezrObj addFieldForeign.rezrObj. foreign TRUE, adding foreign field. Normally set false; can just call addFieldForeign.rezrDF / addFieldForeign.rezrObj foreign fields. rezrDF rezrDF modified.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acField.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut functions for functions beginning with addField and changeField — addField","text":"rezrDF rezrObj modified.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldForeign.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily add a field to / change a field in a rezrDF using information from another rezrDF. Has two variants that may be applied to rezrDFs or rezrObjs, — addFieldForeign","title":"Easily add a field to / change a field in a rezrDF using information from another rezrDF. Has two variants that may be applied to rezrDFs or rezrObjs, — addFieldForeign","text":"Easily add field / change field rezrDF using information another rezrDF. two variants may applied rezrDFs rezrObjs,","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldForeign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily add a field to / change a field in a rezrDF using information from another rezrDF. Has two variants that may be applied to rezrDFs or rezrObjs, — addFieldForeign","text":"","code":"addFieldForeign(x, ...)  changeFieldForeign(x, ...)  # S3 method for rezrDF addFieldForeign(   targetDF,   sourceDF,   targetForeignKeyName,   targetFieldName = \"\",   sourceFieldName = \"\",   type = \"simple\",   fieldaccess = \"flex\",   complexAction = NULL,   targetNodeMap = NULL )  # S3 method for rezrDF changeFieldForeign(   targetDF,   sourceDF,   targetForeignKeyName,   targetFieldName = \"\",   sourceFieldName = \"\",   type = \"simple\",   fieldaccess = \"flex\",   complexAction = NULL,   targetNodeMap = NULL )  # S3 method for rezrObj addFieldForeign(   rezrObj,   targetEntity,   targetLayer = \"\",   sourceEntity,   sourceLayer = \"\",   targetForeignKeyName,   targetFieldName = \"\",   sourceFieldName = \"\",   type = \"simple\",   fieldaccess = \"flex\",   complexAction = NULL )  # S3 method for rezrObj changeFieldForeign(   rezrObj,   targetEntity,   targetLayer = \"\",   sourceEntity,   sourceLayer = \"\",   targetForeignKeyName,   targetFieldName = \"\",   sourceFieldName = \"\",   type = \"simple\",   fieldaccess = \"flex\",   complexAction = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldForeign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily add a field to / change a field in a rezrDF using information from another rezrDF. Has two variants that may be applied to rezrDFs or rezrObjs, — addFieldForeign","text":"targetDF rezrDF changing. sourceDF rezrDF getting information . targetForeignKeyName name field target DF corresponds key (ID) source DF. type = \"simple\", column rezrDF. type = \"complex\", field target node map, targetNodeMap must specified. targetFieldName name field want add / change. sourceFieldName name field source rezrDF pulling information . type \"simple\", row target DF gets information one row source DF. \"complex\", row target DF gets information multiple rows source DF. fieldaccess field access value want set new / changed field. complexAction type = \"complex\", action aggregate values source DF together. See concatenateAll ideas. targetNodeMap node map corresponding target DF. needs specified type = \"complex\". rezrObj rezrObj changing. targetEntity Rezonator entity changing (e.g. token, unit, entry ...) targetLayer layer Rezonator entity changing . Leave blank entities without layers (e.g. token, entry unit). layers entities may layers (.e. track, rez, chunk), type 'default'. sourceEntity Rezonator entity getting information . sourceLayer layer Rezonator entity changing . Leave blank entities without layers (e.g. token, entry unit). layers entities may layers (.e. track, rez, chunk), type 'default'.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldForeign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily add a field to / change a field in a rezrDF using information from another rezrDF. Has two variants that may be applied to rezrDFs or rezrObjs, — addFieldForeign","text":"applied rezrDF, rezrDF object added / changed field. applied rezrObj, rezrObj change applied rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldForeign.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Easily add a field to / change a field in a rezrDF using information from another rezrDF. Has two variants that may be applied to rezrDFs or rezrObjs, — addFieldForeign","text":"major differences rezrDFs rezrObjs. However, rezrDF variant can applied emancipated rezrDFs (rezrDFs belong rezrObj), whereas rezrObj variant elegant working rezrDFs within rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldLocal.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily add a field to / change a field in a rezrDF using only information from that rezrDF — addFieldLocal","title":"Easily add a field to / change a field in a rezrDF using only information from that rezrDF — addFieldLocal","text":"Easily add field / change field rezrDF using information rezrDF Easily add field / change field rezrDF rezrObj using information rezrDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldLocal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily add a field to / change a field in a rezrDF using only information from that rezrDF — addFieldLocal","text":"","code":"addFieldLocal(x, ...)  changeFieldLocal(x, ...)  # S3 method for rezrDF addFieldLocal(   rezrDF,   fieldName,   expression,   type = \"simple\",   fieldaccess = \"flex\",   groupField = \"\" )  # S3 method for rezrDF changeFieldLocal(   rezrDF,   fieldName,   expression,   type = \"simple\",   fieldaccess = \"\",   groupField = \"\" )  # S3 method for rezrObj addFieldLocal(   rezrObj,   entity,   layer,   fieldName,   expression,   type = \"simple\",   fieldaccess = \"flex\",   groupField = \"\" )  # S3 method for rezrObj changeFieldLocal(   rezrObj,   entity,   layer,   fieldName,   expression,   type = \"simple\",   fieldaccess = \"flex\",   groupField = \"\" )"},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldLocal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily add a field to / change a field in a rezrDF using only information from that rezrDF — addFieldLocal","text":"x object (rezrDF rezrObj) modified. ... Arguments passed four specific functions. rezrDF rezrDF object like change. fieldName name field like add change. expression R expression. example, like add columns b rezrDF together, type + b. fieldaccess access value like assign new changed field. rezrObj rezrObj changing. entity name Rezonator entity changing - track, rez, chunk, token, unit, stack, etc. layer name layer Rezonator entity wil changing. Leave blank entities without layers (.e. token, entry unit). layers entities, type 'default'.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldLocal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily add a field to / change a field in a rezrDF using only information from that rezrDF — addFieldLocal","text":"used rezrDF, rezrDF new changed field. used rezrObjs, rezrObj changed rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/acFieldLocal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Easily add a field to / change a field in a rezrDF using only information from that rezrDF — addFieldLocal","text":"changeFieldLocal changeFieldForeign set field access status changed fields 'flex' default, even originally auto foreign. Please specify fieldaccess = 'auto' 'foreign' want changed fields change maintain statuses. (ensure aware fact changing update function cases.) changeField support changing auto foreign field's value without changing field access status update function, generally mistake; must , use rez_mutate.') major differences rezrDFs rezrObjs. However, rezrDF variant can applied emancipated rezrDFs (rezrDFs belong rezrObj), whereas rezrObj variant elegant working rezrDFs within rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addIsWordField.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a field on whether something is a word or not. — addIsWordField","title":"Add a field on whether something is a word or not. — addIsWordField","text":"Add field whether something word .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addIsWordField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a field on whether something is a word or not. — addIsWordField","text":"","code":"addIsWordField(x, ...)  # S3 method for rezrDF addIsWordField(x, cond, addWordSeq = T)  # S3 method for rezrObj addIsWordField(x, cond, addWordSeq = T)"},{"path":"https://rezonators.github.io/rezonateR/reference/addIsWordField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a field on whether something is a word or not. — addIsWordField","text":"x rezrDF rezrObj edited. cond wordhood condition. example, word column called 'word', wish exclude zeroes, may write 'x == \"<0>\"'. addWordSeq TRUE, columns wordOrder docWordSeq added.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addIsWordField.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a field on whether something is a word or not. — addIsWordField","text":"modified rezrDF rezrObj. addWordSeq set TRUE, columns wordOrder docWordSeq added tokenDF entryDF, columns wordOrderFirst, wordOrderLast, docWordSeqFirst docWordSeqLast added unitDF, chunkDF trackDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addIsWordField.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add a field on whether something is a word or not. — addIsWordField","text":"used rezrObj addWordSeq = T, wordOrder docWordSeq automatically added entry, unit, chunk track tables. Rez stack tables coming soon.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addRow.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rows to a certain data.frame — addRow","title":"Add rows to a certain data.frame — addRow","text":"Add rows certain data.frame","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rows to a certain data.frame — addRow","text":"","code":"addRow(x, ...)  # S3 method for rezrDF addRow(rezrDF, ...)  # S3 method for rezrObj addRow(rezrObj, entity, layer, nodeMapArgs = list(), ...)"},{"path":"https://rezonators.github.io/rezonateR/reference/addRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rows to a certain data.frame — addRow","text":"... Arguments passed rez_add_row rezrDF rezrDF added. rezrObj rezrObj, want ensure primary key overlap node nodeMap. entity name Rezonator entity changing - track, rez, chunk, token, unit, stack, etc. layer layer like edit. nodeMapArgs list fields added nodeMap , rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rows to a certain data.frame — addRow","text":"applied rezrDF, rezrDF row added. applied rezrObj, rezrObj rezrDF associated nodeMap updated.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addUnitSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add unit sequence information to different levels of rezrObj. — addUnitSeq","title":"Add unit sequence information to different levels of rezrObj. — addUnitSeq","text":"Add unit sequence information different levels rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addUnitSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add unit sequence information to different levels of rezrObj. — addUnitSeq","text":"","code":"addUnitSeq(rezrObj, entity, layers = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/addUnitSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add unit sequence information to different levels of rezrObj. — addUnitSeq","text":"rezrObj rezrObj object entity name Rezonator entity changing - track, rez, chunk, token, unit, stack, etc. layers layers unit sequence information added.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/addUnitSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add unit sequence information to different levels of rezrObj. — addUnitSeq","text":"rezrObj object unit sequences entity desired, plus levels . example, entity 'track', see unitSeq information token chunk , rez.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/bridging.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions related to bridging and frames. — lastBridgeUnit","title":"Functions related to bridging and frames. — lastBridgeUnit","text":"See also countCompetitors, trackPrevContext.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/bridging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions related to bridging and frames. — lastBridgeUnit","text":"","code":"lastBridgeUnit(   frameMatrix,   unitSeq = NULL,   chain = NULL,   tokenOrderFirst = NULL,   tokenOrderLast = NULL,   inclRelations = NULL )  unitsToLastBridge(   frameMatrix,   unitSeq = NULL,   chain = NULL,   tokenOrderLast = NULL,   tokenOrderFirst = NULL,   inclRelations = NULL )  lastBridgeToken(   frameMatrix,   firstOrLast = \"last\",   tokenOrderFirst = NULL,   tokenOrderLast = NULL,   chain = NULL,   inclRelations = NULL )  tokensToLastBridge(   frameMatrix,   firstOrLast = \"last\",   tokenOrderFirst = NULL,   tokenOrderLast = NULL,   chain = NULL,   zeroProtocol = \"literal\",   zeroCond = NULL,   unitSeq = NULL,   unitDF = NULL,   inclRelations = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/bridging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions related to bridging and frames. — lastBridgeUnit","text":"unitSeq vector units mentions appeared. chain chain mention belongs . zeroProtocol 'literal', take seq values zeroes face value. (set zeros non-words use docWordSeqFirst discourseWordSeLast tokenOrder, lead meaningless values.) 'unitFinal', treat zeroes final word unit. 'unitFirst', treat zeroes first word unit. zeroCond condition determining whether token zero. people, (word column) == \"<0>\". tokenOrder vector sequence values values mentions appeared. Common choices docTokenSeqFirst, docTokenSeqLast, wordTokenSeqFirst wordTokenseqLast (last two available running addIsWordField rezrObj. default docTokenSeqLast.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/combineLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine different layers of an entity, and similar entities — combineLayers","title":"Combine different layers of an entity, and similar entities — combineLayers","text":"Combine different layers entity, similar entities","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/combineLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine different layers of an entity, and similar entities — combineLayers","text":"","code":"combineLayers(rezrObj, entity, type = \"intersect\")  combineChunks(rezrObj, ...)  combineTokenChunk(rezrObj, type = \"intersect\")"},{"path":"https://rezonators.github.io/rezonateR/reference/combineLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine different layers of an entity, and similar entities — combineLayers","text":"rezrObj rezrObj object entity Rezonator entity multiple layers (e.g. track, rez, chunk) want combine type type combination. 'intersect', take intersection columns rezrDFs. 'union', take union columns, populating missing fields NAs. ... rezrDF objects combined","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/combineLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine different layers of an entity, and similar entities — combineLayers","text":"rezrDF containing required material.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/combineLayer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Combine different layers of an entity, and similar entities — combineLayers","text":"mainly used need draw information one rezrDF purpose functions like addFieldForeign rez_left_join.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/complexActions.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for getting summary information about a vector of strings. — concatenateAll","title":"Functions for getting summary information about a vector of strings. — concatenateAll","text":"functions may used complexAction field addFieldForeign / changeFieldForeign], within expressions functions like addField.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/complexActions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for getting summary information about a vector of strings. — concatenateAll","text":"","code":"concatenateAll(x)  longestLength(x)  longest(x)  shortestLength(x)  shortest(x)"},{"path":"https://rezonators.github.io/rezonateR/reference/complexActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for getting summary information about a vector of strings. — concatenateAll","text":"x information source rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/complexActions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for getting summary information about a vector of strings. — concatenateAll","text":"aggregated data, usually vector single value.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/complexActions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions for getting summary information about a vector of strings. — concatenateAll","text":"concatenateAll concatenates everything together. confused concatStringFields, applied dataFrames. longest shortest give longest shortest strings, may multiple entries ties. longestLength shortestLength give lengths longest shortest strings x. base R functions may used include max, min, mean, range, etc. Remember include function name complexAction fields, include 'x' (normally name column inside rezrDF) expression fields.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/concatStringFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate string values in a lower-level data frame — concatStringFields","title":"Concatenate string values in a lower-level data frame — concatStringFields","text":"recommended called users; addFieldForeign concatenateAll suffices purposes.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/concatStringFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate string values in a lower-level data frame — concatStringFields","text":"","code":"concatStringFields(   simpleDF,   complexDF,   complexNodeMap,   fieldnames,   tokenListName = \"tokenList\",   separator = \"\",   ... )"},{"path":"https://rezonators.github.io/rezonateR/reference/concatStringFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate string values in a lower-level data frame — concatStringFields","text":"simpleDF lower-level dataframe, example token dataframe chunks units, unit dataframe stacks. complexDF dataframe trying add concatenated fields . complexNodeMap node map corresponding simpleDF. fieldnames fields concatenated. separator character words separated. ... Additional fields 'simpleDFAddress', 'complexNodeMapAddress', 'fieldaccess' (foreign default) lowerToHigher(). needed want automatically generated update functions.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/concatStringFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate string values in a lower-level data frame — concatStringFields","text":"complexDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/countCompetitors.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of competitors intervening between the previous mention and the current mention — countCompetitors","title":"Count the number of competitors intervening between the previous mention and the current mention — countCompetitors","text":"Count number competitors intervening previous mention current mention","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/countCompetitors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of competitors intervening between the previous mention and the current mention — countCompetitors","text":"","code":"countCompetitors(cond = NULL, window = Inf, tokenOrder = NULL, chain = NULL)"},{"path":"https://rezonators.github.io/rezonateR/reference/countCompetitors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of competitors intervening between the previous mention and the current mention — countCompetitors","text":"cond condition something counts competitor. Leave blank anything goes. tokenOrder vector sequence values values mentions appeared. Common choices docTokenSeqFirst, docTokenSeqLast, wordTokenSeqFirst wordTokenseqLast (last two available running addIsWordField rezrObj. default docTokenSeqLast. chain chain mention belongs .","code":""},{"path":[]},{"path":"https://rezonators.github.io/rezonateR/reference/countMatchingCompetitors.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of competitors intervening between the previous mention and the current mention — countMatchingCompetitors","title":"Count the number of competitors intervening between the previous mention and the current mention — countMatchingCompetitors","text":"Count number competitors intervening previous mention current mention","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/countMatchingCompetitors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of competitors intervening between the previous mention and the current mention — countMatchingCompetitors","text":"","code":"countMatchingCompetitors(   matchCol,   window = Inf,   tokenOrder = NULL,   chain = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/countMatchingCompetitors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of competitors intervening between the previous mention and the current mention — countMatchingCompetitors","text":"matchCol column value matched. tokenOrder vector sequence values values mentions appeared. Common choices docTokenSeqFirst, docTokenSeqLast, wordTokenSeqFirst wordTokenseqLast (last two available running addIsWordField rezrObj. default docTokenSeqLast. chain chain mention belongs .","code":""},{"path":[]},{"path":"https://rezonators.github.io/rezonateR/reference/createLeftJoinUpdate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a left join update function. — createLeftJoinUpdate","title":"Create a left join update function. — createLeftJoinUpdate","text":"function factory allows user create update function based left join. called users; automatically called rez_left_join necessary information supplied.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createLeftJoinUpdate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a left join update function. — createLeftJoinUpdate","text":"","code":"createLeftJoinUpdate(address, fkey, df2key = \"\", field = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/createLeftJoinUpdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a left join update function. — createLeftJoinUpdate","text":"address address field want get data source rezrDF. May vector one source rezrDF. example, 'word' field tokenDF address 'tokenDF/word', 'word' field 'verb' layer chunkDF address 'chunkDF/verb/word'. fkey name foreign key target rezrDF. field name field target rezrDF updated. field names source DFs also name target DF, may leave unspecified. df rezrDF updated. rezrObj full rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createLeftJoinUpdate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a left join update function. — createLeftJoinUpdate","text":"update function left join defined.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createLowerToHigherUpdate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an update function based on a lowerToHigher-type action. — createLowerToHigherUpdate","title":"Create an update function based on a lowerToHigher-type action. — createLowerToHigherUpdate","text":"function factory allows user create update function based lowerToHigher operation. called users; lowerToHigher call automatically necessary data supplied.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createLowerToHigherUpdate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an update function based on a lowerToHigher-type action. — createLowerToHigherUpdate","text":"","code":"createLowerToHigherUpdate(   address,   fkeyAddress,   action,   field = \"\",   fkeyInDF = FALSE,   seqName = \"docTokenSeq\" )"},{"path":"https://rezonators.github.io/rezonateR/reference/createLowerToHigherUpdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an update function based on a lowerToHigher-type action. — createLowerToHigherUpdate","text":"address address info field want source rezrDF. fkeyAddress address token list nodeMap corresponds target rezrDF. action action performed combine fields. field target field. fkeyInDF Whether foreign key data frame. seqName name sequencing index lower rezrDF. df target rezrDF want modify. rezrObj rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createLowerToHigherUpdate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an update function based on a lowerToHigher-type action. — createLowerToHigherUpdate","text":"update function lowerToHigher-type foreign field.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createRezId.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Rezonator ID. — createRezId","title":"Create a Rezonator ID. — createRezId","text":"Creates Rezonator ID new rows need added. Normally need called user; rez_add_row addRow automatically.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createRezId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Rezonator ID. — createRezId","text":"","code":"createRezId(n = 1, existing = character(0))"},{"path":"https://rezonators.github.io/rezonateR/reference/createRezId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Rezonator ID. — createRezId","text":"n number Rezonator IDs want. existing Existing IDs, avoid overlap.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createRezId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Rezonator ID. — createRezId","text":"vector Rezonator IDs.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createRezId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Rezonator ID. — createRezId","text":"","code":"createRezId(3) #> [1] \"Y4UCeKmp6gHqR\" \"tIhSqeuYaBNW3\" \"X08pOEvayTYID\""},{"path":"https://rezonators.github.io/rezonateR/reference/createUpdateFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an update function. — createUpdateFunction","title":"Create an update function. — createUpdateFunction","text":"Create update function 'auto' fields . 'foreign' fields take createLowerToHigherUpdate createLeftJoinUpdate. Normally need called user; automatically called addFieldLocal rez_mutate.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createUpdateFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an update function. — createUpdateFunction","text":"","code":"createUpdateFunction(field, x, df, groupField = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/createUpdateFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an update function. — createUpdateFunction","text":"field field want create update function. x R expression. example, want column2 updated always three times column3, x column3 * 3. df rezrDF want create update function.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/createUpdateFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an update function. — createUpdateFunction","text":"update function automatically generated dependency information. figure dependency information , define .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract/set an attribute of a updateFunction. — deps","title":"Extract/set an attribute of a updateFunction. — deps","text":"Extract dependency information updateFunction, set .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract/set an attribute of a updateFunction. — deps","text":"","code":"deps(updateFunct)  deps(updateFunct) <- value"},{"path":"https://rezonators.github.io/rezonateR/reference/deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract/set an attribute of a updateFunction. — deps","text":"updateFunct updateFunction object. value value want set function .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getAddresses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the addresses of a DF with multiple layers — getLayerAddresses","title":"Get all the addresses of a DF with multiple layers — getLayerAddresses","text":"Get addresses DF multiple layers Get combined addressese token chunk DFs","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getAddresses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the addresses of a DF with multiple layers — getLayerAddresses","text":"","code":"getLayerAddresses(rezrObj, entity)  getTokenChunkAddresses(rezrObj)"},{"path":"https://rezonators.github.io/rezonateR/reference/getAddresses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the addresses of a DF with multiple layers — getLayerAddresses","text":"rezrObj rezrObj object. entity entity multiple layers - chunk, track, trail, etc.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getAddresses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all the addresses of a DF with multiple layers — getLayerAddresses","text":"desired addresses.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getAllTreeCorrespondences.html","id":null,"dir":"Reference","previous_headings":"","what":"Relate table rows to tree entries covering the same tokens. — getAllTreeCorrespondences","title":"Relate table rows to tree entries covering the same tokens. — getAllTreeCorrespondences","text":"Relate table rows tree entries covering tokens.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getAllTreeCorrespondences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relate table rows to tree entries covering the same tokens. — getAllTreeCorrespondences","text":"","code":"getAllTreeCorrespondences(rezrObj, entity = \"chunk\")"},{"path":"https://rezonators.github.io/rezonateR/reference/getAllTreeCorrespondences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relate table rows to tree entries covering the same tokens. — getAllTreeCorrespondences","text":"rezrObj rezrObj object entity name Rezonator entity changing - track, rez, chunk, token, unit, stack, etc.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getAllTreeCorrespondences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relate table rows to tree entries covering the same tokens. — getAllTreeCorrespondences","text":"rezrObj new column called 'treeEntry' added rows correspond tree entries. called 'track', treeEntry added token chunk well. available units.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getRezrDFAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract/set an attribute of a rezrDF. — getRezrDFAttr","title":"Extract/set an attribute of a rezrDF. — getRezrDFAttr","text":"Extract attribute data.frame (inNodeMap, fieldaccess, updateFunct), set .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getRezrDFAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract/set an attribute of a rezrDF. — getRezrDFAttr","text":"","code":"getRezrDFAttr(df, attr, fields = \"\")  fieldaccess(df, fields = \"\")  updateFunct(df, fields = \"\")  inNodeMap(df, fields = \"\")  setRezrDFAttr(df, attr, fields = \"\", value)  updateFunct(df, fields = \"\") <- value  fieldaccess(df, fields = \"\") <- value  inNodeMap(df, fields = \"\") <- value"},{"path":"https://rezonators.github.io/rezonateR/reference/getRezrDFAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract/set an attribute of a rezrDF. — getRezrDFAttr","text":"df data.frame whose field access attributes want see. attr attribute want extract. fields field whose access attribute want see. left blank, vector containing attributes output. value value want set .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getRezrDFAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract/set an attribute of a rezrDF. — getRezrDFAttr","text":"value attribute want extract (extract functions), DF value set (set functions).","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getSeqBounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the max and min of a certain value from a lower object table to a higher object table. — getSeqBounds","title":"Get the max and min of a certain value from a lower object table to a higher object table. — getSeqBounds","text":"typically used sequence time.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getSeqBounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the max and min of a certain value from a lower object table to a higher object table. — getSeqBounds","text":"","code":"getSeqBounds(   simpleDF,   complexDF,   complexNodeMap,   fieldnames,   simpleIsAtom = T,   seqName = \"\",   tokenListName = \"tokenList\",   exclude0 = T,   ... )"},{"path":"https://rezonators.github.io/rezonateR/reference/getSeqBounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the max and min of a certain value from a lower object table to a higher object table. — getSeqBounds","text":"simpleDF lower-level dataframe, example token dataframe chunks units, unit dataframe stacks. either integer field contains sequence question, two integer fields containing first last (see simpleIsAtom). complexDF dataframe trying add concatenated fields . create two integer fields, one first one last integer. complexNodeMap node map corresponding simpleDF. fieldnames fields concatenated. simpleIsAtom set T, means simpleDF contains single values, range. set F, means simpleDF contains range, .e. somethingFirst somethingLast. ... Additional fields 'simpleDFAddress', 'complexNodeMapAddress', 'fieldaccess' (foreign default) lowerToHigher(). Needed want automatically generated update functions.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getSeqBounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the max and min of a certain value from a lower object table to a higher object table. — getSeqBounds","text":"complex DF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/getSeqBounds.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get the max and min of a certain value from a lower object table to a higher object table. — getSeqBounds","text":"use cases handled functions like addUnitSeq addIsWordField. call function, note rezrDF changing second parameter, first. , piping done like : someDF %>% getSeqBounds(simpleDF, ., complexNodeMap, ...)","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/grapes-plus-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate two strings together with nothing in between. — %+%","title":"Concatenate two strings together with nothing in between. — %+%","text":"intended similar Python + strings, vectorised. mainly avoid awkward syntax base R base::paste0.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/grapes-plus-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate two strings together with nothing in between. — %+%","text":"","code":"a %+% b"},{"path":"https://rezonators.github.io/rezonateR/reference/grapes-plus-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate two strings together with nothing in between. — %+%","text":"character object. b character object.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/grapes-plus-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate two strings together with nothing in between. — %+%","text":"concatenated string.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/grapes-plus-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate two strings together with nothing in between. — %+%","text":"","code":"\"3\" %+% \"a\" #You get \"3a\" #> [1] \"3a\""},{"path":"https://rezonators.github.io/rezonateR/reference/gug.html","id":null,"dir":"Reference","previous_headings":"","what":"Group / ungroup rezrDFs. — rez_group_by","title":"Group / ungroup rezrDFs. — rez_group_by","text":"replacement dplyr group_by ungroup.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/gug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group / ungroup rezrDFs. — rez_group_by","text":"","code":"rez_group_by(df, ...)  rez_ungroup(df, ...)"},{"path":"https://rezonators.github.io/rezonateR/reference/gug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group / ungroup rezrDFs. — rez_group_by","text":"df data frame modified. ... Arguments passed group_by / ungroup, including field(s) grouping.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/gug.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group / ungroup rezrDFs. — rez_group_by","text":"grouped / ungroupd rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/importRez.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a Rez file — importRez","title":"Import a Rez file — importRez","text":"Import Rez file. returns object containing, among things, nodeMap object containing raw information, data frames tokens, units, chunks, track chain entries, track chains, containing key information likely useful user.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/importRez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a Rez file — importRez","text":"","code":"importRez(paths, docnames = \"\", concatFields, layerRegex, separator = \" \")"},{"path":"https://rezonators.github.io/rezonateR/reference/importRez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a Rez file — importRez","text":"paths character vector paths files imported. Windows users, please use / instead \\. docnames character vector document names. left blank, docname generated according filenames files import. example, document foo/bar.rez named 'bar'. concatFields string names token-level fields, example word transcription, concatenated form chunk- entry-level fields. example, word field called 'word' IPA transcription field called 'ipa', concatFields c(\"word\", \"ipa\"). layerRegex list, component (just track chunk now; stack rez added later). list entry, three components: 'field' field splitting based; 'regex' vector regular expressions; 'names' vector layer names. 'regex' one fewer entry 'names', last 'names' default case. separator character wish use separate words concatenated columns, generally empty string languages like Tibetan Chinese, single space languages like Spanish English.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/importRez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a Rez file — importRez","text":"rezrObj object. See new_rezrObj details.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/importRez.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import a Rez file — importRez","text":"import, may consider calling functions addUnitSeq, addIsWordField getAllTreeCorrespondences, excluded import performane issues.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/lowerList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of values from a lower-level table. — getLowerFieldList","title":"Get a list of values from a lower-level table. — getLowerFieldList","text":"Get list values lower-level table.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/lowerList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of values from a lower-level table. — getLowerFieldList","text":"","code":"getLowerFieldList(   rezrObj,   fieldName,   simpleDF,   complexDF,   complexNodeMap,   listName,   complexIDs = NULL )  getTrackTokens(rezrObj, fieldName, trackDF = NULL)"},{"path":"https://rezonators.github.io/rezonateR/reference/lowerList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of values from a lower-level table. — getLowerFieldList","text":"rezrObj rezrObj object information extracted. fieldName field like extract. simpleDF lower rezrDF. complexDF higher rezrDF. complexNodeMap nodeMap corresponding higher rezrDF. listName name list keys complexNodeMap. complexIDs IDs rows complex rezrDF like extract information . trackDF trackDF like extract information .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/lowerList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of values from a lower-level table. — getLowerFieldList","text":"list vectors. list entry ID complex DF label, content vector, entry corresponds entry lower rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/lowerToHigher.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine information from multiple entries in a lower-level source table to a higher-level target table. — lowerToHigher","title":"Combine information from multiple entries in a lower-level source table to a higher-level target table. — lowerToHigher","text":"Combine information multiple entries lower-level source table higher-level target table.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/lowerToHigher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine information from multiple entries in a lower-level source table to a higher-level target table. — lowerToHigher","text":"","code":"lowerToHigher(   simpleDF = NULL,   complexDF,   complexNodeMap = NULL,   fieldnames,   higherFieldnames = \"\",   action,   seqName = \"docTokenSeq\",   tokenListName = \"tokenList\",   simpleDFAddress = \"\",   complexNodeMapAddress = \"\",   rezrObj = NULL,   fieldaccess = \"foreign\" )"},{"path":"https://rezonators.github.io/rezonateR/reference/lowerToHigher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine information from multiple entries in a lower-level source table to a higher-level target table. — lowerToHigher","text":"simpleDF rezrDF containing simple information (source rezrDF). complexDF rezrDF contain complex information simple table (target rezrDF). complexNodeMap node map corresponding complex (target) rezrDF fieldnames field names simple rezrDF whose information extracted. higherFieldnames field names complex rezrDF whose information extracted. action action performed data source rezrDF seqName name sequence field source (simple) rezrDF. tokenListName name list foreign keys target table. simpleDFAddress address simple (source) rezrDF, e.g. 'unitDF' 'chunkDF/refexpr'. needed want automatic update function, .e. 'foreign' fields. complexNodeMapAddress address complex (target) rezrDF. need 'nodeMap/' oart layer; just type name entity (e.g. track, chunk). needed want automatic update function, .e. 'foreign' fields. rezrObj rezrObj object. fieldaccess field access value field. set foreign, update function automatically added.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/lowerToHigher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine information from multiple entries in a lower-level source table to a higher-level target table. — lowerToHigher","text":"modified target table (complexDF). use cases handled functions like addUnitSeq addIsWordField. call function, note rezrDF changing second parameter, first. , piping done like : someDF %>% getSeqBounds(simpleDF, ., complexNodeMap, ...)","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergecat.html","id":null,"dir":"Reference","previous_headings":"","what":"Merging and renaming categories — mergeCats","title":"Merging and renaming categories — mergeCats","text":"Functions merging renaming categories character factor columns.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergecat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merging and renaming categories — mergeCats","text":"","code":"mergeCats(x, ..., asFactor = F, levels = NULL)  renameCats(x, ..., asFactor = F, levels = NULL)"},{"path":"https://rezonators.github.io/rezonateR/reference/mergecat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merging and renaming categories — mergeCats","text":"x column vector whose categories merged renamed. ... name argument new category, value argument vector names old categories (character values, even original column/vector contains factors). asFactor want result factor? levels asFactor = T, use set levels factor.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergecat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merging and renaming categories — mergeCats","text":"column vector desired changes.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergeChunksWithTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Relate table rows to tree entries covering the same tokens. — mergeChunksWithTree","title":"Relate table rows to tree entries covering the same tokens. — mergeChunksWithTree","text":"Relate table rows tree entries covering tokens.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergeChunksWithTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relate table rows to tree entries covering the same tokens. — mergeChunksWithTree","text":"","code":"mergeChunksWithTree(   rezrObj,   treeEntryDF = NULL,   addToTrack = F,   selectCond = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/mergeChunksWithTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relate table rows to tree entries covering the same tokens. — mergeChunksWithTree","text":"rezrObj rezrObj object treeEntryDF treeEntry data.frame, possibly filtered. addToTrack want add chunks trackDF well? selectCond condition selecting chunk provides field values.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergeChunksWithTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relate table rows to tree entries covering the same tokens. — mergeChunksWithTree","text":"rezrObj additional rows merged chunks. Original chunks stay behind. new column called combinedChunk. Combined chunks get value 'combined'. Members chunks get value '|infomember=COMBINEDCHUNKID' (providing data combined chunk) '|member=COMBINEDCHUNKID' (data-providing chunk).","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergedChunksToTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Add merged chunks in the chunkDF to the trackDF — mergedChunksToTrack","title":"Add merged chunks in the chunkDF to the trackDF — mergedChunksToTrack","text":"Add merged chunks chunkDF trackDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergedChunksToTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add merged chunks in the chunkDF to the trackDF — mergedChunksToTrack","text":"","code":"mergedChunksToTrack(rezrObj, trackLayers = NULL)"},{"path":"https://rezonators.github.io/rezonateR/reference/mergedChunksToTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add merged chunks in the chunkDF to the trackDF — mergedChunksToTrack","text":"rezrObj rezrObj chunked merged using mergeChunksWithTree. trackLayers Track chain layers going performed. NULL, action performed layers.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/mergedChunksToTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add merged chunks in the chunkDF to the trackDF — mergedChunksToTrack","text":"rezrObj trackDF augmented combined chunks chunkDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor function for rezrDF — new_rezrDF","title":"Constructor function for rezrDF — new_rezrDF","text":"Constructor function rezrDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor function for rezrDF — new_rezrDF","text":"","code":"new_rezrDF(df, fieldaccess, updateFunct, inNodeMap)"},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor function for rezrDF — new_rezrDF","text":"df data.frame fieldaccess set field access values updateFunct set update functions inNodeMap Whether fields data.frame node map","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor function for rezrDF — new_rezrDF","text":"rezrDF object fieldaccess, updateFunct inNodeMap values provided.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrDF.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Constructor function for rezrDF — new_rezrDF","text":"Field access values include 'key' primary key, 'core' fields fields mostly generated Rezonator, 'flex' fields may flexibly changed, 'auto' fields automatically generated information table, 'foreign' fields automatically generated information  ANOTHER table.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrObj.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor function for rezrObj. — new_rezrObj","title":"Constructor function for rezrObj. — new_rezrObj","text":"normally called users; automatically created importRez.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrObj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor function for rezrObj. — new_rezrObj","text":"","code":"new_rezrObj(list)"},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrObj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor function for rezrObj. — new_rezrObj","text":"list node map organised nodeLists, one entity.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/new_rezrObj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor function for rezrObj. — new_rezrObj","text":"rezrObj, consisting series rezrDFs nodeMap.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/reload.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for reloading auto and foreign fields. — reload","title":"Functions for reloading auto and foreign fields. — reload","text":"Functions reloading auto foreign fields.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/reload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for reloading auto and foreign fields. — reload","text":"","code":"reload(x, ...)  # S3 method for rezrDF reload(df, rezrObj, fields = \"\")  reloadLocal(df, fields = \"\")  reloadForeign(df, rezrObj, fields = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/reload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for reloading auto and foreign fields. — reload","text":"df rezrDF want modify. rezrObj entire rezrObj. fields fields rezrDF want modify.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/reload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for reloading auto and foreign fields. — reload","text":"modified rezrDF. reloadLocal reloads auto fields; reloadForeign reloads foreign fields. Foreign fields always updated auto fields. fields parameter available, find best update order; otherwise, use order provide except rule foreign fields updated first.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/reload.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions for reloading auto and foreign fields. — reload","text":"reload.rezrObj coming soon.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_add_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new rows to a rezrDF. — rez_add_row","title":"Add new rows to a rezrDF. — rez_add_row","text":"Add new rows rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_add_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new rows to a rezrDF. — rez_add_row","text":"","code":"rez_add_row(df, ..., rezrObj = NULL)"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_add_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new rows to a rezrDF. — rez_add_row","text":"df rezrDF updated. ... Argument names column names, argument values vectors values rows adding. primary key supplied, generate one . Auto fields automatically updated need supplied; foreign fields updated rezrObj supplied. rezrObj rezrObj, want ensure primary key overlap node nodeMap.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_add_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new rows to a rezrDF. — rez_add_row","text":"rezrDF new row(s).","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_add_row.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add new rows to a rezrDF. — rez_add_row","text":"update foreign fields want update foreign fields, use addRow.rezrDF. call function rezrDF complex foreign fields, use addRow.rezrDF instead; otherwise, update fields future.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_bind_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind together related rezrDF objects. — rez_bind_rows","title":"Bind together related rezrDF objects. — rez_bind_rows","text":"Bind together related rezrDF objects.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_bind_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind together related rezrDF objects. — rez_bind_rows","text":"","code":"rez_bind_rows(..., type = \"intersect\")"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_bind_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind together related rezrDF objects. — rez_bind_rows","text":"... rezrDF objects combined type type combination. 'intersect', take intersection columns rezrDFs. 'union', take union columns, populating missing fields NAs.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_bind_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind together related rezrDF objects. — rez_bind_rows","text":"bound rezrDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_dfop.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an operation on a data.frame while updating field access status. — rez_dfop","title":"Perform an operation on a data.frame while updating field access status. — rez_dfop","text":"wrapper performing data frame manipulation functions (dplyr functions) also updating field access status. ordinarily called users; beginning users may stick functions addFieldLocal, changeFieldForeign, rez_mutate, rez_left_join, much simple intuitive use.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_dfop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an operation on a data.frame while updating field access status. — rez_dfop","text":"","code":"rez_dfop(df, .f, ..., fieldaccess = \"flex\", updateFunct = NA, oldNames = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_dfop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an operation on a data.frame while updating field access status. — rez_dfop","text":"df data frame modified. .f function performed. ... Argument passed .f. fieldaccess field access status arguments. updateFunct list updateFunctions added. oldNames names fields originally rezrDF operation. fields renamed, leave blank.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_dfop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform an operation on a data.frame while updating field access status. — rez_dfop","text":"DF operation.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_group_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a group_split on a rezrDF — rez_group_split","title":"Perform a group_split on a rezrDF — rez_group_split","text":"main difference group_split attributes retained. use dplyr group_split, attributes retained.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_group_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a group_split on a rezrDF — rez_group_split","text":"","code":"rez_group_split(df, ...)"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_group_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a group_split on a rezrDF — rez_group_split","text":"df rezrDF object. ... Usual group_split parameters.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_group_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a group_split on a rezrDF — rez_group_split","text":"list rezrDF objects group_split.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_group_split.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Perform a group_split on a rezrDF — rez_group_split","text":"mostly useful creating smaller emancipated rezrDFs. assign results function back rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_left_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a left join on two rez data.frames and change field access status. — rez_left_join","title":"Perform a left join on two rez data.frames and change field access status. — rez_left_join","text":"wrapper performing left joins Rez data.frames. changes data frame, changing field access values, moment. desired fieldaccess value flex, may serve drop-replacement mutate. Note apart data.frame modified data.frame joining , arguments left_join must named.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_left_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a left join on two rez data.frames and change field access status. — rez_left_join","text":"","code":"rez_left_join(   df1,   df2 = NULL,   ...,   fieldaccess = \"foreign\",   df2Address = \"\",   df2key = \"\",   fkey = \"\",   rezrObj = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_left_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a left join on two rez data.frames and change field access status. — rez_left_join","text":"df1 left data.frame. df2 right data.frame. ... functions passed onto left_join, .e. columns changing adding. fieldaccess field access status field addding, either single character (apply new fields) vector characters new field. Note modifying adding fields, added fields access values changed. specifying entire vector field access values, best practice using function separate new-field added-field mutates, otherwise code difficult read. df2Address address source rezrDF. fkey foreign key df2. present, guess -line. rezrObj rezrObj object.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_left_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a left join on two rez data.frames and change field access status. — rez_left_join","text":"resultDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_left_join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a left join on two rez data.frames and change field access status. — rez_left_join","text":"default, suffix specified, suffixes c(\"\", \"_lower\"). , joining two data.frames, column called 'name', left data.frame's column still called 'name' new data.frame right data.frame's column get called 'name_lower'.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_mutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate a Rez data.frame and change field access status. — rez_mutate","title":"Mutate a Rez data.frame and change field access status. — rez_mutate","text":"wrapper performing mutations Rez data.frames, including validation ensure change anything change. changes data frame, changing field access data, moment. desired fieldaccess value flex, may serve drop-replacement mutate. Note apart data.frame modified, arguments mutate must named. Currently work across, stick mutate . may validate fields beforehand using rez_validate_fieldchange.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_mutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate a Rez data.frame and change field access status. — rez_mutate","text":"","code":"rez_mutate(df, ..., fieldaccess = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_mutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate a Rez data.frame and change field access status. — rez_mutate","text":"df data frame modified. ... functions passed onto mutate, .e. columns changing adding. fieldaccess field access status field addding, either single character (apply new fields) vector characters new field. Note modifying adding fields, added fields access values changed. specifying entire vector field access values, best practice using function separate new-field added-field mutates, otherwise code difficult read.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_mutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate a Rez data.frame and change field access status. — rez_mutate","text":"resultDF","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_mutate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mutate a Rez data.frame and change field access status. — rez_mutate","text":"fieldaccess set, set flex NEW fields. Old fields remain unchanged. Note different behaviour changeField, changes field access status 'flex' default field access given.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_pangloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Pangloss file — rez_pangloss","title":"Read Pangloss file — rez_pangloss","text":"Read Pangloss file","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_pangloss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Pangloss file — rez_pangloss","text":"","code":"rez_pangloss(url, filename)"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_pangloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Pangloss file — rez_pangloss","text":"url URL Pangloss source. filename filename export.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_pangloss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Pangloss file — rez_pangloss","text":"rezImport","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_pangloss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Pangloss file — rez_pangloss","text":"","code":"rez_pangloss(\"https://cocoon.huma-num.fr/data/mazaudon/masters/crdo-TAJ_ORIGTAM.xml\", \"tamang1.txt\") #>     word_id text_id sentence_id        word_form word_gloss sent_audio_start #> 1         1       1   ORIGTAMs1            ⁴unma       <NA>           0.0000 #> 2         2       1   ORIGTAMs1           ⁴taŋpo       <NA>           0.0000 #> 3         3       1   ORIGTAMs1          ⁴tui-ri       <NA>           0.0000 #> 4         4       1   ORIGTAMs1          ¹tor-se       <NA>           0.0000 #> 5         5       1   ORIGTAMs1          ³poi-ri       <NA>           0.0000 #> 6         6       1   ORIGTAMs2            ⁴unma       <NA>           5.7573 #> 7         7       1   ORIGTAMs2           ⁴taŋpo       <NA>           5.7573 #> 8         8       1   ORIGTAMs2          ⁴tui-ri       <NA>           5.7573 #> 9         9       1   ORIGTAMs2          ¹tor-se       <NA>           5.7573 #> 10       10       1   ORIGTAMs2       ³poi-ri-mi       <NA>           5.7573 #> 11       11       1   ORIGTAMs3           chetri       <NA>          11.0001 #> 12       12       1   ORIGTAMs3             ⁴kik       <NA>          11.0001 #> 13       13       1   ORIGTAMs3          ⁴pa:man       <NA>          11.0001 #> 14       14       1   ORIGTAMs3             ⁴kik       <NA>          11.0001 #> 15       15       1   ORIGTAMs3           ¹tamaŋ       <NA>          11.0001 #> 16       16       1   ORIGTAMs3             ⁴kik       <NA>          11.0001 #> 17       17       1   ORIGTAMs3      ²som-cim-ro       <NA>          11.0001 #> 18       18       1   ORIGTAMs4      ²som-naŋ-ri       <NA>          18.3013 #> 19       19       1   ORIGTAMs5          ¹ama-mi       <NA>          22.1610 #> 20       20       1   ORIGTAMs5           ³palaŋ       <NA>          22.1610 #> 21       21       1   ORIGTAMs5           ¹apa-m       <NA>          22.1610 #> 22       22       1   ORIGTAMs5  ¹hanuman-cim-ro       <NA>          22.1610 #> 23       23       1   ORIGTAMs6          ¹am'-se       <NA>          32.0675 #> 24       24       1   ORIGTAMs6             ¹tik       <NA>          32.0675 #> 25       25       1   ORIGTAMs6       ³pi-cim-ro       <NA>          32.0675 #> 26       26       1   ORIGTAMs7         ¹thetmai       <NA>          36.8599 #> 27       27       1   ORIGTAMs7             ²som       <NA>          36.8599 #> 28       28       1   ORIGTAMs7           ³ca-ta       <NA>          36.8599 #> 29       29       1   ORIGTAMs8           ⁴camam       <NA>          41.4915 #> 30       30       1   ORIGTAMs8              ¹ŋa       <NA>          41.4915 #> 31       31       1   ORIGTAMs8           ¹si-ma       <NA>          41.4915 #> 32       32       1   ORIGTAMs8              ¹ŋa       <NA>          41.4915 #> 33       33       1   ORIGTAMs8           ¹si-ma       <NA>          41.4915 #> 34       34       1   ORIGTAMs8          bel'-ri       <NA>          41.4915 #> 35       35       1   ORIGTAMs8              ¹ŋa       <NA>          41.4915 #> 36       36       1   ORIGTAMs8           ¹si-ma       <NA>          41.4915 #> 37       37       1   ORIGTAMs9           ¹ŋa-la       <NA>          51.5267 #> 38       38       1   ORIGTAMs9             ¹sja       <NA>          51.5267 #> 39       39       1   ORIGTAMs9        ²ai-ni-se       <NA>          51.5267 #> 40       40       1   ORIGTAMs9     ³a-²khraŋ-na       <NA>          51.5267 #> 41       41       1   ORIGTAMs9      ³a-⁴pjaŋ-na       <NA>          51.5267 #> 42       42       1  ORIGTAMs10           ¹ŋa-la       <NA>          57.9595 #> 43       43       1  ORIGTAMs10             ¹sja       <NA>          57.9595 #> 44       44       1  ORIGTAMs10           ²ai-ni       <NA>          57.9595 #> 45       45       1  ORIGTAMs10    ²kola-kat'-se       <NA>          57.9595 #> 46       46       1  ORIGTAMs10            ¹ca-o       <NA>          57.9595 #> 47       47       1  ORIGTAMs10       ³pi-cim-ro       <NA>          57.9595 #> 48       48       1  ORIGTAMs11           ³pi-ma       <NA>          62.3338 #> 49       49       1  ORIGTAMs11             ³oca       <NA>          62.3338 #> 50       50       1  ORIGTAMs11             ¹ama       <NA>          62.3338 #> 51       51       1  ORIGTAMs11           ¹si-si       <NA>          62.3338 #> 52       52       1  ORIGTAMs11           ¹ni-ci       <NA>          62.3338 #> 53       53       1  ORIGTAMs12              ³ca       <NA>          68.6379 #> 54       54       1  ORIGTAMs12          ²som-se       <NA>          68.6379 #> 55       55       1  ORIGTAMs12           ¹am-ta       <NA>          68.6379 #> 56       56       1  ORIGTAMs12        ¹phral-si       <NA>          68.6379 #> 57       57       1  ORIGTAMs12         ²tha:-si       <NA>          68.6379 #> 58       58       1  ORIGTAMs12           ¹am-ta       <NA>          68.6379 #> 59       59       1  ORIGTAMs12        ¹phral-si       <NA>          68.6379 #> 60       60       1  ORIGTAMs12         ²tha:-si       <NA>          68.6379 #> 61       61       1  ORIGTAMs13              ³ca       <NA>          76.7915 #> 62       62       1  ORIGTAMs13           ¹thepa       <NA>          76.7915 #> 63       63       1  ORIGTAMs13            (aaa)       <NA>          76.7915 #> 64       64       1  ORIGTAMs14           ¹thepa       <NA>          79.3255 #> 65       65       1  ORIGTAMs14        ²paraŋ-ca       <NA>          79.3255 #> 66       66       1  ORIGTAMs14         ²tha:-ci       <NA>          79.3255 #> 67       67       1  ORIGTAMs15              ³ca       <NA>          83.0705 #> 68       68       1  ORIGTAMs15       ¹cjaŋpa-ca       <NA>          83.0705 #> 69       69       1  ORIGTAMs15            ³kruŋ       <NA>          83.0705 #> 70       70       1  ORIGTAMs15      ²khru-pa-r'       <NA>          83.0705 #> 71       71       1  ORIGTAMs15      ²pit-cim-ro       <NA>          83.0705 #> 72       72       1  ORIGTAMs16              ³ca       <NA>          87.5178 #> 73       73       1  ORIGTAMs16       ¹cjaŋpa-ca       <NA>          87.5178 #> 74       74       1  ORIGTAMs16            ³kruŋ       <NA>          87.5178 #> 75       75       1  ORIGTAMs16      ²khru-pa-ri       <NA>          87.5178 #> 76       76       1  ORIGTAMs16          ²pit-ma       <NA>          87.5178 #> 77       77       1  ORIGTAMs17            ³kruŋ       <NA>          93.0925 #> 78       78       1  ORIGTAMs17         ²khru-si       <NA>          93.0925 #> 79       79       1  ORIGTAMs17           ³pa-ma       <NA>          93.0925 #> 80       80       1  ORIGTAMs18          ³cjocjo       <NA>          95.2007 #> 81       81       1  ORIGTAMs18          ⁴ni:-se       <NA>          95.2007 #> 82       82       1  ORIGTAMs18             ¹tik       <NA>          95.2007 #> 83       83       1  ORIGTAMs18       ¹la-cim-ro       <NA>          95.2007 #> 84       84       1  ORIGTAMs18          ³pi-sam       <NA>          95.2007 #> 85       85       1  ORIGTAMs19             ¹sja       <NA>          98.9281 #> 86       86       1  ORIGTAMs19        ²khraŋ-si       <NA>          98.9281 #> 87       87       1  ORIGTAMs19            (bis)       <NA>          98.9281 #> 88       88       1  ORIGTAMs19             ³ol'       <NA>          98.9281 #> 89       89       1  ORIGTAMs19           ¹la-si       <NA>          98.9281 #> 90       90       1  ORIGTAMs19              bag       <NA>          98.9281 #> 91       91       1  ORIGTAMs19             ²som       <NA>          98.9281 #> 92       92       1  ORIGTAMs19           ¹la-si       <NA>          98.9281 #> 93       93       1  ORIGTAMs20          ³cjocjo       <NA>         106.4759 #> 94       94       1  ORIGTAMs20          ⁴ni:-la       <NA>         106.4759 #> 95       95       1  ORIGTAMs20        ¹sja-cati       <NA>         106.4759 #> 96       96       1  ORIGTAMs20             ²tok       <NA>         106.4759 #> 97       97       1  ORIGTAMs20             ²sum       <NA>         106.4759 #> 98       98       1  ORIGTAMs20     ¹than-cim-ro       <NA>         106.4759 #> 99       99       1  ORIGTAMs21            ³kruŋ       <NA>         108.6520 #> 100     100       1  ORIGTAMs21         ²khru-si       <NA>         108.6520 #> 101     101       1  ORIGTAMs21          ¹kha-pa       <NA>         108.6520 #> 102     102       1  ORIGTAMs21    ¹cjaŋpa-ca-la       <NA>         108.6520 #> 103     103       1  ORIGTAMs21             ¹sja       <NA>         108.6520 #> 104     104       1  ORIGTAMs22             ¹ale       <NA>         111.2559 #> 105     105       1  ORIGTAMs22             ¹ale       <NA>         111.2559 #> 106     106       1  ORIGTAMs22        ¹in-che-m       <NA>         111.2559 #> 107     107       1  ORIGTAMs22           ³tolon       <NA>         111.2559 #> 108     108       1  ORIGTAMs22           ¹ca-ci       <NA>         111.2559 #> 109     109       1  ORIGTAMs23           ²ai-la       <NA>         114.0249 #> 110     110       1  ORIGTAMs23              bag       <NA>         114.0249 #> 111     111       1  ORIGTAMs23           ²cu-ri       <NA>         114.0249 #> 112     112       1  ORIGTAMs23           ¹mu-la       <NA>         114.0249 #> 113     113       1  ORIGTAMs24           ³pi-si       <NA>         116.8397 #> 114     114       1  ORIGTAMs24           ³cjot'       <NA>         116.8397 #> 115     115       1  ORIGTAMs24          ⁴ni:-se       <NA>         116.8397 #> 116     116       1  ORIGTAMs24      ²paŋ-cim-ro       <NA>         116.8397 #> 117     117       1  ORIGTAMs25            ³osem       <NA>         120.9941 #> 118     118       1  ORIGTAMs25         ¹cjon-se       <NA>         120.9941 #> 119     119       1  ORIGTAMs25        ³hin-pa-n       <NA>         120.9941 #> 120     120       1  ORIGTAMs25              ¹mu       <NA>         120.9941 #> 121     121       1  ORIGTAMs25          ¹ta-nam       <NA>         120.9941 #> 122     122       1  ORIGTAMs25           biswas       <NA>         120.9941 #> 123     123       1  ORIGTAMs25           ¹la-si       <NA>         120.9941 #> 124     124       1  ORIGTAMs26           biswas       <NA>         125.9577 #> 125     125       1  ORIGTAMs26           ¹la-si       <NA>         125.9577 #> 126     126       1  ORIGTAMs26             ³oca       <NA>         125.9577 #> 127     127       1  ORIGTAMs26             ¹sja       <NA>         125.9577 #> 128     128       1  ORIGTAMs26           ¹ca-ci       <NA>         125.9577 #> 129     129       1  ORIGTAMs27             ¹sja       <NA>         129.6907 #> 130     130       1  ORIGTAMs27           ¹ca-si       <NA>         129.6907 #> 131     131       1  ORIGTAMs27          ³cin-si       <NA>         129.6907 #> 132     132       1  ORIGTAMs28            ³cjot       <NA>         132.6207 #> 133     133       1  ORIGTAMs28          ⁴ni:-se       <NA>         132.6207 #> 134     134       1  ORIGTAMs28             ¹tik       <NA>         132.6207 #> 135     135       1  ORIGTAMs28       ³pi-cim-ro       <NA>         132.6207 #> 136     136       1  ORIGTAMs29             ¹ale       <NA>         134.1645 #> 137     137       1  ORIGTAMs29              ²ai       <NA>         134.1645 #> 138     138       1  ORIGTAMs29          ²khatpa       <NA>         134.1645 #> 139     139       1  ORIGTAMs29            pa:pi       <NA>         134.1645 #> 140     140       1  ORIGTAMs30            janma       <NA>         136.3289 #> 141     141       1  ORIGTAMs30          ¹pin-pa       <NA>         136.3289 #> 142     142       1  ORIGTAMs30          ¹ap'-la       <NA>         136.3289 #> 143     143       1  ORIGTAMs31          janma-n       <NA>         137.5983 #> 144     144       1  ORIGTAMs31          ¹pin-pa       <NA>         137.5983 #> 145     145       1  ORIGTAMs31          ¹am'-la       <NA>         137.5983 #> 146     146       1  ORIGTAMs31             ¹sja       <NA>         137.5983 #> 147     147       1  ORIGTAMs31           suttai       <NA>         137.5983 #> 148     148       1  ORIGTAMs31              ¹ca       <NA>         137.5983 #> 149     149       1  ORIGTAMs31        ²kham-cim       <NA>         137.5983 #> 150     150       1  ORIGTAMs32           ¹am'la       <NA>         139.6277 #> 151     151       1  ORIGTAMs32             ¹sja       <NA>         139.6277 #> 152     152       1  ORIGTAMs32           suttai       <NA>         139.6277 #> 153     153       1  ORIGTAMs32              ¹ca       <NA>         139.6277 #> 154     154       1  ORIGTAMs32     ²kham-pa-cim       <NA>         139.6277 #> 155     155       1  ORIGTAMs32             male       <NA>         139.6277 #> 156     156       1  ORIGTAMs33         ¹in-se-m       <NA>         140.7732 #> 157     157       1  ORIGTAMs33       ³a-¹ca-lai       <NA>         140.7732 #> 158     158       1  ORIGTAMs33               i:       <NA>         140.7732 #> 159     159       1  ORIGTAMs33         ¹cja:-ko       <NA>         140.7732 #> 160     160       1  ORIGTAMs34        ³pi-ma-la       <NA>         142.4666 #> 161     161       1  ORIGTAMs34           pal-ʈi       <NA>         142.4666 #> 162     162       1  ORIGTAMs35              ³ca       <NA>         145.8149 #> 163     163       1  ORIGTAMs35          ¹cjaŋpa       <NA>         145.8149 #> 164     164       1  ORIGTAMs35           ³pi-pa       <NA>         145.8149 #> 165     165       1  ORIGTAMs35            ³pomo       <NA>         145.8149 #> 166     166       1  ORIGTAMs35          ¹kha-si       <NA>         145.8149 #> 167     167       1  ORIGTAMs36            ³pomo       <NA>         149.2593 #> 168     168       1  ORIGTAMs36          ¹kha-si       <NA>         149.2593 #> 169     169       1  ORIGTAMs36             ³oca       <NA>         149.2593 #> 170     170       1  ORIGTAMs36          ¹sja-se       <NA>         149.2593 #> 171     171       1  ORIGTAMs36         ³kruŋ-se       <NA>         149.2593 #> 172     172       1  ORIGTAMs36       ²to-cim-ro       <NA>         149.2593 #> 173     173       1  ORIGTAMs36       ⁴pa:man-ta       <NA>         149.2593 #> 174     174       1  ORIGTAMs37              lu:       <NA>         157.3880 #> 175     175       1  ORIGTAMs37           ¹ŋa-ca       <NA>         157.3880 #> 176     176       1  ORIGTAMs37          ⁴pa:man       <NA>         157.3880 #> 177     177       1  ORIGTAMs37           ¹ta-ci       <NA>         157.3880 #> 178     178       1  ORIGTAMs37          ⁴tamo-m       <NA>         157.3880 #> 179     179       1  ORIGTAMs37              jat       <NA>         157.3880 #> 180     180       1  ORIGTAMs37          ¹jaŋ-ci       <NA>         157.3880 #> 181     181       1  ORIGTAMs37           ³pi-si       <NA>         157.3880 #> 182     182       1  ORIGTAMs37          ¹the-ta       <NA>         157.3880 #> 183     183       1  ORIGTAMs37          ⁴pa:man       <NA>         157.3880 #> 184     184       1  ORIGTAMs37          ⁴to:-ci       <NA>         157.3880 #> 185     185       1  ORIGTAMs37           ³pi-ci       <NA>         157.3880 #> 186     186       1  ORIGTAMs37          ¹the-se       <NA>         157.3880 #> 187     187       1  ORIGTAMs38        chetri-ta       <NA>         162.8622 #> 188     188       1  ORIGTAMs38       ²to-cim-ro       <NA>         162.8622 #> 189     189       1  ORIGTAMs38          ²pho-se       <NA>         162.8622 #> 190     190       1  ORIGTAMs39              lu:       <NA>         165.0761 #> 191     191       1  ORIGTAMs39           ¹ŋa-ca       <NA>         165.0761 #> 192     192       1  ORIGTAMs39           chetri       <NA>         165.0761 #> 193     193       1  ORIGTAMs39          ⁴to:-ci       <NA>         165.0761 #> 194     194       1  ORIGTAMs39           ³pi-si       <NA>         165.0761 #> 195     195       1  ORIGTAMs39           chetri       <NA>         165.0761 #> 196     196       1  ORIGTAMs39           ¹ŋa-ta       <NA>         165.0761 #> 197     197       1  ORIGTAMs39              jat       <NA>         165.0761 #> 198     198       1  ORIGTAMs39          ¹jaŋ-ci       <NA>         165.0761 #> 199     199       1  ORIGTAMs39              jat       <NA>         165.0761 #> 200     200       1  ORIGTAMs39           ¹ta-ci       <NA>         165.0761 #> 201     201       1  ORIGTAMs40          ³ot-che       <NA>         171.5945 #> 202     202       1  ORIGTAMs40            ⁴cama       <NA>         171.5945 #> 203     203       1  ORIGTAMs40            ⁴meme       <NA>         171.5945 #> 204     204       1  ORIGTAMs40             ¹khe       <NA>         171.5945 #> 205     205       1  ORIGTAMs40             ²som       <NA>         171.5945 #> 206     206       1  ORIGTAMs40       ¹ta-cim-ro       <NA>         171.5945 #> 207     207       1  ORIGTAMs41            ⁴meme       <NA>         174.2519 #> 208     208       1  ORIGTAMs41             ¹khe       <NA>         174.2519 #> 209     209       1  ORIGTAMs41          ²som-la       <NA>         174.2519 #> 210     210       1  ORIGTAMs42            ⁴unma       <NA>         176.5870 #> 211     211       1  ORIGTAMs42           ⁴taŋpo       <NA>         176.5870 #> 212     212       1  ORIGTAMs42          ⁴tui-ri       <NA>         176.5870 #> 213     213       1  ORIGTAMs42            ⁴meme       <NA>         176.5870 #> 214     214       1  ORIGTAMs42             ¹khe       <NA>         176.5870 #> 215     215       1  ORIGTAMs42             ²som       <NA>         176.5870 #> 216     216       1  ORIGTAMs42          ³naŋ-la       <NA>         176.5870 #> 217     217       1  ORIGTAMs43            ⁴cama       <NA>         183.2205 #> 218     218       1  ORIGTAMs43             ¹tor       <NA>         183.2205 #> 219     219       1  ORIGTAMs43          ³poi-se       <NA>         183.2205 #> 220     220       1  ORIGTAMs43             ³poi       <NA>         183.2205 #> 221     221       1  ORIGTAMs43         ⁴kjam-se       <NA>         183.2205 #> 222     222       1  ORIGTAMs43            ⁴cama       <NA>         183.2205 #> 223     223       1  ORIGTAMs43             ¹mar       <NA>         183.2205 #> 224     224       1  ORIGTAMs43  ¹phep-ka-cim-ro       <NA>         183.2205 #> 225     225       1  ORIGTAMs44             ³poi       <NA>         188.0015 #> 226     226       1  ORIGTAMs44         ⁴kjam-se       <NA>         188.0015 #> 227     227       1  ORIGTAMs44             ¹mar       <NA>         188.0015 #> 228     228       1  ORIGTAMs44      ¹phep-ka-si       <NA>         188.0015 #> 229     229       1  ORIGTAMs44          ³poi-se       <NA>         188.0015 #> 230     230       1  ORIGTAMs44             ¹mar       <NA>         188.0015 #> 231     231       1  ORIGTAMs44      ¹phep-ka-si       <NA>         188.0015 #> 232     232       1  ORIGTAMs45          ¹tor-se       <NA>         195.4641 #> 233     233       1  ORIGTAMs45 ²choŋ-tui-jul-ʈi       <NA>         195.4641 #> 234     234       1  ORIGTAMs45             ³tan       <NA>         195.4641 #> 235     235       1  ORIGTAMs45     ¹sja:-cim-ro       <NA>         195.4641 #> 236     236       1  ORIGTAMs46 ²choŋ-tui-jul-ʈi       <NA>         199.2395 #> 237     237       1  ORIGTAMs46             ³tan       <NA>         199.2395 #> 238     238       1  ORIGTAMs46         ¹sja:-ma       <NA>         199.2395 #> 239     239       1  ORIGTAMs47            ⁴meme       <NA>         201.0743 #> 240     240       1  ORIGTAMs47             ¹khe       <NA>         201.0743 #> 241     241       1  ORIGTAMs47             ²som       <NA>         201.0743 #> 242     242       1  ORIGTAMs47          ³naŋ-ri       <NA>         201.0743 #> 243     243       1  ORIGTAMs47          ¹moktan       <NA>         201.0743 #> 244     244       1  ORIGTAMs47            ⁴meme       <NA>         201.0743 #> 245     245       1  ORIGTAMs47             ⁴kik       <NA>         201.0743 #> 246     246       1  ORIGTAMs47           ³kisiŋ       <NA>         201.0743 #> 247     247       1  ORIGTAMs47            ⁴meme       <NA>         201.0743 #> 248     248       1  ORIGTAMs47             ⁴kik       <NA>         201.0743 #> 249     249       1  ORIGTAMs47          ³joncan       <NA>         201.0743 #> 250     250       1  ORIGTAMs47            ⁴meme       <NA>         201.0743 #> 251     251       1  ORIGTAMs47             ⁴kik       <NA>         201.0743 #> 252     252       1  ORIGTAMs47            ⁴meme       <NA>         201.0743 #> 253     253       1  ORIGTAMs47             ²som       <NA>         201.0743 #> 254     254       1  ORIGTAMs47      ¹kha-cim-ro       <NA>         201.0743 #> 255     255       1  ORIGTAMs48          ⁴ʈam-ri       <NA>         207.0197 #> 256     256       1  ORIGTAMs48           ³pi-pa       <NA>         207.0197 #> 257     257       1  ORIGTAMs48          ⁴ʈam-ri       <NA>         207.0197 #> 258     258       1  ORIGTAMs48      ¹phep-ka-si       <NA>         207.0197 #> 259     259       1  ORIGTAMs49              aaa       <NA>         210.0009 #> 260     260       1  ORIGTAMs49            ⁴meme       <NA>         210.0009 #> 261     261       1  ORIGTAMs49          ⁴kik-se       <NA>         210.0009 #> 262     262       1  ORIGTAMs49             ¹tik       <NA>         210.0009 #> 263     263       1  ORIGTAMs49       ¹ta-cim-ro       <NA>         210.0009 #> 264     264       1  ORIGTAMs50            ²kjui       <NA>         211.8244 #> 265     265       1  ORIGTAMs50        ¹phju:-si       <NA>         211.8244 #> 266     266       1  ORIGTAMs50          ²auti-n       <NA>         211.8244 #> 267     267       1  ORIGTAMs50           tirsan       <NA>         211.8244 #> 268     268       1  ORIGTAMs50       ¹ta-cim-ro       <NA>         211.8244 #> 269     269       1  ORIGTAMs51          tirsana       <NA>         214.1838 #> 270     270       1  ORIGTAMs51           ¹ta-ma       <NA>         214.1838 #> 271     271       1  ORIGTAMs51            ²kjui       <NA>         214.1838 #> 272     272       1  ORIGTAMs51        ¹phju:-si       <NA>         214.1838 #> 273     273       1  ORIGTAMs51        pal-ʈi-mi       <NA>         214.1838 #> 274     274       1  ORIGTAMs52            ⁴meme       <NA>         217.4368 #> 275     275       1  ORIGTAMs52          ⁴kik-se       <NA>         217.4368 #> 276     276       1  ORIGTAMs52             ¹tik       <NA>         217.4368 #> 277     277       1  ORIGTAMs52       ³pi-cim-ro       <NA>         217.4368 #> 278     278       1  ORIGTAMs53              lau       <NA>         218.9813 #> 279     279       1  ORIGTAMs53            ⁴tamo       <NA>         218.9813 #> 280     280       1  ORIGTAMs53          ⁴jaŋ-ta       <NA>         218.9813 #> 281     281       1  ORIGTAMs53            ²kjui       <NA>         218.9813 #> 282     282       1  ORIGTAMs53        ¹phju:-ci       <NA>         218.9813 #> 283     283       1  ORIGTAMs53            ⁴tamo       <NA>         218.9813 #> 284     284       1  ORIGTAMs53             ¹tik       <NA>         218.9813 #> 285     285       1  ORIGTAMs53            lasai       <NA>         218.9813 #> 286     286       1  ORIGTAMs53           ³pi-ma       <NA>         218.9813 #> 287     287       1  ORIGTAMs54            ¹ŋa-i       <NA>         222.5608 #> 288     288       1  ORIGTAMs54            ²kjui       <NA>         222.5608 #> 289     289       1  ORIGTAMs54          ²tat-la       <NA>         222.5608 #> 290     290       1  ORIGTAMs55           ²ai-se       <NA>         224.2061 #> 291     291       1  ORIGTAMs55            ²kjui       <NA>         224.2061 #> 292     292       1  ORIGTAMs55         ²tat-sam       <NA>         224.2061 #> 293     293       1  ORIGTAMs55            ¹ŋa-i       <NA>         224.2061 #> 294     294       1  ORIGTAMs55          ⁴mar-la       <NA>         224.2061 #> 295     295       1  ORIGTAMs55            ¹chaŋ       <NA>         224.2061 #> 296     296       1  ORIGTAMs55          ²ra:-la       <NA>         224.2061 #> 297     297       1  ORIGTAMs55       ³pi-cim-ro       <NA>         224.2061 #> 298     298       1  ORIGTAMs56          ⁴mar-la       <NA>         229.1608 #> 299     299       1  ORIGTAMs56            ¹chaŋ       <NA>         229.1608 #> 300     300       1  ORIGTAMs56           ²ra:la       <NA>         229.1608 #> 301     301       1  ORIGTAMs56       ³pi-cim-ro       <NA>         229.1608 #> 302     302       1  ORIGTAMs57           ³to:si       <NA>         230.9317 #> 303     303       1  ORIGTAMs57            ⁴meme       <NA>         230.9317 #> 304     304       1  ORIGTAMs57          ⁴kik-se       <NA>         230.9317 #> 305     305       1  ORIGTAMs57             ¹tik       <NA>         230.9317 #> 306     306       1  ORIGTAMs57       ³pi-cim-ro       <NA>         230.9317 #> 307     307       1  ORIGTAMs57          ³pi-sam       <NA>         230.9317 #> 308     308       1  ORIGTAMs58          ³ca-sam       <NA>         232.8847 #> 309     309       1  ORIGTAMs58            ¹ŋa-i       <NA>         232.8847 #> 310     310       1  ORIGTAMs58            ⁴kjam       <NA>         232.8847 #> 311     311       1  ORIGTAMs58         ¹ŋa-i-ca       <NA>         232.8847 #> 312     312       1  ORIGTAMs58            ⁴kjam       <NA>         232.8847 #> 313     313       1  ORIGTAMs58          ²tat-la       <NA>         232.8847 #> 314     314       1  ORIGTAMs58           ³pi-si       <NA>         232.8847 #> 315     315       1  ORIGTAMs59          ¹moktan       <NA>         236.6400 #> 316     316       1  ORIGTAMs59         ⁴meme-se       <NA>         236.6400 #> 317     317       1  ORIGTAMs59         pacar-se       <NA>         236.6400 #> 318     318       1  ORIGTAMs59         ⁴plo:-si       <NA>         236.6400 #> 319     319       1  ORIGTAMs59   paharapacar-se       <NA>         236.6400 #> 320     320       1  ORIGTAMs59         ⁴plo:-si       <NA>         236.6400 #> 321     321       1  ORIGTAMs59            ²kjui       <NA>         236.6400 #> 322     322       1  ORIGTAMs59      ²tat-cim-ro       <NA>         236.6400 #> 323     323       1  ORIGTAMs60          ³joncan       <NA>         242.3232 #> 324     324       1  ORIGTAMs60         ⁴meme-se       <NA>         242.3232 #> 325     325       1  ORIGTAMs60          ³joncan       <NA>         242.3232 #> 326     326       1  ORIGTAMs60      ⁴meme-ca-se       <NA>         242.3232 #> 327     327       1  ORIGTAMs60          ⁴mar-la       <NA>         242.3232 #> 328     328       1  ORIGTAMs60         ¹chaŋ-ri       <NA>         242.3232 #> 329     329       1  ORIGTAMs60            ²kjui       <NA>         242.3232 #> 330     330       1  ORIGTAMs60      ²ta:-cim-ro       <NA>         242.3232 #> 331     331       1  ORIGTAMs61           ³kisiŋ       <NA>         248.8542 #> 332     332       1  ORIGTAMs61      ⁴meme-ca-se       <NA>         248.8542 #> 333     333       1  ORIGTAMs61            (bis)       <NA>         248.8542 #> 334     334       1  ORIGTAMs61             ⁴jaŋ       <NA>         248.8542 #> 335     335       1  ORIGTAMs61       ⁴pra-pa-r'       <NA>         248.8542 #> 336     336       1  ORIGTAMs61           ³pi-si       <NA>         248.8542 #> 337     337       1  ORIGTAMs61            ⁴kjam       <NA>         248.8542 #> 338     338       1  ORIGTAMs61      ²tat-cim-ro       <NA>         248.8542 #> 339     339       1  ORIGTAMs62               lu       <NA>         254.8632 #> 340     340       1  ORIGTAMs62         ²ot-ce-n       <NA>         254.8632 #>     sent_audio_end #> 1           5.7573 #> 2           5.7573 #> 3           5.7573 #> 4           5.7573 #> 5           5.7573 #> 6          11.0001 #> 7          11.0001 #> 8          11.0001 #> 9          11.0001 #> 10         11.0001 #> 11         18.3013 #> 12         18.3013 #> 13         18.3013 #> 14         18.3013 #> 15         18.3013 #> 16         18.3013 #> 17         18.3013 #> 18         22.1610 #> 19         32.0675 #> 20         32.0675 #> 21         32.0675 #> 22         32.0675 #> 23         36.8599 #> 24         36.8599 #> 25         36.8599 #> 26         41.4915 #> 27         41.4915 #> 28         41.4915 #> 29         51.5267 #> 30         51.5267 #> 31         51.5267 #> 32         51.5267 #> 33         51.5267 #> 34         51.5267 #> 35         51.5267 #> 36         51.5267 #> 37         57.9595 #> 38         57.9595 #> 39         57.9595 #> 40         57.9595 #> 41         57.9595 #> 42         62.3338 #> 43         62.3338 #> 44         62.3338 #> 45         62.3338 #> 46         62.3338 #> 47         62.3338 #> 48         68.6379 #> 49         68.6379 #> 50         68.6379 #> 51         68.6379 #> 52         68.6379 #> 53         76.7915 #> 54         76.7915 #> 55         76.7915 #> 56         76.7915 #> 57         76.7915 #> 58         76.7915 #> 59         76.7915 #> 60         76.7915 #> 61         79.3255 #> 62         79.3255 #> 63         79.3255 #> 64         82.6838 #> 65         82.6838 #> 66         82.6838 #> 67         86.1134 #> 68         86.1134 #> 69         86.1134 #> 70         86.1134 #> 71         86.1134 #> 72         90.6475 #> 73         90.6475 #> 74         90.6475 #> 75         90.6475 #> 76         90.6475 #> 77         95.2007 #> 78         95.2007 #> 79         95.2007 #> 80         98.1566 #> 81         98.1566 #> 82         98.1566 #> 83         98.1566 #> 84         98.1566 #> 85        105.6874 #> 86        105.6874 #> 87        105.6874 #> 88        105.6874 #> 89        105.6874 #> 90        105.6874 #> 91        105.6874 #> 92        105.6874 #> 93        108.6520 #> 94        108.6520 #> 95        108.6520 #> 96        108.6520 #> 97        108.6520 #> 98        108.6520 #> 99        110.6233 #> 100       110.6233 #> 101       110.6233 #> 102       110.6233 #> 103       110.6233 #> 104       113.2639 #> 105       113.2639 #> 106       113.2639 #> 107       113.2639 #> 108       113.2639 #> 109       115.5469 #> 110       115.5469 #> 111       115.5469 #> 112       115.5469 #> 113       118.8844 #> 114       118.8844 #> 115       118.8844 #> 116       118.8844 #> 117       123.5591 #> 118       123.5591 #> 119       123.5591 #> 120       123.5591 #> 121       123.5591 #> 122       123.5591 #> 123       123.5591 #> 124       129.2516 #> 125       129.2516 #> 126       129.2516 #> 127       129.2516 #> 128       129.2516 #> 129       131.5818 #> 130       131.5818 #> 131       131.5818 #> 132       134.1645 #> 133       134.1645 #> 134       134.1645 #> 135       134.1645 #> 136       136.0452 #> 137       136.0452 #> 138       136.0452 #> 139       136.0452 #> 140       137.5983 #> 141       137.5983 #> 142       137.5983 #> 143       139.6277 #> 144       139.6277 #> 145       139.6277 #> 146       139.6277 #> 147       139.6277 #> 148       139.6277 #> 149       139.6277 #> 150       140.7732 #> 151       140.7732 #> 152       140.7732 #> 153       140.7732 #> 154       140.7732 #> 155       140.7732 #> 156       142.1830 #> 157       142.1830 #> 158       142.1830 #> 159       142.1830 #> 160       143.9260 #> 161       143.9260 #> 162       148.3124 #> 163       148.3124 #> 164       148.3124 #> 165       148.3124 #> 166       148.3124 #> 167       157.3880 #> 168       157.3880 #> 169       157.3880 #> 170       157.3880 #> 171       157.3880 #> 172       157.3880 #> 173       157.3880 #> 174       162.8622 #> 175       162.8622 #> 176       162.8622 #> 177       162.8622 #> 178       162.8622 #> 179       162.8622 #> 180       162.8622 #> 181       162.8622 #> 182       162.8622 #> 183       162.8622 #> 184       162.8622 #> 185       162.8622 #> 186       162.8622 #> 187       165.0761 #> 188       165.0761 #> 189       165.0761 #> 190       171.2387 #> 191       171.2387 #> 192       171.2387 #> 193       171.2387 #> 194       171.2387 #> 195       171.2387 #> 196       171.2387 #> 197       171.2387 #> 198       171.2387 #> 199       171.2387 #> 200       171.2387 #> 201       174.2519 #> 202       174.2519 #> 203       174.2519 #> 204       174.2519 #> 205       174.2519 #> 206       174.2519 #> 207       175.2663 #> 208       175.2663 #> 209       175.2663 #> 210       182.2325 #> 211       182.2325 #> 212       182.2325 #> 213       182.2325 #> 214       182.2325 #> 215       182.2325 #> 216       182.2325 #> 217       187.2958 #> 218       187.2958 #> 219       187.2958 #> 220       187.2958 #> 221       187.2958 #> 222       187.2958 #> 223       187.2958 #> 224       187.2958 #> 225       195.4641 #> 226       195.4641 #> 227       195.4641 #> 228       195.4641 #> 229       195.4641 #> 230       195.4641 #> 231       195.4641 #> 232       198.3574 #> 233       198.3574 #> 234       198.3574 #> 235       198.3574 #> 236       201.0743 #> 237       201.0743 #> 238       201.0743 #> 239       207.0197 #> 240       207.0197 #> 241       207.0197 #> 242       207.0197 #> 243       207.0197 #> 244       207.0197 #> 245       207.0197 #> 246       207.0197 #> 247       207.0197 #> 248       207.0197 #> 249       207.0197 #> 250       207.0197 #> 251       207.0197 #> 252       207.0197 #> 253       207.0197 #> 254       207.0197 #> 255       209.1897 #> 256       209.1897 #> 257       209.1897 #> 258       209.1897 #> 259       211.8244 #> 260       211.8244 #> 261       211.8244 #> 262       211.8244 #> 263       211.8244 #> 264       213.6479 #> 265       213.6479 #> 266       213.6479 #> 267       213.6479 #> 268       213.6479 #> 269       216.4389 #> 270       216.4389 #> 271       216.4389 #> 272       216.4389 #> 273       216.4389 #> 274       218.9848 #> 275       218.9848 #> 276       218.9848 #> 277       218.9848 #> 278       222.1526 #> 279       222.1526 #> 280       222.1526 #> 281       222.1526 #> 282       222.1526 #> 283       222.1526 #> 284       222.1526 #> 285       222.1526 #> 286       222.1526 #> 287       224.0742 #> 288       224.0742 #> 289       224.0742 #> 290       228.3382 #> 291       228.3382 #> 292       228.3382 #> 293       228.3382 #> 294       228.3382 #> 295       228.3382 #> 296       228.3382 #> 297       228.3382 #> 298       230.9317 #> 299       230.9317 #> 300       230.9317 #> 301       230.9317 #> 302       232.8847 #> 303       232.8847 #> 304       232.8847 #> 305       232.8847 #> 306       232.8847 #> 307       232.8847 #> 308       236.6400 #> 309       236.6400 #> 310       236.6400 #> 311       236.6400 #> 312       236.6400 #> 313       236.6400 #> 314       236.6400 #> 315       242.3232 #> 316       242.3232 #> 317       242.3232 #> 318       242.3232 #> 319       242.3232 #> 320       242.3232 #> 321       242.3232 #> 322       242.3232 #> 323       248.4648 #> 324       248.4648 #> 325       248.4648 #> 326       248.4648 #> 327       248.4648 #> 328       248.4648 #> 329       248.4648 #> 330       248.4648 #> 331       255.8688 #> 332       255.8688 #> 333       255.8688 #> 334       255.8688 #> 335       255.8688 #> 336       255.8688 #> 337       255.8688 #> 338       255.8688 #> 339       256.2020 #> 340       256.2020 #>                                                                                                      sent_form #> 1                                                                        ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri #> 2                                                                        ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri #> 3                                                                        ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri #> 4                                                                        ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri #> 5                                                                        ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri #> 6                                                                     ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri-mi #> 7                                                                     ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri-mi #> 8                                                                     ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri-mi #> 9                                                                     ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri-mi #> 10                                                                    ⁴unma ⁴taŋpo ⁴tui-ri, ¹tor-se ³poi-ri-mi #> 11                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 12                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 13                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 14                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 15                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 16                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 17                                                         chetri ⁴kik, ⁴pa:man ⁴kik, ¹tamaŋ ⁴kik, ²som-cim-ro #> 18                                                                                                 ²som-naŋ-ri #> 19                                                                      ¹ama-mi ³palaŋ, ¹apa-m ¹hanuman-cim-ro #> 20                                                                      ¹ama-mi ³palaŋ, ¹apa-m ¹hanuman-cim-ro #> 21                                                                      ¹ama-mi ³palaŋ, ¹apa-m ¹hanuman-cim-ro #> 22                                                                      ¹ama-mi ³palaŋ, ¹apa-m ¹hanuman-cim-ro #> 23                                                                                     ¹am'-se ¹tik ³pi-cim-ro #> 24                                                                                     ¹am'-se ¹tik ³pi-cim-ro #> 25                                                                                     ¹am'-se ¹tik ³pi-cim-ro #> 26                                                                                      ¹thetmai ²som ³ca-ta,  #> 27                                                                                      ¹thetmai ²som ³ca-ta,  #> 28                                                                                      ¹thetmai ²som ³ca-ta,  #> 29                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 30                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 31                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 32                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 33                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 34                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 35                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 36                                                           ⁴camam ¹ŋa ¹si-ma, ¹ŋa ¹si-ma bel'-ri, ¹ŋa ¹si-ma #> 37                                                           ¹ŋa-la ¹sja, ²ai-ni-se, ³a-²khraŋ-na, ³a-⁴pjaŋ-na #> 38                                                           ¹ŋa-la ¹sja, ²ai-ni-se, ³a-²khraŋ-na, ³a-⁴pjaŋ-na #> 39                                                           ¹ŋa-la ¹sja, ²ai-ni-se, ³a-²khraŋ-na, ³a-⁴pjaŋ-na #> 40                                                           ¹ŋa-la ¹sja, ²ai-ni-se, ³a-²khraŋ-na, ³a-⁴pjaŋ-na #> 41                                                           ¹ŋa-la ¹sja, ²ai-ni-se, ³a-²khraŋ-na, ³a-⁴pjaŋ-na #> 42                                                         ¹ŋa-la ¹sja, ²ai-ni ²kola-kat'-se ¹ca-o, ³pi-cim-ro #> 43                                                         ¹ŋa-la ¹sja, ²ai-ni ²kola-kat'-se ¹ca-o, ³pi-cim-ro #> 44                                                         ¹ŋa-la ¹sja, ²ai-ni ²kola-kat'-se ¹ca-o, ³pi-cim-ro #> 45                                                         ¹ŋa-la ¹sja, ²ai-ni ²kola-kat'-se ¹ca-o, ³pi-cim-ro #> 46                                                         ¹ŋa-la ¹sja, ²ai-ni ²kola-kat'-se ¹ca-o, ³pi-cim-ro #> 47                                                         ¹ŋa-la ¹sja, ²ai-ni ²kola-kat'-se ¹ca-o, ³pi-cim-ro #> 48                                                                             ³pi-ma, ³oca ¹ama ¹si-si ¹ni-ci #> 49                                                                             ³pi-ma, ³oca ¹ama ¹si-si ¹ni-ci #> 50                                                                             ³pi-ma, ³oca ¹ama ¹si-si ¹ni-ci #> 51                                                                             ³pi-ma, ³oca ¹ama ¹si-si ¹ni-ci #> 52                                                                             ³pi-ma, ³oca ¹ama ¹si-si ¹ni-ci #> 53                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 54                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 55                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 56                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 57                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 58                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 59                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 60                                        ³ca ²som-se, ¹am-ta ¹phral-si, ²tha:-si, ¹am-ta ¹phral-si, ²tha:-si, #> 61                                                                                            ³ca ¹thepa (aaa) #> 62                                                                                            ³ca ¹thepa (aaa) #> 63                                                                                            ³ca ¹thepa (aaa) #> 64                                                                                 ¹thepa ²paraŋ-ca ²tha:-ci,  #> 65                                                                                 ¹thepa ²paraŋ-ca ²tha:-ci,  #> 66                                                                                 ¹thepa ²paraŋ-ca ²tha:-ci,  #> 67                                                                ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-r' ²pit-cim-ro #> 68                                                                ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-r' ²pit-cim-ro #> 69                                                                ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-r' ²pit-cim-ro #> 70                                                                ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-r' ²pit-cim-ro #> 71                                                                ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-r' ²pit-cim-ro #> 72                                                                    ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-ri ²pit-ma #> 73                                                                    ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-ri ²pit-ma #> 74                                                                    ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-ri ²pit-ma #> 75                                                                    ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-ri ²pit-ma #> 76                                                                    ³ca ¹cjaŋpa-ca ³kruŋ ²khru-pa-ri ²pit-ma #> 77                                                                                       ³kruŋ ²khru-si ³pa-ma #> 78                                                                                       ³kruŋ ²khru-si ³pa-ma #> 79                                                                                       ³kruŋ ²khru-si ³pa-ma #> 80                                                                     ³cjocjo ⁴ni:-se ¹tik ¹la-cim-ro ³pi-sam #> 81                                                                     ³cjocjo ⁴ni:-se ¹tik ¹la-cim-ro ³pi-sam #> 82                                                                     ³cjocjo ⁴ni:-se ¹tik ¹la-cim-ro ³pi-sam #> 83                                                                     ³cjocjo ⁴ni:-se ¹tik ¹la-cim-ro ³pi-sam #> 84                                                                     ³cjocjo ⁴ni:-se ¹tik ¹la-cim-ro ³pi-sam #> 85                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 86                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 87                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 88                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 89                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 90                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 91                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 92                                                          ¹sja ²khraŋ-si, (bis) ³ol' ¹la-si, bag ²som ¹la-si #> 93                                                            ³cjocjo ⁴ni:-la ¹sja-cati ²tok ²sum ¹than-cim-ro #> 94                                                            ³cjocjo ⁴ni:-la ¹sja-cati ²tok ²sum ¹than-cim-ro #> 95                                                            ³cjocjo ⁴ni:-la ¹sja-cati ²tok ²sum ¹than-cim-ro #> 96                                                            ³cjocjo ⁴ni:-la ¹sja-cati ²tok ²sum ¹than-cim-ro #> 97                                                            ³cjocjo ⁴ni:-la ¹sja-cati ²tok ²sum ¹than-cim-ro #> 98                                                            ³cjocjo ⁴ni:-la ¹sja-cati ²tok ²sum ¹than-cim-ro #> 99                                                                   ³kruŋ ²khru-si ¹kha-pa ¹cjaŋpa-ca-la ¹sja #> 100                                                                  ³kruŋ ²khru-si ¹kha-pa ¹cjaŋpa-ca-la ¹sja #> 101                                                                  ³kruŋ ²khru-si ¹kha-pa ¹cjaŋpa-ca-la ¹sja #> 102                                                                  ³kruŋ ²khru-si ¹kha-pa ¹cjaŋpa-ca-la ¹sja #> 103                                                                  ³kruŋ ²khru-si ¹kha-pa ¹cjaŋpa-ca-la ¹sja #> 104                                                                      « ¹ale, ¹ale, ¹in-che-m ³tolon ¹ca-ci #> 105                                                                      « ¹ale, ¹ale, ¹in-che-m ³tolon ¹ca-ci #> 106                                                                      « ¹ale, ¹ale, ¹in-che-m ³tolon ¹ca-ci #> 107                                                                      « ¹ale, ¹ale, ¹in-che-m ³tolon ¹ca-ci #> 108                                                                      « ¹ale, ¹ale, ¹in-che-m ³tolon ¹ca-ci #> 109                                                                                 ²ai-la bag ²cu-ri ¹mu-la » #> 110                                                                                 ²ai-la bag ²cu-ri ¹mu-la » #> 111                                                                                 ²ai-la bag ²cu-ri ¹mu-la » #> 112                                                                                 ²ai-la bag ²cu-ri ¹mu-la » #> 113                                                                          ³pi-si ³cjot' ⁴ni:-se ²paŋ-cim-ro #> 114                                                                          ³pi-si ³cjot' ⁴ni:-se ²paŋ-cim-ro #> 115                                                                          ³pi-si ³cjot' ⁴ni:-se ²paŋ-cim-ro #> 116                                                                          ³pi-si ³cjot' ⁴ni:-se ²paŋ-cim-ro #> 117                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 118                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 119                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 120                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 121                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 122                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 123                                                        ³osem, ¹cjon-se ³hin-pa-n ¹mu ¹ta-nam biswas ¹la-si #> 124                                                                            biswas ¹la-si, ³oca ¹sja ¹ca-ci #> 125                                                                            biswas ¹la-si, ³oca ¹sja ¹ca-ci #> 126                                                                            biswas ¹la-si, ³oca ¹sja ¹ca-ci #> 127                                                                            biswas ¹la-si, ³oca ¹sja ¹ca-ci #> 128                                                                            biswas ¹la-si, ³oca ¹sja ¹ca-ci #> 129                                                                                      ¹sja ¹ca-si ³cin-si,  #> 130                                                                                      ¹sja ¹ca-si ³cin-si,  #> 131                                                                                      ¹sja ¹ca-si ³cin-si,  #> 132                                                                              ³cjot ⁴ni:-se ¹tik ³pi-cim-ro #> 133                                                                              ³cjot ⁴ni:-se ¹tik ³pi-cim-ro #> 134                                                                              ³cjot ⁴ni:-se ¹tik ³pi-cim-ro #> 135                                                                              ³cjot ⁴ni:-se ¹tik ³pi-cim-ro #> 136                                                                                 « ¹ale, ²ai ²khatpa pa:pi, #> 137                                                                                 « ¹ale, ²ai ²khatpa pa:pi, #> 138                                                                                 « ¹ale, ²ai ²khatpa pa:pi, #> 139                                                                                 « ¹ale, ²ai ²khatpa pa:pi, #> 140                                                                                    janma ¹pin-pa ¹ap'-la,  #> 141                                                                                    janma ¹pin-pa ¹ap'-la,  #> 142                                                                                    janma ¹pin-pa ¹ap'-la,  #> 143                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 144                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 145                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 146                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 147                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 148                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 149                                                         janma-n ¹pin-pa ¹am'-la ¹sja suttai ¹ca ²kham-cim  #> 150                                                                   ¹am'la ¹sja suttai ¹ca ²kham-pa-cim male #> 151                                                                   ¹am'la ¹sja suttai ¹ca ²kham-pa-cim male #> 152                                                                   ¹am'la ¹sja suttai ¹ca ²kham-pa-cim male #> 153                                                                   ¹am'la ¹sja suttai ¹ca ²kham-pa-cim male #> 154                                                                   ¹am'la ¹sja suttai ¹ca ²kham-pa-cim male #> 155                                                                   ¹am'la ¹sja suttai ¹ca ²kham-pa-cim male #> 156                                                                        ¹in-se-m ³a-¹ca-lai, i:, ¹cja:-ko » #> 157                                                                        ¹in-se-m ³a-¹ca-lai, i:, ¹cja:-ko » #> 158                                                                        ¹in-se-m ³a-¹ca-lai, i:, ¹cja:-ko » #> 159                                                                        ¹in-se-m ³a-¹ca-lai, i:, ¹cja:-ko » #> 160                                                                                           ³pi-ma-la pal-ʈi #> 161                                                                                           ³pi-ma-la pal-ʈi #> 162                                                                          ³ca ¹cjaŋpa ³pi-pa, ³pomo ¹kha-si #> 163                                                                          ³ca ¹cjaŋpa ³pi-pa, ³pomo ¹kha-si #> 164                                                                          ³ca ¹cjaŋpa ³pi-pa, ³pomo ¹kha-si #> 165                                                                          ³ca ¹cjaŋpa ³pi-pa, ³pomo ¹kha-si #> 166                                                                          ³ca ¹cjaŋpa ³pi-pa, ³pomo ¹kha-si #> 167                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 168                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 169                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 170                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 171                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 172                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 173                                              ³pomo ¹kha-si, ³oca ¹sja-se, ³kruŋ-se, ²to-cim-ro, ⁴pa:man-ta #> 174   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 175   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 176   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 177   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 178   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 179   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 180   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 181   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 182   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 183   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 184   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 185   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 186   « lu:, ¹ŋa-ca ⁴pa:man ¹ta-ci ⁴tamo-m, jat ¹jaŋ-ci », ³pi-si, ¹the-ta, « ⁴pa:man ⁴to:-ci » ³pi-ci ¹the-se #> 187                                                                              chetri-ta ²to-cim-ro, ²pho-se #> 188                                                                              chetri-ta ²to-cim-ro, ²pho-se #> 189                                                                              chetri-ta ²to-cim-ro, ²pho-se #> 190                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 191                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 192                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 193                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 194                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 195                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 196                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 197                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 198                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 199                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 200                            «lu:, ¹ŋa-ca chetri ⁴to:-ci », ³pi-si, chetri, «¹ŋa-ta jat ¹jaŋ-ci, jat ¹ta-ci» #> 201                                                                  ³ot-che ⁴cama, ⁴meme ¹khe ²som ¹ta-cim-ro #> 202                                                                  ³ot-che ⁴cama, ⁴meme ¹khe ²som ¹ta-cim-ro #> 203                                                                  ³ot-che ⁴cama, ⁴meme ¹khe ²som ¹ta-cim-ro #> 204                                                                  ³ot-che ⁴cama, ⁴meme ¹khe ²som ¹ta-cim-ro #> 205                                                                  ³ot-che ⁴cama, ⁴meme ¹khe ²som ¹ta-cim-ro #> 206                                                                  ³ot-che ⁴cama, ⁴meme ¹khe ²som ¹ta-cim-ro #> 207                                                                                         ⁴meme ¹khe ²som-la #> 208                                                                                         ⁴meme ¹khe ²som-la #> 209                                                                                         ⁴meme ¹khe ²som-la #> 210                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 211                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 212                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 213                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 214                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 215                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 216                                                              ⁴unma ⁴taŋpo ⁴tui-ri, ⁴meme ¹khe ²som ³naŋ-la #> 217                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 218                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 219                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 220                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 221                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 222                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 223                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 224                                             ⁴cama, ¹tor ³poi-se, ³poi ⁴kjam-se ⁴cama, ¹mar ¹phep-ka-cim-ro #> 225                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 226                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 227                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 228                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 229                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 230                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 231                                                 ³poi ⁴kjam-se, ¹mar ¹phep-ka-si, ³poi-se ¹mar ¹phep-ka-si, #> 232                                                                 ¹tor-se ²choŋ-tui-jul-ʈi ³tan ¹sja:-cim-ro #> 233                                                                 ¹tor-se ²choŋ-tui-jul-ʈi ³tan ¹sja:-cim-ro #> 234                                                                 ¹tor-se ²choŋ-tui-jul-ʈi ³tan ¹sja:-cim-ro #> 235                                                                 ¹tor-se ²choŋ-tui-jul-ʈi ³tan ¹sja:-cim-ro #> 236                                                                             ²choŋ-tui-jul-ʈi ³tan ¹sja:-ma #> 237                                                                             ²choŋ-tui-jul-ʈi ³tan ¹sja:-ma #> 238                                                                             ²choŋ-tui-jul-ʈi ³tan ¹sja:-ma #> 239 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 240 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 241 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 242 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 243 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 244 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 245 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 246 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 247 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 248 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 249 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 250 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 251 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 252 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 253 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 254 ⁴meme ¹khe ²som ³naŋ-ri, ¹moktan ⁴meme ⁴kik, ³kisiŋ ⁴meme ⁴kik, ³joncan ⁴meme ⁴kik, ⁴meme ²som ¹kha-cim-ro #> 255                                                                        ⁴ʈam-ri ³pi-pa, ⁴ʈam-ri ¹phep-ka-si #> 256                                                                        ⁴ʈam-ri ³pi-pa, ⁴ʈam-ri ¹phep-ka-si #> 257                                                                        ⁴ʈam-ri ³pi-pa, ⁴ʈam-ri ¹phep-ka-si #> 258                                                                        ⁴ʈam-ri ³pi-pa, ⁴ʈam-ri ¹phep-ka-si #> 259                                                                         aaa, ⁴meme ⁴kik-se ¹tik ¹ta-cim-ro #> 260                                                                         aaa, ⁴meme ⁴kik-se ¹tik ¹ta-cim-ro #> 261                                                                         aaa, ⁴meme ⁴kik-se ¹tik ¹ta-cim-ro #> 262                                                                         aaa, ⁴meme ⁴kik-se ¹tik ¹ta-cim-ro #> 263                                                                         aaa, ⁴meme ⁴kik-se ¹tik ¹ta-cim-ro #> 264                                                                  ²kjui ¹phju:-si ²auti-n tirsan ¹ta-cim-ro #> 265                                                                  ²kjui ¹phju:-si ²auti-n tirsan ¹ta-cim-ro #> 266                                                                  ²kjui ¹phju:-si ²auti-n tirsan ¹ta-cim-ro #> 267                                                                  ²kjui ¹phju:-si ²auti-n tirsan ¹ta-cim-ro #> 268                                                                  ²kjui ¹phju:-si ²auti-n tirsan ¹ta-cim-ro #> 269                                                          tirsana ¹ta-ma, ²kjui ¹phju:-si,   ??   pal-ʈi-mi #> 270                                                          tirsana ¹ta-ma, ²kjui ¹phju:-si,   ??   pal-ʈi-mi #> 271                                                          tirsana ¹ta-ma, ²kjui ¹phju:-si,   ??   pal-ʈi-mi #> 272                                                          tirsana ¹ta-ma, ²kjui ¹phju:-si,   ??   pal-ʈi-mi #> 273                                                          tirsana ¹ta-ma, ²kjui ¹phju:-si,   ??   pal-ʈi-mi #> 274                                                                              ⁴meme ⁴kik-se ¹tik ³pi-cim-ro #> 275                                                                              ⁴meme ⁴kik-se ¹tik ³pi-cim-ro #> 276                                                                              ⁴meme ⁴kik-se ¹tik ³pi-cim-ro #> 277                                                                              ⁴meme ⁴kik-se ¹tik ³pi-cim-ro #> 278                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 279                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 280                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 281                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 282                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 283                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 284                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 285                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 286                                          « lau, ⁴tamo, ⁴jaŋ-ta ²kjui ¹phju:-ci, ⁴tamo ¹tik lasai », ³pi-ma #> 287                                                                                    « ¹ŋa-i ²kjui ²tat-la » #> 288                                                                                    « ¹ŋa-i ²kjui ²tat-la » #> 289                                                                                    « ¹ŋa-i ²kjui ²tat-la » #> 290                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 291                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 292                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 293                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 294                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 295                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 296                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 297                                         « ²ai-se ²kjui ²tat-sam, ¹ŋa-i ⁴mar-la ¹chaŋ ²ra:-la », ³pi-cim-ro #> 298                                                                       « ⁴mar-la ¹chaŋ ²ra:la », ³pi-cim-ro #> 299                                                                       « ⁴mar-la ¹chaŋ ²ra:la », ³pi-cim-ro #> 300                                                                       « ⁴mar-la ¹chaŋ ²ra:la », ³pi-cim-ro #> 301                                                                       « ⁴mar-la ¹chaŋ ²ra:la », ³pi-cim-ro #> 302                                                               ³to:si ⁴meme ⁴kik-se ¹tik ³pi-cim-ro ³pi-sam #> 303                                                               ³to:si ⁴meme ⁴kik-se ¹tik ³pi-cim-ro ³pi-sam #> 304                                                               ³to:si ⁴meme ⁴kik-se ¹tik ³pi-cim-ro ³pi-sam #> 305                                                               ³to:si ⁴meme ⁴kik-se ¹tik ³pi-cim-ro ³pi-sam #> 306                                                               ³to:si ⁴meme ⁴kik-se ¹tik ³pi-cim-ro ³pi-sam #> 307                                                               ³to:si ⁴meme ⁴kik-se ¹tik ³pi-cim-ro ³pi-sam #> 308                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 309                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 310                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 311                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 312                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 313                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 314                                                    « ³ca-sam ¹ŋa-i ⁴kjam, ¹ŋa-i-ca ⁴kjam ²tat-la », ³pi-si #> 315               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 316               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 317               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 318               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 319               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 320               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 321               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 322               ¹moktan ⁴meme-se pacar-se ⁴plo:-si, pahara\\n            pacar-se ⁴plo:-si, ²kjui ²tat-cim-ro #> 323                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 324                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 325                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 326                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 327                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 328                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 329                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 330                                  ³joncan ⁴meme-se, ³joncan ⁴meme-ca-se, ⁴mar-la ¹chaŋ-ri ²kjui ²ta:-cim-ro #> 331                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 332                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 333                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 334                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 335                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 336                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 337                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 338                                          ³kisiŋ ⁴meme-ca-se (bis) ⁴jaŋ ⁴pra-pa-r' ³pi-si ⁴kjam ²tat-cim-ro #> 339                                                                                               lu, ²ot-ce-n #> 340                                                                                               lu, ²ot-ce-n #>                                                                                               sent_translation #> 1                                                         autrefois, dans les temps anciens, là-haut, au Tibet #> 2                                                         autrefois, dans les temps anciens, là-haut, au Tibet #> 3                                                         autrefois, dans les temps anciens, là-haut, au Tibet #> 4                                                         autrefois, dans les temps anciens, là-haut, au Tibet #> 5                                                         autrefois, dans les temps anciens, là-haut, au Tibet #> 6                                                    autrefois, dans les temps anciens, là-haut, au Tibet donc #> 7                                                    autrefois, dans les temps anciens, là-haut, au Tibet donc #> 8                                                    autrefois, dans les temps anciens, là-haut, au Tibet donc #> 9                                                    autrefois, dans les temps anciens, là-haut, au Tibet donc #> 10                                                   autrefois, dans les temps anciens, là-haut, au Tibet donc #> 11                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 12                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 13                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 14                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 15                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 16                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 17                                          il y avait un chetri, un brahmane et un tamang ; ils étaient trois #> 18                                                                                             parmi ces trois #> 19                                                                   la mère était une vache, le père un singe #> 20                                                                   la mère était une vache, le père un singe #> 21                                                                   la mère était une vache, le père un singe #> 22                                                                   la mère était une vache, le père un singe #> 23                                                                                           la mère leur dit: #> 24                                                                                           la mère leur dit: #> 25                                                                                           la mère leur dit: #> 26                                                                                  aux trois frères ses fils, #> 27                                                                                  aux trois frères ses fils, #> 28                                                                                  aux trois frères ses fils, #> 29                                                               alors, quand je mourrai, à l'heure de ma mort #> 30                                                               alors, quand je mourrai, à l'heure de ma mort #> 31                                                               alors, quand je mourrai, à l'heure de ma mort #> 32                                                               alors, quand je mourrai, à l'heure de ma mort #> 33                                                               alors, quand je mourrai, à l'heure de ma mort #> 34                                                               alors, quand je mourrai, à l'heure de ma mort #> 35                                                               alors, quand je mourrai, à l'heure de ma mort #> 36                                                               alors, quand je mourrai, à l'heure de ma mort #> 37                                                  ma chair, vous autres, ne l'incinérer pas, ne la jetez pas #> 38                                                  ma chair, vous autres, ne l'incinérer pas, ne la jetez pas #> 39                                                  ma chair, vous autres, ne l'incinérer pas, ne la jetez pas #> 40                                                  ma chair, vous autres, ne l'incinérer pas, ne la jetez pas #> 41                                                  ma chair, vous autres, ne l'incinérer pas, ne la jetez pas #> 42                                                          ma chair, vous autres enfants, mangez-la, dit-elle #> 43                                                          ma chair, vous autres enfants, mangez-la, dit-elle #> 44                                                          ma chair, vous autres enfants, mangez-la, dit-elle #> 45                                                          ma chair, vous autres enfants, mangez-la, dit-elle #> 46                                                          ma chair, vous autres enfants, mangez-la, dit-elle #> 47                                                          ma chair, vous autres enfants, mangez-la, dit-elle #> 48                                                                            avec ces paroles, la mère mourut #> 49                                                                            avec ces paroles, la mère mourut #> 50                                                                            avec ces paroles, la mère mourut #> 51                                                                            avec ces paroles, la mère mourut #> 52                                                                            avec ces paroles, la mère mourut #> 53                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 54                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 55                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 56                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 57                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 58                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 59                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 60                                                   les trois fils dépecèrent leur mère, la découpèrent (bis) #> 61                                                                                          le fils aîné (euh) #> 62                                                                                          le fils aîné (euh) #> 63                                                                                          le fils aîné (euh) #> 64                                                                           l'aîné et le second découpèrent,  #> 65                                                                           l'aîné et le second découpèrent,  #> 66                                                                           l'aîné et le second découpèrent,  #> 67                                                            et ils envoyèrent le plus jeune laver les boyaux #> 68                                                            et ils envoyèrent le plus jeune laver les boyaux #> 69                                                            et ils envoyèrent le plus jeune laver les boyaux #> 70                                                            et ils envoyèrent le plus jeune laver les boyaux #> 71                                                            et ils envoyèrent le plus jeune laver les boyaux #> 72                                                               ils envoyèrent le plus jeune laver les boyaux #> 73                                                               ils envoyèrent le plus jeune laver les boyaux #> 74                                                               ils envoyèrent le plus jeune laver les boyaux #> 75                                                               ils envoyèrent le plus jeune laver les boyaux #> 76                                                               ils envoyèrent le plus jeune laver les boyaux #> 77                                                                       et quand il rapporta les boyaux lavés #> 78                                                                       et quand il rapporta les boyaux lavés #> 79                                                                       et quand il rapporta les boyaux lavés #> 80                                                                           que firent ses deux grands frères #> 81                                                                           que firent ses deux grands frères #> 82                                                                           que firent ses deux grands frères #> 83                                                                           que firent ses deux grands frères #> 84                                                                           que firent ses deux grands frères #> 85                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 86                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 87                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 88                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 89                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 90                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 91                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 92                                             ayant rôti la viande, (bis) comme ça, ils en firent trois parts #> 93                                                            les deux grands frères cachèrent vite leur part  #> 94                                                            les deux grands frères cachèrent vite leur part  #> 95                                                            les deux grands frères cachèrent vite leur part  #> 96                                                            les deux grands frères cachèrent vite leur part  #> 97                                                            les deux grands frères cachèrent vite leur part  #> 98                                                            les deux grands frères cachèrent vite leur part  #> 99                                                et la part du jeune frère qui revenait ayant lavé les boyaux #> 100                                               et la part du jeune frère qui revenait ayant lavé les boyaux #> 101                                               et la part du jeune frère qui revenait ayant lavé les boyaux #> 102                                               et la part du jeune frère qui revenait ayant lavé les boyaux #> 103                                               et la part du jeune frère qui revenait ayant lavé les boyaux #> 104                                                              « frère, frère, nous autres avons mangé avant #> 105                                                              « frère, frère, nous autres avons mangé avant #> 106                                                              « frère, frère, nous autres avons mangé avant #> 107                                                              « frère, frère, nous autres avons mangé avant #> 108                                                              « frère, frère, nous autres avons mangé avant #> 109                                                                                         ta part est ici », #> 110                                                                                         ta part est ici », #> 111                                                                                         ta part est ici », #> 112                                                                                         ta part est ici », #> 113                                                                              dirent les deux frères aînés. #> 114                                                                              dirent les deux frères aînés. #> 115                                                                              dirent les deux frères aînés. #> 116                                                                              dirent les deux frères aînés. #> 117                                                               alors, le jeune frère, crut que c'était vrai #> 118                                                               alors, le jeune frère, crut que c'était vrai #> 119                                                               alors, le jeune frère, crut que c'était vrai #> 120                                                               alors, le jeune frère, crut que c'était vrai #> 121                                                               alors, le jeune frère, crut que c'était vrai #> 122                                                               alors, le jeune frère, crut que c'était vrai #> 123                                                               alors, le jeune frère, crut que c'était vrai #> 124                                                                            il le crut, et mangea la viande #> 125                                                                            il le crut, et mangea la viande #> 126                                                                            il le crut, et mangea la viande #> 127                                                                            il le crut, et mangea la viande #> 128                                                                            il le crut, et mangea la viande #> 129                                                                             quand il eut mangé la viande,  #> 130                                                                             quand il eut mangé la viande,  #> 131                                                                             quand il eut mangé la viande,  #> 132                                                                                 que dirent les deux aînés? #> 133                                                                                 que dirent les deux aînés? #> 134                                                                                 que dirent les deux aînés? #> 135                                                                                 que dirent les deux aînés? #> 136                                                                                « frère, quel pêcheur tu es #> 137                                                                                « frère, quel pêcheur tu es #> 138                                                                                « frère, quel pêcheur tu es #> 139                                                                                « frère, quel pêcheur tu es #> 140                                                                                   le père qui donne la vie #> 141                                                                                   le père qui donne la vie #> 142                                                                                   le père qui donne la vie #> 143                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 144                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 145                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 146                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 147                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 148                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 149                                          la mère qui donne la vie, tu a pu manger sa chair sans broncher,  #> 150                                                   tu a pu manger la chair de ta mère sans broncher, ma foi #> 151                                                   tu a pu manger la chair de ta mère sans broncher, ma foi #> 152                                                   tu a pu manger la chair de ta mère sans broncher, ma foi #> 153                                                   tu a pu manger la chair de ta mère sans broncher, ma foi #> 154                                                   tu a pu manger la chair de ta mère sans broncher, ma foi #> 155                                                   tu a pu manger la chair de ta mère sans broncher, ma foi #> 156                                                         nous autres ne l'avons pas mangé, tiens, regarde » #> 157                                                         nous autres ne l'avons pas mangé, tiens, regarde » #> 158                                                         nous autres ne l'avons pas mangé, tiens, regarde » #> 159                                                         nous autres ne l'avons pas mangé, tiens, regarde » #> 160                                                                                     quand il lui dirent ça #> 161                                                                                     quand il lui dirent ça #> 162                                                                                    le jeune frère, furieux #> 163                                                                                    le jeune frère, furieux #> 164                                                                                    le jeune frère, furieux #> 165                                                                                    le jeune frère, furieux #> 166                                                                                    le jeune frère, furieux #> 167                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 168                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 169                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 170                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 171                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 172                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 173                                         furieux, avec cette viande, avec les boyaux, il frappa le brahmane #> 174            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 175            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 176            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 177            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 178            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 179            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 180            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 181            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 182            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 183            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 184            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 185            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 186            « bon, je suis brahmane maintenant, j'ai trouvé ma caste », dit-il, « je suis devenu brahmane » #> 187                                                                         il frappa le chetri avec l'estomac #> 188                                                                         il frappa le chetri avec l'estomac #> 189                                                                         il frappa le chetri avec l'estomac #> 190                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 191                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 192                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 193                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 194                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 195                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 196                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 197                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 198                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 199                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 200                            « bon, je suis devenu chetri », dit-il, « j'ai trouvé ma caste, j'ai ma caste » #> 201                                                                      ainsi, alors, il y eut trois ancêtres #> 202                                                                      ainsi, alors, il y eut trois ancêtres #> 203                                                                      ainsi, alors, il y eut trois ancêtres #> 204                                                                      ainsi, alors, il y eut trois ancêtres #> 205                                                                      ainsi, alors, il y eut trois ancêtres #> 206                                                                      ainsi, alors, il y eut trois ancêtres #> 207                                                                                         ces trois ancêtres #> 208                                                                                         ces trois ancêtres #> 209                                                                                         ces trois ancêtres #> 210                                                                        autrefois, parmi ces trois ancêtres #> 211                                                                        autrefois, parmi ces trois ancêtres #> 212                                                                        autrefois, parmi ces trois ancêtres #> 213                                                                        autrefois, parmi ces trois ancêtres #> 214                                                                        autrefois, parmi ces trois ancêtres #> 215                                                                        autrefois, parmi ces trois ancêtres #> 216                                                                        autrefois, parmi ces trois ancêtres #> 217                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 218                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 219                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 220                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 221                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 222                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 223                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 224                                                   alors, du Tibet, alors venant du Tibet, ils descendirent #> 225                                                                                     en descendant du Tibet #> 226                                                                                     en descendant du Tibet #> 227                                                                                     en descendant du Tibet #> 228                                                                                     en descendant du Tibet #> 229                                                                                     en descendant du Tibet #> 230                                                                                     en descendant du Tibet #> 231                                                                                     en descendant du Tibet #> 232                                                           venant d'en haut, ils séjournèrent à Chongduiyul #> 233                                                           venant d'en haut, ils séjournèrent à Chongduiyul #> 234                                                           venant d'en haut, ils séjournèrent à Chongduiyul #> 235                                                           venant d'en haut, ils séjournèrent à Chongduiyul #> 236                                                                       comme ils séjournaient à Chongduiyul #> 237                                                                       comme ils séjournaient à Chongduiyul #> 238                                                                       comme ils séjournaient à Chongduiyul #> 239 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 240 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 241 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 242 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 243 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 244 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 245 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 246 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 247 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 248 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 249 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 250 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 251 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 252 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 253 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 254 parmi les trois ancêtres, l'ancêtre Moktan, l'ancêtre Gising, l'ancêtre Yoncan, les trois ancêtres vinrent #> 255                                                              au lieu dit Tram, à Tram quand ils arrivèrent #> 256                                                              au lieu dit Tram, à Tram quand ils arrivèrent #> 257                                                              au lieu dit Tram, à Tram quand ils arrivèrent #> 258                                                              au lieu dit Tram, à Tram quand ils arrivèrent #> 259                                                                    aaa, qu'arriva-t-il à l'un des ancêtres #> 260                                                                    aaa, qu'arriva-t-il à l'un des ancêtres #> 261                                                                    aaa, qu'arriva-t-il à l'un des ancêtres #> 262                                                                    aaa, qu'arriva-t-il à l'un des ancêtres #> 263                                                                    aaa, qu'arriva-t-il à l'un des ancêtres #> 264                                                                                       il fut très assoiffé #> 265                                                                                       il fut très assoiffé #> 266                                                                                       il fut très assoiffé #> 267                                                                                       il fut très assoiffé #> 268                                                                                       il fut très assoiffé #> 269                                                                                  comme il mourrait de soif #> 270                                                                                  comme il mourrait de soif #> 271                                                                                  comme il mourrait de soif #> 272                                                                                  comme il mourrait de soif #> 273                                                                                  comme il mourrait de soif #> 274                                                                                          que dit l'ancêtre #> 275                                                                                          que dit l'ancêtre #> 276                                                                                          que dit l'ancêtre #> 277                                                                                          que dit l'ancêtre #> 278                                                            « là, maintenant j'ai soif, que faire », dit-il #> 279                                                            « là, maintenant j'ai soif, que faire », dit-il #> 280                                                            « là, maintenant j'ai soif, que faire », dit-il #> 281                                                            « là, maintenant j'ai soif, que faire », dit-il #> 282                                                            « là, maintenant j'ai soif, que faire », dit-il #> 283                                                            « là, maintenant j'ai soif, que faire », dit-il #> 284                                                            « là, maintenant j'ai soif, que faire », dit-il #> 285                                                            « là, maintenant j'ai soif, que faire », dit-il #> 286                                                            « là, maintenant j'ai soif, que faire », dit-il #> 287                                                                                « je vais puiser de l'eau » #> 288                                                                                « je vais puiser de l'eau » #> 289                                                                                « je vais puiser de l'eau » #> 290                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 291                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 292                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 293                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 294                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 295                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 296                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 297                                                       « si tu puises de l'eau, je tisserai une hotte d'or, #> 298                                                                               je tisserai une hotte d'or » #> 299                                                                               je tisserai une hotte d'or » #> 300                                                                               je tisserai une hotte d'or » #> 301                                                                               je tisserai une hotte d'or » #> 302                                                                        et après, que dit un des ancêtres:  #> 303                                                                        et après, que dit un des ancêtres:  #> 304                                                                        et après, que dit un des ancêtres:  #> 305                                                                        et après, que dit un des ancêtres:  #> 306                                                                        et après, que dit un des ancêtres:  #> 307                                                                        et après, que dit un des ancêtres:  #> 308                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 309                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 310                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 311                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 312                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 313                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 314                                           « dans ce cas moi un chemin, moi je tracerai un chemin », dit-il #> 315                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 316                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 317                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 318                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 319                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 320                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 321                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 322                               l'ancêtre Moktan, perça la montagne avec sa foudre et en fit sortir de l'eau #> 323                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 324                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 325                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 326                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 327                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 328                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 329                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 330                                                      l'ancêtre Yoncan recueillit l'eau dans une hotte d'or #> 331                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 332                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 333                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 334                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 335                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 336                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 337                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 338                                                    l'ancêtre Gising révéla un chemin pour notre migration. #> 339                                                                                           bon, c'est tout. #> 340                                                                                           bon, c'est tout."},{"path":"https://rezonators.github.io/rezonateR/reference/rez_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename rezrDF columns. — rez_rename","title":"Rename rezrDF columns. — rez_rename","text":"Rename rezrDF columns.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename rezrDF columns. — rez_rename","text":"","code":"rez_rename(df, ...)"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename rezrDF columns. — rez_rename","text":"df data frame modified. ... Functions passed rename. New column names argument names; old column names argument values.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename rezrDF columns. — rez_rename","text":"rezrDF object.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_rename.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rename rezrDF columns. — rez_rename","text":"function update foreign references field renaming. sure update updateFunctions fields; otherwise, break rezrObj.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select columns in a rezrDF — rez_select","title":"Select columns in a rezrDF — rez_select","text":"main difference dplyr select attributes updated remove fields longer . differences moment.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select columns in a rezrDF — rez_select","text":"","code":"rez_select(df, ...)"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select columns in a rezrDF — rez_select","text":"df rezrDF object ... Functions passed dplyr select","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select columns in a rezrDF — rez_select","text":"rezrDF object required columns","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_validate_fieldchange.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a field change. — rez_validate_fieldchange","title":"Validate a field change. — rez_validate_fieldchange","text":"ordinarily called users; automatically called functions like changeFieldLocal, changeFieldForeign rez_mutate. function ensures fields DF wish change actually good idea change. produces error primary key among fields wish change, warnings otherwise. automatically called use rezonateR-internal function rez_mutate.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rez_validate_fieldchange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a field change. — rez_validate_fieldchange","text":"","code":"rez_validate_fieldchange(   df,   changedFields,   changingStatus = F,   fieldaccess = \"\" )"},{"path":"https://rezonators.github.io/rezonateR/reference/rez_validate_fieldchange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a field change. — rez_validate_fieldchange","text":"df rezrDF planning change. changedFields fields want change.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rw.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write rezrDFs as CSV files — rez_write_csv","title":"Read and write rezrDFs as CSV files — rez_write_csv","text":"Replacement readr read_csv write_csv, contains added functionality dealing rezrDFs easily.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write rezrDFs as CSV files — rez_write_csv","text":"","code":"rez_write_csv(df, path, inclCols = character(0), exclCols = character(0), ...)  rez_read_csv(   path,   origDF = NULL,   lubridate = F,   inclCols = character(0),   exclCols = character(0),   ... )"},{"path":"https://rezonators.github.io/rezonateR/reference/rw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write rezrDFs as CSV files — rez_write_csv","text":"df rezrDF exported. path path CSV imported / exported. inclCols Columns included import / export. exclCols Columns excluded import / export. ... Arguments passed onto read_csv write_csv. origDF rezrDF originally produced CSV, used identify data types columns. lubridate using lubridate package?","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/rw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write rezrDFs as CSV files — rez_write_csv","text":"rez_read_csv, data.frame CSV imported. rezrDF, please assign rezrObj; use updateFromDF update existing rezrDF imported data.frame.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/saveload.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and load rezrObj and rezrDF objects. — rez_save","title":"Save and load rezrObj and rezrDF objects. — rez_save","text":"Save load rezrObj rezrDF objects.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/saveload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and load rezrObj and rezrDF objects. — rez_save","text":"","code":"rez_save(obj, filename)  rez_load(filename)"},{"path":"https://rezonators.github.io/rezonateR/reference/saveload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and load rezrObj and rezrDF objects. — rez_save","text":"obj object like save. filename filename, ending .Rdata, like save .","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/saveload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and load rezrObj and rezrDF objects. — rez_save","text":"rez_load, saved rezrObj rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/stringToFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the strings in a rezrDF to factors — stringToFactor","title":"Change the strings in a rezrDF to factors — stringToFactor","text":"Change strings rezrDF factors","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/stringToFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the strings in a rezrDF to factors — stringToFactor","text":"","code":"stringToFactor(df, colsToChange = NULL, levels = list())"},{"path":"https://rezonators.github.io/rezonateR/reference/stringToFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the strings in a rezrDF to factors — stringToFactor","text":"df data.frame modified. colsToChange columns modified. left blank, character columns factor-fied. levels Factor levels, list label column name.","code":""},{"path":[]},{"path":"https://rezonators.github.io/rezonateR/reference/trackPrevContext.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions related to mentions of the same entity in previous/following context in track chains. — lastMentionUnit","title":"Functions related to mentions of the same entity in previous/following context in track chains. — lastMentionUnit","text":"See also countCompetitors.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/trackPrevContext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions related to mentions of the same entity in previous/following context in track chains. — lastMentionUnit","text":"","code":"lastMentionUnit(unitSeq = NULL, chain = NULL)  unitsToLastMention(unitSeq = NULL, chain = NULL)  lastMentionToken(tokenOrder = NULL, chain = NULL)  tokensToLastMention(   tokenOrder = NULL,   chain = NULL,   zeroProtocol = \"literal\",   zeroCond = NULL,   unitSeq = NULL,   unitDF = NULL )  countPrevMentions(windowSize, unitSeq = NULL, chain = NULL)  countPrevMentionsIf(windowSize, cond, unitSeq = NULL, chain = NULL)  countPrevMentionsMatch(windowSize, field, unitSeq = NULL, chain = NULL)  getPrevMentionField(field, tokenOrder = NULL, chain = NULL)  nextMentionUnit(unitSeq = NULL, chain = NULL)  unitsToNextMention(unitSeq = NULL, chain = NULL)  nextMentionToken(tokenOrder = NULL, chain = NULL)  tokensToNextMention(   tokenOrder = NULL,   chain = NULL,   zeroProtocol = \"literal\",   zeroCond = NULL,   unitSeq = NULL,   unitDF = NULL )  countNextMentions(windowSize, unitSeq = NULL, chain = NULL)  countNextMentionsIf(windowSize, cond, unitSeq = NULL, chain = NULL)  countNextMentionsMatch(windowSize, field, unitSeq = NULL, chain = NULL)  getNextMentionField(field, tokenOrder = NULL, chain = NULL)  countPrevBridges(   windowSize,   frameMatrix,   unitSeq = NULL,   chain = NULL,   inclRelations = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/trackPrevContext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions related to mentions of the same entity in previous/following context in track chains. — lastMentionUnit","text":"unitSeq vector tokenOrder values mentions appeared. can choose tokenOrderFirst, tokenOrderFirst, maybe average two. default tokenOrderFirst. chain chain mention belongs . tokenOrder vector sequence values values mentions appeared. Common choices docTokenSeqFirst, docTokenSeqLast, wordTokenSeqFirst wordTokenseqLast (last two available running addIsWordField rezrObj. default docTokenSeqLast. zeroProtocol 'literal', take seq values zeroes face value. (set zeros non-words use docWordSeqFirst discourseWordSeLast tokenOrder, lead meaningless values.) 'unitFinal', treat zeroes final word unit. 'unitFirst', treat zeroes first word unit. zeroCond condition determining whether token zero. people, (word column) == \"<0>\". windowSize size window counting. cond functions, condition previous / next mention must satisfy. refer current mention. field field whose value want match extract.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFromDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a rezrDF using data from another data frame — updateFromDF","title":"Update a rezrDF using data from another data frame — updateFromDF","text":"Update rezrDF using data another data frame","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFromDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a rezrDF using data from another data frame — updateFromDF","text":"","code":"updateFromDF(   targetDF,   changeDF,   changeCols = NULL,   changeType = \"flex\",   renameCols = F,   colCorr = list(),   delRows = F,   addRows = F,   addCols = F,   reloadAfterCorr = T,   rezrObj = NULL )"},{"path":"https://rezonators.github.io/rezonateR/reference/updateFromDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a rezrDF using data from another data frame — updateFromDF","text":"targetDF target rezrDF. changeDF data frame, necessarily rezrDF, changes pulled. changeCols Columns changed. changeType types columns (field access terms) change? renameCols rename columns according new data frame? colCorr renameCols = T, list names new names values old names. renameCols = F, opposite. delRows delete rows targetDF present changeDF? addRows add rows targetDF present targetDF? addCols add columns present changeDF targetDF? reloadAfterCorr like local reload rezrDF afterwards (rezrObj supplied) full reload (rezrObj supplied)? rezrObj rezrObj, like full reload.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFromDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a rezrDF using data from another data frame — updateFromDF","text":"updated rezrDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFromDF.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Update a rezrDF using data from another data frame — updateFromDF","text":"often used updating rezrDF using data CSV used manual annotation.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"A constructor function for updateFunction objects — new_updateFunction","title":"A constructor function for updateFunction objects — new_updateFunction","text":"constructor function updateFunction objects","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A constructor function for updateFunction objects — new_updateFunction","text":"","code":"new_updateFunction(f, deps)"},{"path":"https://rezonators.github.io/rezonateR/reference/updateFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A constructor function for updateFunction objects — new_updateFunction","text":"f function . deps dependencies function. Either vector single field names, single foreign field specified using address, e.g. 'chunkDF/refexpr/word' refers word field refexpr layer chunkDF.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A constructor function for updateFunction objects — new_updateFunction","text":"updateFunction object","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateLeftJoin.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a field using a left join. — updateLeftJoin","title":"Update a field using a left join. — updateLeftJoin","text":"normally called users, acts updateFunct called reload.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateLeftJoin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a field using a left join. — updateLeftJoin","text":"","code":"updateLeftJoin(df1, rezrObj, address, fkey, df2key = \"\", field = \"\")"},{"path":"https://rezonators.github.io/rezonateR/reference/updateLeftJoin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a field using a left join. — updateLeftJoin","text":"df1 rezrDF updated. rezrObj full rezrObj. address address field original DF, rezrObj root. example, 'word' field tokenDF address 'tokenDF/word', 'word' field 'verb' layer chunkDF address 'chunkDF/verb/word'. may multiple-entry vector want merge source DFs. fkey foreign key(s). match number primary keys df pulling information (.e. fieldaccess set 'key'). df2key name candidate key source table corresponds foreign key target table. left unspecified, use primary key. field name field target rezrDF updated. field names source DFs also name target DF, may leave unspecified.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateLeftJoin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a field using a left join. — updateLeftJoin","text":"updated data frame.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateLowerToHigher.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a field using a lowerToHigher operation. — updateLowerToHigher","title":"Update a field using a lowerToHigher operation. — updateLowerToHigher","text":"normally called users, acts updateFunct called reload.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateLowerToHigher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a field using a lowerToHigher operation. — updateLowerToHigher","text":"","code":"updateLowerToHigher(   df,   rezrObj,   address,   fkeyAddress,   action,   field = \"\",   fkeyInDF = FALSE,   seqName = \"docTokenSeq\" )"},{"path":"https://rezonators.github.io/rezonateR/reference/updateLowerToHigher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a field using a lowerToHigher operation. — updateLowerToHigher","text":"df target rezrDF updated. rezrObj full rezrObj. address address field original df, rezrObj root. example, 'word' field tokenDF address 'tokenDF/word', 'word' field 'verb' layer chunkDF address 'chunkDF/verb/word'. fkeyAddress fkeyInDF = FALSE, address list foreign keys inside nodeMap (root rezrObj). fkeyInDF = TRUE, field target rezrDF containing vector foreign keys (currently supported result error). action function performed values source rezrDF combine single value. field name field target rezrDF updated. field names source DFs also name target DF, may leave unspecified. fkeyInDF See fkey description.","code":""},{"path":"https://rezonators.github.io/rezonateR/reference/updateLowerToHigher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a field using a lowerToHigher operation. — updateLowerToHigher","text":"updated data frame.","code":""}]
