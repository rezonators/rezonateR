% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_csv.R
\name{rez_write_csv}
\alias{rez_write_csv}
\alias{rez_read_csv}
\title{Read and write \code{rezrDF}s as CSV files}
\usage{
rez_write_csv(df, path, inclCols = character(0), exclCols = character(0), ...)

rez_read_csv(
  path,
  origDF = NULL,
  lubridate = F,
  inclCols = character(0),
  exclCols = character(0),
  ...
)
}
\arguments{
\item{df}{The \code{rezrDF} to be exported.}

\item{path}{The path from which a CSV is to be imported / exported.}

\item{inclCols}{Columns to be included from the import / export.}

\item{exclCols}{Columns to be excluded from the import / export.}

\item{...}{Arguments passed onto \code{\link[readr:read_delim]{readr::read_csv()}} and \code{\link[readr:write_delim]{readr::write_csv()}}}

\item{origDF}{The \code{rezrDF} that originally produced this CSV, used to identify data types of the columns.}

\item{lubridate}{Are you using the lubridate package?}
}
\value{
For \code{rez_read_csv()}, a data.frame for the CSV being imported. This is NOT a \code{rezrDF}, so please do not assign it to a \code{rezrObj}; use \code{\link[=updateFromDF]{updateFromDF()}} to update an existing rezrDF with the imported data.frame.
}
\description{
Replacement of readr \code{\link[readr:read_delim]{readr::read_csv()}} and \code{\link[readr:write_delim]{readr::write_csv()}}, but contains added functionality for dealing with \code{rezrDF}s more easily.
}
\examples{
#rez_write_csv(sbc007$trackDF$default, "rez007_refexpr.csv", c("id", "tokenOrderLast", "text", "name"))
inpath = system.file("extdata", "rez007_refexpr_edited.csv", package = "rezonateR")
changeDF = rez_read_csv(inpath, origDF = rez007$trackDF$default)
}
