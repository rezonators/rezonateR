% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.R
\name{rez_dfop}
\alias{rez_dfop}
\title{Perform an operation on a data.frame while updating field access status.}
\usage{
rez_dfop(df, .f, ..., fieldaccess = "flex", updateFunct = NA, oldNames = "")
}
\arguments{
\item{df}{The data frame to be modified.}

\item{.f}{The function to be performed.}

\item{...}{Argument to be passed to .f.}

\item{fieldaccess}{The field access status of the field you're addding, either a single character (to apply to all of the new fields) or a vector of characters for each new field. Note that if you are both modifying and adding fields, only the added fields will have access values changed. So if you're specifying an entire vector of field access values, the best practice in using this function is to separate new-field and added-field mutates, otherwise the code will be difficult to read.}
}
\value{
resultDF
}
\description{
This is a wrapper for performing data frame manipulation functions (such as dplyr functions) while also updating field access status. This function only needs to be directly called by advanced users; beginning users may stick to function such as rez_mutate and rez_left_join, which are much more simple and intuitive to use.
}
